{"ts": 1757143746.22973, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\u000benv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757143806.869869, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\u000benv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757144011.6720624, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\u000benv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757144032.9273016, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757144032.948903, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757144033.5932722, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heurística.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canción,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vacía canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757144062.0588908, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757144062.1614976, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144062.5368714, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144062.537942, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144062.537942, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 2, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144062.538876, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757144062.538876, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 3, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757144062.5399444, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 4, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757144062.5399444, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 4, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757144062.5408766, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 5, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757144062.5408766, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 5, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757144062.5408766, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 6, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757144062.5418808, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 6, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757144062.5418808, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 7, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757144062.5428433, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 7, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757144062.5428433, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 8, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757144062.5433748, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 8, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757144062.5433748, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 9, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757144062.5443428, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 9, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757144062.5443428, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 10, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757144062.5443428, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 10, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757144062.5453486, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 11, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757144062.5459871, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 11, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757144062.5459871, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 12, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757144062.5469937, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 12, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757144062.5469937, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 13, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757144062.5469937, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 13, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757144062.5479934, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 14, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757144062.549002, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 14, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757144062.549002, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 15, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757144062.549002, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 15, "result": {"name": "Party", "songs": []}}}
{"ts": 1757144062.5504186, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 16, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757144062.5504186, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 16, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757144062.5504186, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 17, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757144062.5514326, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 17, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757144062.5514326, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 18, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757144062.5514326, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 18, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757144062.5514326, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 19, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757144062.5529337, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 19, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757144267.795741, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757144267.8169477, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144268.3404412, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144268.3404412, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144268.341441, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 2, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144268.3424604, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757144268.3424604, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 3, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757144268.3424604, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 4, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757144268.34386, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 4, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757144268.34386, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 5, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757144268.34386, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 5, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757144268.3449333, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 6, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757144268.3453424, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 6, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757144268.3453424, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 7, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757144268.346153, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 7, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757144268.346153, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 8, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757144268.347162, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 8, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757144268.347162, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 9, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757144268.3481581, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 9, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757144268.3481581, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 10, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757144268.3481581, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 10, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757144268.349159, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 11, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757144268.349159, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 11, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757144268.3503513, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 12, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757144268.3503513, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 12, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757144268.3503513, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 13, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757144268.3513572, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 13, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757144268.3513572, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 14, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757144268.3513572, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 14, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757144268.3525689, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 15, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757144268.3525689, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 15, "result": {"name": "Party", "songs": []}}}
{"ts": 1757144268.3535752, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 16, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757144268.3545835, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 16, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757144268.3545835, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 17, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757144268.3559413, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 17, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757144268.3559413, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 18, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757144268.3559413, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 18, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757144268.3572059, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 19, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757144268.3572059, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 19, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757144298.7024179, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 20, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144298.703411, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 20, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144298.703411, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 21, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757144298.7049105, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 21, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757144298.7049105, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 22, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757144298.7064004, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 22, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757144298.7064004, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 23, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757144298.7064004, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 23, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757144298.7074518, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 24, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757144298.7074518, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 24, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757144298.7074518, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 25, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757144298.7086012, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 25, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757144298.7086012, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 26, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757144298.7086012, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 26, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757144298.7099204, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 27, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757144298.7099204, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 27, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757144298.7099204, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 28, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757144298.710928, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 28, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757144298.710928, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 29, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757144298.710928, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 29, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757144298.7119288, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 30, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757144298.7119288, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 30, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757144298.7119288, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 31, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757144298.7129276, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 31, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757144298.7129276, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 32, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757144298.7129276, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 32, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757144298.7129276, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 33, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757144298.7143617, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 33, "result": {"name": "Party", "songs": []}}}
{"ts": 1757144298.7143617, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 34, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757144298.7143617, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 34, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757144298.7143617, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 35, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757144298.715754, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 35, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757144298.715754, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 36, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757144298.715754, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 36, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757144298.7168758, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 37, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757144298.717325, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 37, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757144302.558913, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 38, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144302.5601392, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 38, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144302.5601392, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 39, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144302.561154, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 39, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144302.561154, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 40, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757144302.561154, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 40, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757144302.562422, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 41, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757144302.562422, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 41, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757144302.562422, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 42, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757144302.5634294, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 42, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757144302.5634294, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 43, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757144302.5644302, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 43, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757144302.5644302, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 44, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757144302.5654283, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 44, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757144302.5654283, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 45, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757144302.5660207, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 45, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757144302.5660207, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 46, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757144302.56689, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 46, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757144302.56689, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 47, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757144302.5679684, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 47, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757144302.5679684, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 48, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757144302.5689607, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 48, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757144302.5689607, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 49, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757144302.5689607, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 49, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757144302.5689607, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 50, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757144302.569961, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 50, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757144302.569961, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 51, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757144302.5709634, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 51, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757144302.5709634, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 52, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757144302.572004, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 52, "result": {"name": "Party", "songs": []}}}
{"ts": 1757144302.572004, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 53, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757144302.572004, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 53, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757144302.572004, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 54, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757144302.572961, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 54, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757144302.572961, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 55, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757144302.572961, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 55, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757144302.572961, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 56, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757144302.574327, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 56, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757144310.591145, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 57, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144310.5916612, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 57, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144310.5923634, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 58, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144310.5929108, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 58, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144310.5934412, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 59, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757144310.5934412, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 59, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757144310.5939796, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 60, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757144310.5947225, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 60, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757144310.5947225, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 61, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757144310.595256, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 61, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757144310.5957925, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 62, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757144310.5963323, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 62, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757144310.5963323, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 63, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757144310.5969417, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 63, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757144310.597669, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 64, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757144310.5982323, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 64, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757144310.5987716, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 65, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757144310.5992875, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 65, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757144310.5992875, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 66, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757144310.5998127, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 66, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757144310.6003387, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 67, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757144310.6003387, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 67, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757144310.600862, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 68, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757144310.6014838, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 68, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757144310.6014838, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 69, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757144310.6019967, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 69, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757144310.6025257, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 70, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757144310.6030447, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 70, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757144310.6030447, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 71, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757144310.6035752, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 71, "result": {"name": "Party", "songs": []}}}
{"ts": 1757144310.604347, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 72, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757144310.6048656, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 72, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757144310.6048656, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 73, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757144310.6053908, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 73, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757144310.6059177, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 74, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757144310.6064405, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 74, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757144310.6064405, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 75, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757144310.606954, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 75, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757144600.8201582, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757144600.8275845, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757144601.2875168, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heur�stica.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canci�n,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vac�a canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757144601.7125754, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757144601.7259648, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144602.1846895, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144602.1856897, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144602.1856897, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 2, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144602.1856897, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757144602.186655, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 3, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757144602.186655, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 4, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757144602.1876612, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 4, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757144602.1876612, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 5, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757144602.1876612, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 5, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757144602.1876612, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 6, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757144602.1886625, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 6, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757144602.189661, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 7, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757144602.189661, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 7, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757144602.189661, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 8, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757144602.189661, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 8, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757144602.191086, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 9, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757144602.191086, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 9, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757144602.191086, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 10, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757144602.1920917, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 10, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757144602.1920917, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 11, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757144602.1930914, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 11, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757144602.1930914, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 12, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757144602.1930914, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 12, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757144602.1930914, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 13, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757144602.194091, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 13, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757144602.1950922, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 14, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757144602.1950922, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 14, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757144602.1950922, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 15, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757144602.196092, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 15, "result": {"name": "Party", "songs": []}}}
{"ts": 1757144602.196092, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 16, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757144602.196092, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 16, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757144602.1971285, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 17, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757144602.1971285, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 17, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757144602.1971285, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 18, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757144602.1980956, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 18, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757144602.1980956, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 19, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757144602.1991012, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 19, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757144608.2109647, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 20, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144608.2120335, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 20, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144608.213035, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 21, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144608.213035, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 21, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144608.214035, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 22, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757144608.214035, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 22, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757144608.214035, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 23, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757144608.2150354, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 23, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757144608.2150354, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 24, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757144608.2150354, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 24, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757144608.2160351, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 25, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757144608.2160351, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 25, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757144608.2170331, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 26, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757144608.2170331, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 26, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757144608.2170331, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 27, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757144608.2180355, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 27, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757144608.2180355, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 28, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757144608.2194712, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 28, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757144608.2194712, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 29, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757144608.2194712, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 29, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757144608.220522, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 30, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757144608.220522, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 30, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757144608.221478, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 31, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757144608.221478, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 31, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757144608.221478, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 32, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757144608.2224772, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 32, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757144608.2224772, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 33, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757144608.2234774, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 33, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757144608.2234774, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 34, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757144608.2234774, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 34, "result": {"name": "Party", "songs": []}}}
{"ts": 1757144608.2246244, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 35, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757144608.2246244, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 35, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757144608.2246244, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 36, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757144608.2256303, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 36, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757144608.2256303, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 37, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757144608.2256303, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 37, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757144608.2266326, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 38, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757144608.2272182, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 38, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757144623.553584, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 39, "method": "tools/call", "params": {"name": "add_song", "arguments": {"title": "Blinding Lights", "artists": "The Weeknd", "workspace": "demo"}}}}
{"ts": 1757144640.0449877, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:106: UserWarning: PySoundFile failed. Trying audioread instead."}
{"ts": 1757144640.0449877, "kind": "mcp_stderr", "line": "  y, sr = librosa.load(audio_path, sr=None, mono=True, duration=max_duration)"}
{"ts": 1757144640.0449877, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Lib\\site-packages\\librosa\\core\\audio.py:184: FutureWarning: librosa.core.audio.__audioread_load"}
{"ts": 1757144640.0449877, "kind": "mcp_stderr", "line": "\tDeprecated as of librosa version 0.10.0."}
{"ts": 1757144640.0469873, "kind": "mcp_stderr", "line": "\tIt will be removed in librosa version 1.0."}
{"ts": 1757144640.0469873, "kind": "mcp_stderr", "line": "  y, sr_native = __audioread_load(path, offset, duration, dtype)"}
{"ts": 1757144653.768256, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757144653.7746825, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 40, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144654.2330327, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 40, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144654.2340326, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 41, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144654.2340326, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 41, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144654.2340326, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 42, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757144654.2351356, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 42, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757144654.2361417, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 43, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757144654.2361417, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 43, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757144654.2361417, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 44, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757144654.2361417, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 44, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757144654.2361417, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 45, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757144654.2375202, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 45, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757144654.2375202, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 46, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757144654.2375202, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 46, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757144654.2385266, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 47, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757144654.2385266, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 47, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757144654.2385266, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 48, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757144654.239526, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 48, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757144654.239526, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 49, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757144654.2405255, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 49, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757144654.2405255, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 50, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757144654.2405255, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 50, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757144654.2405255, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 51, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757144654.2405255, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 51, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757144654.2405255, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 52, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757144654.2419991, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 52, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757144654.2419991, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 53, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757144654.2419991, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 53, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757144654.2419991, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 54, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757144654.2430348, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 54, "result": {"name": "Party", "songs": []}}}
{"ts": 1757144654.2430348, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 55, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757144654.2430348, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 55, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757144654.2440841, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 56, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757144654.2440841, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 56, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757144654.2440841, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 57, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757144654.245319, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 57, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757144654.245319, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 58, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757144654.245319, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 58, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757144656.5433161, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 59, "method": "tools/call", "params": {"name": "add_song", "arguments": {"title": "Blinding Lights", "artists": "The Weeknd", "workspace": "demo"}}}}
{"ts": 1757144659.2712908, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:106: UserWarning: PySoundFile failed. Trying audioread instead."}
{"ts": 1757144659.2712908, "kind": "mcp_stderr", "line": "  y, sr = librosa.load(audio_path, sr=None, mono=True, duration=max_duration)"}
{"ts": 1757144659.2723053, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Lib\\site-packages\\librosa\\core\\audio.py:184: FutureWarning: librosa.core.audio.__audioread_load"}
{"ts": 1757144659.2723053, "kind": "mcp_stderr", "line": "\tDeprecated as of librosa version 0.10.0."}
{"ts": 1757144659.2723053, "kind": "mcp_stderr", "line": "\tIt will be removed in librosa version 1.0."}
{"ts": 1757144659.2733052, "kind": "mcp_stderr", "line": "  y, sr_native = __audioread_load(path, offset, duration, dtype)"}
{"ts": 1757144667.2354705, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:136: FutureWarning: librosa.beat.tempo"}
{"ts": 1757144667.2354705, "kind": "mcp_stderr", "line": "\tThis function was moved to 'librosa.feature.rhythm.tempo' in librosa version 0.10.0."}
{"ts": 1757144667.2365386, "kind": "mcp_stderr", "line": "\tThis alias will be removed in librosa version 1.0."}
{"ts": 1757144667.2365386, "kind": "mcp_stderr", "line": "  bpm_arr = librosa.beat.tempo(y=y, sr=sr, aggregate=np.median)"}
{"ts": 1757144667.872764, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 59, "result": {"status": "ok", "chosen": {"song_id": "14876741-bcd5-47f4-87ca-ddf65de4961d", "title": "Blinding Lights", "artists": "The Weeknd", "duration_sec": 29.976, "bpm": 86.13, "key": "F", "mode": "minor", "energy": 0.649, "brightness": 0.131, "source_url": "https://music.apple.com/us/album/blinding-lights/1499378108?i=1499378607&uo=4", "added_at": 1757144667.872764, "playlist": "Misc"}}}}
{"ts": 1757144667.8758628, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 60, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144667.8767653, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 60, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 1}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144667.8778086, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 61, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144667.8778086, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 61, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 1}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144667.8778086, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 62, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757144667.8787723, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 62, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757144667.8787723, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 63, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757144667.8797643, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 63, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757144667.8797643, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 64, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757144667.8797643, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 64, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757144667.881043, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 65, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757144667.881043, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 65, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757144667.881043, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 66, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757144667.8820512, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 66, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757144667.8820512, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 67, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757144667.8830545, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 67, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757144667.8830545, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 68, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757144667.8840554, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 68, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757144667.8840554, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 69, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757144667.8840554, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 69, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757144667.8850489, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 70, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757144667.8850489, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 70, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757144667.8850489, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 71, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757144667.8863971, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 71, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757144667.8863971, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 72, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757144667.8863971, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 72, "result": {"name": "Misc", "songs": [{"song_id": "14876741-bcd5-47f4-87ca-ddf65de4961d", "title": "Blinding Lights", "artists": "The Weeknd", "duration_sec": 29.976, "bpm": 86.13, "key": "F", "mode": "minor", "energy": 0.649, "brightness": 0.131, "source_url": "https://music.apple.com/us/album/blinding-lights/1499378108?i=1499378607&uo=4", "added_at": 1757144667.872764, "playlist": "Misc"}]}}}
{"ts": 1757144667.8874068, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 73, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757144667.8881779, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 73, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757144667.8881779, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 74, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757144667.8891573, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 74, "result": {"name": "Party", "songs": []}}}
{"ts": 1757144667.8891573, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 75, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757144667.889875, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 75, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757144667.889875, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 76, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757144667.8908896, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 76, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757144667.8908896, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 77, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757144667.8908896, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 77, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757144667.8919253, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 78, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757144667.8919253, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 78, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757144670.895905, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 79, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144670.8969028, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 79, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 1}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144670.8982668, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 80, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144670.8982668, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 80, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 1}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144670.899376, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 81, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757144670.9000094, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 81, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757144670.9000094, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 82, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757144670.900704, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 82, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757144670.900704, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 83, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757144670.9023101, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 83, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757144670.9023101, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 84, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757144670.9023101, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 84, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757144670.9033856, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 85, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757144670.9033856, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 85, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757144670.9033856, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 86, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757144670.9043844, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 86, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757144670.9043844, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 87, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757144670.9053893, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 87, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757144670.9053893, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 88, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757144670.906385, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 88, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757144670.906385, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 89, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757144670.906385, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 89, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757144670.9074788, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 90, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757144670.9074788, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 90, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757144670.9074788, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 91, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757144670.908488, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 91, "result": {"name": "Misc", "songs": [{"song_id": "14876741-bcd5-47f4-87ca-ddf65de4961d", "title": "Blinding Lights", "artists": "The Weeknd", "duration_sec": 29.976, "bpm": 86.13, "key": "F", "mode": "minor", "energy": 0.649, "brightness": 0.131, "source_url": "https://music.apple.com/us/album/blinding-lights/1499378108?i=1499378607&uo=4", "added_at": 1757144667.872764, "playlist": "Misc"}]}}}
{"ts": 1757144670.908488, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 92, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757144670.908488, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 92, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757144670.9095316, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 93, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757144670.9095316, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 93, "result": {"name": "Party", "songs": []}}}
{"ts": 1757144670.9095316, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 94, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757144670.9104848, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 94, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757144670.9104848, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 95, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757144670.9114845, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 95, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757144670.9114845, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 96, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757144670.9114845, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 96, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757144670.9126906, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 97, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757144670.9126906, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 97, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757144716.8744643, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757144716.8820453, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757144717.3454547, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heurística.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canción,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vacía canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757144719.854055, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 98, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144719.854055, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 98, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 1}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144719.855372, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 99, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144719.8563805, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 99, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 1}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144719.8563805, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 100, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757144719.8563805, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 100, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757144719.8574865, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 101, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757144719.8574865, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 101, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757144719.8574865, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 102, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757144719.8584971, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 102, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757144719.8584971, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 103, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757144719.8584971, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 103, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757144719.859524, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 104, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757144719.859524, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 104, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757144719.859524, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 105, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757144719.8604991, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 105, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757144719.8604991, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 106, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757144719.8604991, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 106, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757144719.8604991, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 107, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757144719.8617897, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 107, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757144719.8617897, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 108, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757144719.8627958, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 108, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757144719.8627958, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 109, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757144719.8627958, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 109, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757144719.8627958, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 110, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757144719.8638444, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 110, "result": {"name": "Misc", "songs": [{"song_id": "14876741-bcd5-47f4-87ca-ddf65de4961d", "title": "Blinding Lights", "artists": "The Weeknd", "duration_sec": 29.976, "bpm": 86.13, "key": "F", "mode": "minor", "energy": 0.649, "brightness": 0.131, "source_url": "https://music.apple.com/us/album/blinding-lights/1499378108?i=1499378607&uo=4", "added_at": 1757144667.872764, "playlist": "Misc"}]}}}
{"ts": 1757144719.8638444, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 111, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757144719.8638444, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 111, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757144719.8638444, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 112, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757144719.865294, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 112, "result": {"name": "Party", "songs": []}}}
{"ts": 1757144719.865294, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 113, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757144719.865294, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 113, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757144719.865294, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 114, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757144719.8663852, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 114, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757144719.8663852, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 115, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757144719.8663852, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 115, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757144719.8676379, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 116, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757144719.8676379, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 116, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757144800.844415, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757144800.8500407, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757144801.3070374, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heurística.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canción,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vacía canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757144803.2445674, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 117, "method": "tools/call", "params": {"name": "add_song", "arguments": {"title": "Luismigirl", "artists": "Los Skeepers", "workspace": "demo"}}}}
{"ts": 1757144804.7893546, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:106: UserWarning: PySoundFile failed. Trying audioread instead."}
{"ts": 1757144804.7903626, "kind": "mcp_stderr", "line": "  y, sr = librosa.load(audio_path, sr=None, mono=True, duration=max_duration)"}
{"ts": 1757144804.7903626, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Lib\\site-packages\\librosa\\core\\audio.py:184: FutureWarning: librosa.core.audio.__audioread_load"}
{"ts": 1757144804.7903626, "kind": "mcp_stderr", "line": "\tDeprecated as of librosa version 0.10.0."}
{"ts": 1757144804.7903626, "kind": "mcp_stderr", "line": "\tIt will be removed in librosa version 1.0."}
{"ts": 1757144804.7903626, "kind": "mcp_stderr", "line": "  y, sr_native = __audioread_load(path, offset, duration, dtype)"}
{"ts": 1757144804.9178483, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:136: FutureWarning: librosa.beat.tempo"}
{"ts": 1757144804.9178483, "kind": "mcp_stderr", "line": "\tThis function was moved to 'librosa.feature.rhythm.tempo' in librosa version 0.10.0."}
{"ts": 1757144804.9188495, "kind": "mcp_stderr", "line": "\tThis alias will be removed in librosa version 1.0."}
{"ts": 1757144804.9188495, "kind": "mcp_stderr", "line": "  bpm_arr = librosa.beat.tempo(y=y, sr=sr, aggregate=np.median)"}
{"ts": 1757144805.4595225, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 117, "result": {"status": "ok", "chosen": {"song_id": "4d95e5f0-9ba2-4960-8469-1cb406c753c5", "title": "Luismigirl", "artists": "Los Skeepers", "duration_sec": 29.976, "bpm": 103.36, "key": "E", "mode": "major", "energy": 0.651, "brightness": 0.121, "source_url": "https://music.apple.com/us/album/luismigirl/1819623367?i=1819623368&uo=4", "added_at": 1757144805.4585295, "playlist": "Night Drive"}}}}
{"ts": 1757144805.4626386, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 118, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144805.4626386, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 118, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 1}, {"name": "Night Drive", "count": 1}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144805.4635177, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 119, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144805.4635177, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 119, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 1}, {"name": "Night Drive", "count": 1}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144805.464554, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 120, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757144805.4655178, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 120, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757144805.4655178, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 121, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757144805.4655178, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 121, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757144805.4655178, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 122, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757144805.4665759, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 122, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757144805.4665759, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 123, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757144805.4665759, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 123, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757144805.4665759, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 124, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757144805.4678814, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 124, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757144805.4678814, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 125, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757144805.4678814, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 125, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757144805.4688873, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 126, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757144805.4695, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 126, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757144805.4695, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 127, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757144805.4695, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 127, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757144805.4705355, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 128, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757144805.4705355, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 128, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757144805.4705355, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 129, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757144805.4715412, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 129, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757144805.4715412, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 130, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757144805.4722297, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 130, "result": {"name": "Misc", "songs": [{"song_id": "14876741-bcd5-47f4-87ca-ddf65de4961d", "title": "Blinding Lights", "artists": "The Weeknd", "duration_sec": 29.976, "bpm": 86.13, "key": "F", "mode": "minor", "energy": 0.649, "brightness": 0.131, "source_url": "https://music.apple.com/us/album/blinding-lights/1499378108?i=1499378607&uo=4", "added_at": 1757144667.872764, "playlist": "Misc"}]}}}
{"ts": 1757144805.4722297, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 131, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757144805.4722297, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 131, "result": {"name": "Night Drive", "songs": [{"song_id": "4d95e5f0-9ba2-4960-8469-1cb406c753c5", "title": "Luismigirl", "artists": "Los Skeepers", "duration_sec": 29.976, "bpm": 103.36, "key": "E", "mode": "major", "energy": 0.651, "brightness": 0.121, "source_url": "https://music.apple.com/us/album/luismigirl/1819623367?i=1819623368&uo=4", "added_at": 1757144805.4585295, "playlist": "Night Drive"}]}}}
{"ts": 1757144805.4732375, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 132, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757144805.4732375, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 132, "result": {"name": "Party", "songs": []}}}
{"ts": 1757144805.4732375, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 133, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757144805.4746583, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 133, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757144805.4746583, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 134, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757144805.4746583, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 134, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757144805.4746583, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 135, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757144805.4756649, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 135, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757144805.4756649, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 136, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757144805.4756649, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 136, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757144807.6159117, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 137, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144807.6179056, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 137, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 1}, {"name": "Night Drive", "count": 1}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144807.6179056, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 138, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757144807.6189075, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 138, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 1}, {"name": "Night Drive", "count": 1}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757144807.619907, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 139, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757144807.619907, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 139, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757144807.619907, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 140, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757144807.6209068, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 140, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757144807.6209068, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 141, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757144807.62191, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 141, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757144807.62191, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 142, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757144807.6229048, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 142, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757144807.6229048, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 143, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757144807.6229048, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 143, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757144807.623905, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 144, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757144807.623905, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 144, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757144807.623905, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 145, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757144807.62497, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 145, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757144807.6350117, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 146, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757144807.636081, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 146, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757144807.636081, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 147, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757144807.6370814, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 147, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757144807.6370814, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 148, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757144807.6370814, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 148, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757144807.6380796, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 149, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757144807.6380796, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 149, "result": {"name": "Misc", "songs": [{"song_id": "14876741-bcd5-47f4-87ca-ddf65de4961d", "title": "Blinding Lights", "artists": "The Weeknd", "duration_sec": 29.976, "bpm": 86.13, "key": "F", "mode": "minor", "energy": 0.649, "brightness": 0.131, "source_url": "https://music.apple.com/us/album/blinding-lights/1499378108?i=1499378607&uo=4", "added_at": 1757144667.872764, "playlist": "Misc"}]}}}
{"ts": 1757144807.6391373, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 150, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757144807.6391373, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 150, "result": {"name": "Night Drive", "songs": [{"song_id": "4d95e5f0-9ba2-4960-8469-1cb406c753c5", "title": "Luismigirl", "artists": "Los Skeepers", "duration_sec": 29.976, "bpm": 103.36, "key": "E", "mode": "major", "energy": 0.651, "brightness": 0.121, "source_url": "https://music.apple.com/us/album/luismigirl/1819623367?i=1819623368&uo=4", "added_at": 1757144805.4585295, "playlist": "Night Drive"}]}}}
{"ts": 1757144807.6391373, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 151, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757144807.6400812, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 151, "result": {"name": "Party", "songs": []}}}
{"ts": 1757144807.6400812, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 152, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757144807.64108, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 152, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757144807.64108, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 153, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757144807.64108, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 153, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757144807.6421828, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 154, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757144807.6421828, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 154, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757144807.6430798, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 155, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757144807.6430798, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 155, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757457937.460092, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757457937.4710858, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757457939.1607826, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heur�stica.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canci�n,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vac�a canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757457939.7338805, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757457939.8086164, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757457940.1453395, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757457940.1473541, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757457940.1473541, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 2, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757457940.1473541, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757457940.1483552, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 3, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757457940.1483552, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 4, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757457940.1493547, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 4, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757457940.1493547, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 5, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757457940.1493547, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 5, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757457940.1503537, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 6, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757457940.1503537, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 6, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757457940.1503537, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 7, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757457940.1513572, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 7, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757457940.1513572, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 8, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757457940.1513572, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 8, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757457940.1513572, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 9, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757457940.1523545, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 9, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757457940.1523545, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 10, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757457940.1523545, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 10, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757457940.1533558, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 11, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757457940.1533558, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 11, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757457940.1533558, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 12, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757457940.1543553, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 12, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757457940.1543553, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 13, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757457940.1553543, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 13, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757457940.1553543, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 14, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757457940.1553543, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 14, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757457940.1563485, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 15, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757457940.1563485, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 15, "result": {"name": "Party", "songs": []}}}
{"ts": 1757457940.1563485, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 16, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757457940.15736, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 16, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757457940.1593502, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 17, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757457940.1603503, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 17, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757457940.1603503, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 18, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757457940.1613529, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 18, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757457940.1613529, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 19, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757457940.1623492, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 19, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757457952.1862075, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 20, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757457952.1874776, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 20, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757457952.1874776, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 21, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757457952.1884959, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 21, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757457952.1884959, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 22, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757457952.189483, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 22, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757457952.189483, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 23, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757457952.190488, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 23, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757457952.190488, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 24, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757457952.1914837, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 24, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757457952.1914837, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 25, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757457952.1924834, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 25, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757457952.1924834, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 26, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757457952.1924834, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 26, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757457952.1935802, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 27, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757457952.1944845, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 27, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757457952.1944845, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 28, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757457952.1944845, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 28, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757457952.1957633, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 29, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757457952.1957633, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 29, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757457952.1957633, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 30, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757457952.196839, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 30, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757457952.196839, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 31, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757457952.1977718, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 31, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757457952.1977718, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 32, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757457952.1987693, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 32, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757457952.1987693, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 33, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757457952.1997702, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 33, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757457952.1997702, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 34, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757457952.1997702, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 34, "result": {"name": "Party", "songs": []}}}
{"ts": 1757457952.201127, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 35, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757457952.201127, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 35, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757457952.201127, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 36, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757457952.2021325, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 36, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757457952.2021325, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 37, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757457952.2031333, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 37, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757457952.2031333, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 38, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757457952.2031333, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 38, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757457982.908054, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 39, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757457982.9090543, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 39, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757457982.9100494, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 40, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757457982.9100494, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 40, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757457982.9100494, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 41, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757457982.91105, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 41, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757457982.91105, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 42, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757457982.91105, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 42, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757457982.91105, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 43, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757457982.9120512, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 43, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757457982.9120512, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 44, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757457982.9120512, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 44, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757457982.9130692, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 45, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757457982.9130692, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 45, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757457982.9130692, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 46, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757457982.9141908, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 46, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757457982.9141908, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 47, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757457982.9141908, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 47, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757457982.9152014, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 48, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757457982.9152014, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 48, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757457982.9152014, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 49, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757457982.9152014, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 49, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757457982.9152014, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 50, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757457982.9165726, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 50, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757457982.9165726, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 51, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757457982.9165726, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 51, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757457982.9175785, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 52, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757457982.9175785, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 52, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757457982.9175785, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 53, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757457982.9175785, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 53, "result": {"name": "Party", "songs": []}}}
{"ts": 1757457982.9175785, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 54, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757457982.91906, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 54, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757457982.91906, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 55, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757457982.91906, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 55, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757457982.9200702, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 56, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757457982.9200702, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 56, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757457982.9200702, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 57, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757457982.9210703, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 57, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757458004.8484476, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757458004.8537052, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757458005.2886205, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heurística.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canción,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vacía canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757458008.459312, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 58, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458008.460317, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 58, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458008.460317, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 59, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458008.4613166, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 59, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458008.4613166, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 60, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757458008.4623172, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 60, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757458008.4623172, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 61, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757458008.4623172, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 61, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757458008.4623172, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 62, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757458008.4623172, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 62, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757458008.4637141, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 63, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757458008.4637141, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 63, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757458008.4647195, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 64, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757458008.4647195, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 64, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757458008.4647195, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 65, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757458008.4657197, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 65, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757458008.4657197, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 66, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757458008.4657197, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 66, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757458008.4657197, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 67, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757458008.4668353, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 67, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757458008.4668353, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 68, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757458008.4678404, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 68, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757458008.4678404, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 69, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757458008.4678404, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 69, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757458008.468891, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 70, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757458008.468891, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 70, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757458008.468891, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 71, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757458008.4698455, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 71, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757458008.4698455, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 72, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757458008.470847, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 72, "result": {"name": "Party", "songs": []}}}
{"ts": 1757458008.470847, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 73, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757458008.470847, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 73, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757458008.470847, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 74, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757458008.4718406, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 74, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757458008.4718406, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 75, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757458008.4730108, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 75, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757458008.4730108, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 76, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757458008.4730108, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 76, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757458021.559781, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 77, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "default"}}}}
{"ts": 1757458021.559781, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 77, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458024.583491, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 78, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458024.583491, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 78, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458024.5844927, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 79, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458024.5844927, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 79, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458024.5844927, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 80, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757458024.5855072, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 80, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757458024.5855072, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 81, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757458024.5855072, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 81, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757458024.5855072, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 82, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757458024.5864973, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 82, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757458024.5864973, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 83, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757458024.5864973, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 83, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757458024.5864973, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 84, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757458024.5874927, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 84, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757458024.5874927, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 85, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757458024.5874927, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 85, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757458024.5874927, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 86, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757458024.5884917, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 86, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757458024.5884917, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 87, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757458024.5884917, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 87, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757458024.5894995, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 88, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757458024.5894995, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 88, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757458024.5894995, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 89, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757458024.590493, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 89, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757458024.590493, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 90, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757458024.590493, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 90, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757458024.590493, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 91, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757458024.5915027, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 91, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757458024.5915027, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 92, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757458024.5915027, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 92, "result": {"name": "Party", "songs": []}}}
{"ts": 1757458024.5915027, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 93, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757458024.5924919, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 93, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757458024.5924919, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 94, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757458024.5924919, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 94, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757458024.5924919, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 95, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757458024.593489, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 95, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757458024.593489, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 96, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757458024.593489, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 96, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757458030.086575, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 97, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458030.086575, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 97, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458030.0876105, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 98, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757458030.0876105, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 98, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757458030.0876105, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 99, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757458030.088616, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 99, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757458030.088616, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 100, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757458030.088616, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 100, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757458030.0897915, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 101, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757458030.0902138, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 101, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757458030.0902138, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 102, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757458030.09072, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 102, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757458030.0913498, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 103, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757458030.0913498, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 103, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757458030.0919223, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 104, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757458030.0919223, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 104, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757458030.092582, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 105, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757458030.0931032, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 105, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757458030.0931032, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 106, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757458030.0936828, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 106, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757458030.0936828, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 107, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757458030.094215, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 107, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757458030.0948386, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 108, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757458030.0948386, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 108, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757458030.0953634, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 109, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757458030.0953634, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 109, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757458030.0960083, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 110, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757458030.0965743, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 110, "result": {"name": "Party", "songs": []}}}
{"ts": 1757458030.0965743, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 111, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757458030.0976238, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 111, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757458030.0976238, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 112, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757458030.0982342, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 112, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757458030.0987709, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 113, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757458030.0987709, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 113, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757458030.0994213, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 114, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757458030.1000113, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 114, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757458036.0988526, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 115, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458036.0998573, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 115, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458036.0998573, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 116, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757458036.100854, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 116, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757458036.100854, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 117, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757458036.100854, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 117, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757458036.100854, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 118, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757458036.1018536, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 118, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757458036.1018536, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 119, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757458036.1018536, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 119, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757458036.1028535, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 120, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757458036.1028535, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 120, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757458036.1028535, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 121, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757458036.1028535, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 121, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757458036.1028535, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 122, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757458036.104329, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 122, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757458036.104329, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 123, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757458036.104329, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 123, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757458036.104329, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 124, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757458036.1053398, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 124, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757458036.1053398, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 125, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757458036.1053398, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 125, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757458036.106337, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 126, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757458036.106337, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 126, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757458036.106337, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 127, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757458036.1073344, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 127, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757458036.1073344, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 128, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757458036.1073344, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 128, "result": {"name": "Party", "songs": []}}}
{"ts": 1757458036.1073344, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 129, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757458036.1083364, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 129, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757458036.1083364, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 130, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757458036.1083364, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 130, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757458036.1083364, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 131, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757458036.1093361, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 131, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757458036.1093361, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 132, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757458036.1103346, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 132, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757458056.8596613, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 133, "method": "tools/call", "params": {"name": "add_song", "arguments": {"title": "Blinding Lights", "artists": "The Weeknd", "workspace": "Party"}}}}
{"ts": 1757458067.200395, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:106: UserWarning: PySoundFile failed. Trying audioread instead."}
{"ts": 1757458067.200395, "kind": "mcp_stderr", "line": "  y, sr = librosa.load(audio_path, sr=None, mono=True, duration=max_duration)"}
{"ts": 1757458067.201329, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Lib\\site-packages\\librosa\\core\\audio.py:184: FutureWarning: librosa.core.audio.__audioread_load"}
{"ts": 1757458067.201329, "kind": "mcp_stderr", "line": "\tDeprecated as of librosa version 0.10.0."}
{"ts": 1757458067.201329, "kind": "mcp_stderr", "line": "\tIt will be removed in librosa version 1.0."}
{"ts": 1757458067.2023304, "kind": "mcp_stderr", "line": "  y, sr_native = __audioread_load(path, offset, duration, dtype)"}
{"ts": 1757458069.8374138, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:136: FutureWarning: librosa.beat.tempo"}
{"ts": 1757458069.8383596, "kind": "mcp_stderr", "line": "\tThis function was moved to 'librosa.feature.rhythm.tempo' in librosa version 0.10.0."}
{"ts": 1757458069.8383596, "kind": "mcp_stderr", "line": "\tThis alias will be removed in librosa version 1.0."}
{"ts": 1757458069.8383596, "kind": "mcp_stderr", "line": "  bpm_arr = librosa.beat.tempo(y=y, sr=sr, aggregate=np.median)"}
{"ts": 1757458070.4747722, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 133, "result": {"status": "ok", "chosen": {"song_id": "58f12215-0c88-4823-8213-92825067ac5f", "title": "Blinding Lights", "artists": "The Weeknd", "duration_sec": 29.976, "bpm": 86.13, "key": "F", "mode": "minor", "energy": 0.649, "brightness": 0.131, "source_url": "https://music.apple.com/us/album/blinding-lights/1499378108?i=1499378607&uo=4", "added_at": 1757458070.4737978, "playlist": "Misc"}}}}
{"ts": 1757458070.4787729, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 134, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458070.4787729, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 134, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458070.4797943, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 135, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458070.4797943, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 135, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458070.4807742, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 136, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757458070.4807742, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 136, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757458070.4818015, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 137, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757458070.4827733, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 137, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757458070.4827733, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 138, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757458070.4827733, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 138, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757458070.4827733, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 139, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757458070.4837732, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 139, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757458070.4837732, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 140, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757458070.484773, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 140, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757458070.484773, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 141, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757458070.484773, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 141, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757458070.485772, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 142, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757458070.485772, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 142, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757458070.4867713, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 143, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757458070.4867713, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 143, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757458070.4867713, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 144, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757458070.4877744, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 144, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757458070.4877744, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 145, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757458070.4887726, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 145, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757458070.4887726, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 146, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757458070.4897723, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 146, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757458070.4897723, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 147, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757458070.4907727, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 147, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757458070.4907727, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 148, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757458070.4917736, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 148, "result": {"name": "Party", "songs": []}}}
{"ts": 1757458070.4917736, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 149, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757458070.4917736, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 149, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757458070.4917736, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 150, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757458070.492773, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 150, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757458070.492773, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 151, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757458070.4937735, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 151, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757458070.4937735, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 152, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757458070.4937735, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 152, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757458073.769962, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 153, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458073.7708707, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 153, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458073.7708707, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 154, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458073.771899, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 154, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458073.771899, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 155, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757458073.771899, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 155, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757458073.7729225, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 156, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757458073.7729225, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 156, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757458073.7729225, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 157, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757458073.7739375, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 157, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757458073.7739375, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 158, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757458073.7739375, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 158, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757458073.7739375, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 159, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757458073.775217, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 159, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757458073.775217, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 160, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757458073.775217, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 160, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757458073.7763638, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 161, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757458073.7763638, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 161, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757458073.7774143, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 162, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757458073.7774143, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 162, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757458073.7774143, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 163, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757458073.7783778, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 163, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757458073.7783778, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 164, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757458073.7794242, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 164, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757458073.7794242, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 165, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757458073.7794242, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 165, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757458073.780435, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 166, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757458073.780435, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 166, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757458073.780435, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 167, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757458073.7814207, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 167, "result": {"name": "Party", "songs": []}}}
{"ts": 1757458073.7814207, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 168, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757458073.782635, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 168, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757458073.782635, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 169, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757458073.782635, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 169, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757458073.7836814, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 170, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757458073.7836814, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 170, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757458073.7836814, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 171, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757458073.7846518, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 171, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757458093.6884978, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757458093.694474, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757458094.2095668, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heurística.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canción,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vacía canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757458096.159042, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 172, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "default"}}}}
{"ts": 1757458096.1600454, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 172, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458098.0458052, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 173, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458098.0467837, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 173, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458098.047684, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 174, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458098.047684, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 174, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458098.0486782, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 175, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757458098.0486782, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 175, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757458098.0486782, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 176, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757458098.0496783, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 176, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757458098.0496783, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 177, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757458098.0496783, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 177, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757458098.0509005, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 178, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757458098.0509005, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 178, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757458098.05195, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 179, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757458098.05195, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 179, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757458098.0530124, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 180, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757458098.0530124, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 180, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757458098.0530124, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 181, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757458098.0539079, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 181, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757458098.0539079, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 182, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757458098.0549078, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 182, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757458098.0549078, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 183, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757458098.0549078, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 183, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757458098.055989, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 184, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757458098.0569158, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 184, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757458098.0569158, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 185, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757458098.0574794, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 185, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757458098.0574794, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 186, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757458098.0584877, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 186, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757458098.0584877, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 187, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757458098.0598052, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 187, "result": {"name": "Party", "songs": []}}}
{"ts": 1757458098.0598052, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 188, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757458098.0608118, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 188, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757458098.0608118, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 189, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757458098.0618126, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 189, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757458098.0618126, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 190, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757458098.0628123, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 190, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757458098.0628123, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 191, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757458098.0628123, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 191, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757458099.7484195, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 192, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458099.7484195, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 192, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458099.7494242, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 193, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458099.7494242, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 193, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458099.750426, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 194, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757458099.750426, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 194, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757458099.750426, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 195, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757458099.751427, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 195, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757458099.751427, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 196, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757458099.751427, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 196, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757458099.751427, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 197, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757458099.7524269, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 197, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757458099.7524269, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 198, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757458099.753426, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 198, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757458099.753426, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 199, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757458099.753426, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 199, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757458099.7544265, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 200, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757458099.7544265, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 200, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757458099.7544265, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 201, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757458099.7554326, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 201, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757458099.7554326, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 202, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757458099.7564251, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 202, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757458099.7564251, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 203, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757458099.7574255, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 203, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757458099.7574255, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 204, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757458099.758426, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 204, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757458099.758426, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 205, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757458099.758426, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 205, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757458099.7597563, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 206, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757458099.7597563, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 206, "result": {"name": "Party", "songs": []}}}
{"ts": 1757458099.7597563, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 207, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757458099.7607625, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 207, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757458099.7607625, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 208, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757458099.7607625, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 208, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757458099.762126, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 209, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757458099.762126, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 209, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757458099.7631352, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 210, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757458099.7631352, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 210, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757458108.4085476, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 211, "method": "tools/call", "params": {"name": "add_song", "arguments": {"title": "Blinding Lights", "artists": "The Weeknd", "workspace": "Misc"}}}}
{"ts": 1757458109.1881902, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:106: UserWarning: PySoundFile failed. Trying audioread instead."}
{"ts": 1757458109.1888201, "kind": "mcp_stderr", "line": "  y, sr = librosa.load(audio_path, sr=None, mono=True, duration=max_duration)"}
{"ts": 1757458109.189142, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Lib\\site-packages\\librosa\\core\\audio.py:184: FutureWarning: librosa.core.audio.__audioread_load"}
{"ts": 1757458109.1896489, "kind": "mcp_stderr", "line": "\tDeprecated as of librosa version 0.10.0."}
{"ts": 1757458109.190234, "kind": "mcp_stderr", "line": "\tIt will be removed in librosa version 1.0."}
{"ts": 1757458109.1908808, "kind": "mcp_stderr", "line": "  y, sr_native = __audioread_load(path, offset, duration, dtype)"}
{"ts": 1757458109.9176767, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 211, "result": {"status": "ok", "chosen": {"song_id": "57cd2487-ba6e-4d33-b72b-0720db37936f", "title": "Blinding Lights", "artists": "The Weeknd", "duration_sec": 29.976, "bpm": 86.13, "key": "F", "mode": "minor", "energy": 0.649, "brightness": 0.131, "source_url": "https://music.apple.com/us/album/blinding-lights/1499378108?i=1499378607&uo=4", "added_at": 1757458109.9176767, "playlist": "Misc"}}}}
{"ts": 1757458109.9230576, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 212, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458109.9240599, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 212, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458109.9251273, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 213, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458109.9261389, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 213, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458109.9261389, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 214, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757458109.9275496, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 214, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757458109.9275496, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 215, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757458109.9285576, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 215, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757458109.9289339, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 216, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757458109.9294407, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 216, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757458109.9299896, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 217, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757458109.9305139, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 217, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757458109.9305139, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 218, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757458109.9315946, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 218, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757458109.9315946, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 219, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757458109.932661, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 219, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757458109.9331934, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 220, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757458109.9337215, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 220, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757458109.9337215, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 221, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757458109.9349468, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 221, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757458109.9349468, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 222, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757458109.9360313, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 222, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757458109.936551, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 223, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757458109.9370818, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 223, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757458109.9376056, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 224, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757458109.9381251, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 224, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757458109.93867, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 225, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757458109.9392107, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 225, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757458109.93975, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 226, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757458109.940274, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 226, "result": {"name": "Party", "songs": []}}}
{"ts": 1757458109.9408715, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 227, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757458109.941398, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 227, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757458109.941398, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 228, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757458109.9424367, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 228, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757458109.9424367, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 229, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757458109.943581, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 229, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757458109.943581, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 230, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757458109.9448154, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 230, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757458112.2957258, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 231, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458112.297676, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 231, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458112.297676, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 232, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458112.2986293, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 232, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458112.2986293, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 233, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757458112.2996228, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 233, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757458112.2996228, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 234, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757458112.2996228, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 234, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757458112.300666, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 235, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757458112.300666, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 235, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757458112.300666, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 236, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757458112.3016236, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 236, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757458112.3016236, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 237, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757458112.3026679, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 237, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757458112.3026679, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 238, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757458112.3026679, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 238, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757458112.3037555, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 239, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757458112.3037555, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 239, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757458112.3047323, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 240, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757458112.3047323, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 240, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757458112.3057103, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 241, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757458112.3057103, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 241, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757458112.3057103, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 242, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757458112.3057103, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 242, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757458112.307154, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 243, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757458112.307154, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 243, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757458112.307154, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 244, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757458112.3081603, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 244, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757458112.3081603, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 245, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757458112.3091598, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 245, "result": {"name": "Party", "songs": []}}}
{"ts": 1757458112.3091598, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 246, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757458112.3101635, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 246, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757458112.3101635, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 247, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757458112.3111598, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 247, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757458112.3111598, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 248, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757458112.312168, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 248, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757458112.312168, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 249, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757458112.3131602, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 249, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757458115.5008934, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 250, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458115.5008934, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 250, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458115.5008934, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 251, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458115.502061, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 251, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458115.502061, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 252, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757458115.5030777, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 252, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757458115.5030777, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 253, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757458115.5030777, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 253, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757458115.5042436, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 254, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757458115.5042436, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 254, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757458115.5042436, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 255, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757458115.5042436, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 255, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757458115.5052397, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 256, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757458115.5052397, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 256, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757458115.5052397, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 257, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757458115.506147, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 257, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757458115.506147, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 258, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757458115.506147, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 258, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757458115.506147, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 259, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757458115.507243, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 259, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757458115.507243, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 260, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757458115.507243, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 260, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757458115.507243, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 261, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757458115.5083706, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 261, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757458115.5083706, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 262, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757458115.5083706, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 262, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757458115.509506, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 263, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757458115.509506, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 263, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757458115.5105298, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 264, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757458115.5105298, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 264, "result": {"name": "Party", "songs": []}}}
{"ts": 1757458115.5105298, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 265, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757458115.511822, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 265, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757458115.511822, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 266, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757458115.511822, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 266, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757458115.5128899, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 267, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757458115.5128899, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 267, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757458115.5128899, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 268, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757458115.5138352, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 268, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757458115.6543453, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 269, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458115.654878, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 269, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458115.6554277, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 270, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458115.6565845, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 270, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458115.6565845, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 271, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757458115.6573226, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 271, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757458115.6573226, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 272, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757458115.6579857, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 272, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757458115.658522, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 273, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757458115.658522, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 273, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757458115.6595407, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 274, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757458115.6603484, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 274, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757458115.6603484, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 275, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757458115.6610389, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 275, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757458115.6610389, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 276, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757458115.6615553, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 276, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757458115.6615553, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 277, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757458115.6625738, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 277, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757458115.6625738, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 278, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757458115.6635711, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 278, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757458115.6635711, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 279, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757458115.6635711, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 279, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757458115.6645696, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 280, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757458115.6645696, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 280, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757458115.6645696, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 281, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757458115.6655657, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 281, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757458115.6655657, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 282, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757458115.6665654, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 282, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757458115.6665654, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 283, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757458115.6665654, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 283, "result": {"name": "Party", "songs": []}}}
{"ts": 1757458115.6675625, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 284, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757458115.6675625, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 284, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757458115.6685688, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 285, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757458115.6685688, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 285, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757458115.6685688, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 286, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757458115.66957, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 286, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757458115.66957, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 287, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757458115.6705692, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 287, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757458115.874499, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 288, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458115.874499, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 288, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458115.8755333, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 289, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458115.8765023, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 289, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458115.8765023, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 290, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757458115.8775082, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 290, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757458115.8783755, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 291, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757458115.8783755, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 291, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757458115.8783755, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 292, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757458115.8793738, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 292, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757458115.8793738, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 293, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757458115.8803732, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 293, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757458115.8803732, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 294, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757458115.8813727, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 294, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757458115.8813727, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 295, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757458115.882373, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 295, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757458115.882373, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 296, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757458115.882373, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 296, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757458115.8833718, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 297, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757458115.8833718, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 297, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757458115.8833718, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 298, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757458115.884368, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 298, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757458115.884368, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 299, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757458115.884368, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 299, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757458115.8854527, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 300, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757458115.8854527, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 300, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757458115.8854527, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 301, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757458115.8864975, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 301, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757458115.8864975, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 302, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757458115.8875034, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 302, "result": {"name": "Party", "songs": []}}}
{"ts": 1757458115.8875034, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 303, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757458115.8875034, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 303, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757458115.8884976, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 304, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757458115.8884976, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 304, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757458115.8884976, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 305, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757458115.889492, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 305, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757458115.889492, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 306, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757458115.8905098, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 306, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757458134.5454972, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 307, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757458134.5466833, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 307, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757458136.694712, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 308, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458136.694712, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 308, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458136.6957319, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 309, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458136.6967108, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 309, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458136.6967108, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 310, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757458136.6977174, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 310, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757458136.6977174, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 311, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757458136.6977174, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 311, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757458136.698712, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 312, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757458136.698712, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 312, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757458136.698712, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 313, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757458136.6997116, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 313, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757458136.6997116, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 314, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757458136.6997116, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 314, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757458136.6997116, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 315, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757458136.7007117, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 315, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757458136.7007117, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 316, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757458136.7007117, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 316, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757458136.7007117, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 317, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757458136.7017114, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 317, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757458136.7017114, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 318, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757458136.7017114, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 318, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757458136.7017114, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 319, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757458136.7027118, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 319, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757458136.7027118, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 320, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757458136.703713, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 320, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757458136.703713, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 321, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757458136.703713, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 321, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757458136.703713, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 322, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757458136.7047117, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 322, "result": {"name": "Party", "songs": []}}}
{"ts": 1757458136.7047117, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 323, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757458136.7047117, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 323, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757458136.7059135, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 324, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757458136.7059135, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 324, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757458136.7059135, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 325, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757458136.7073543, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 325, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757458136.7073543, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 326, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757458136.7073543, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 326, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757458278.078504, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757458278.086207, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757458278.5415475, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heurística.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canción,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vacía canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757458281.089708, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 327, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458281.0906453, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 327, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458281.091702, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 328, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458281.091702, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 328, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458281.0928047, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 329, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757458281.0928047, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 329, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757458281.0938723, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 330, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757458281.0938723, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 330, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757458281.0938723, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 331, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757458281.0949574, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 331, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757458281.0949574, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 332, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757458281.0949574, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 332, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757458281.0964394, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 333, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757458281.0964394, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 333, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757458281.097502, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 334, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757458281.097502, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 334, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757458281.097502, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 335, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757458281.0985308, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 335, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757458281.0985308, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 336, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757458281.099509, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 336, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757458281.1005137, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 337, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757458281.1005137, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 337, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757458281.1005137, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 338, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757458281.1019742, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 338, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757458281.1019742, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 339, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757458281.103054, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 339, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757458281.103054, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 340, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757458281.1042411, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 340, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757458281.1042411, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 341, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757458281.1053042, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 341, "result": {"name": "Party", "songs": []}}}
{"ts": 1757458281.1053042, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 342, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757458281.1053042, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 342, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757458281.1065917, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 343, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757458281.1065917, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 343, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757458281.1065917, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 344, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757458281.1080208, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 344, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757458281.1080208, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 345, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757458281.1091616, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 345, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757458300.2474504, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 346, "method": "tools/call", "params": {"name": "add_song", "arguments": {"title": "Hasta que me olvides", "artists": "Luis Miguel", "workspace": "demo"}}}}
{"ts": 1757458300.6009853, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 346, "result": {"status": "needs_confirmation", "candidates": [{"id": "100986866", "title": "Hasta Que Me Olvides", "artists": "Luis Miguel", "duration_sec": 281.0, "source_url": "https://music.apple.com/us/album/hasta-que-me-olvides/100986900?i=100986866&uo=4", "preview_url": "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview116/v4/c3/77/3d/c3773d13-339f-ea65-a366-0951981e8c7b/mzaf_17002379681766053756.plus.aac.p.m4a", "provider": "apple", "confidence": 1.0}, {"id": "96187930", "title": "Hasta Que Me Olvídes", "artists": "Luis Miguel", "duration_sec": 281.0, "source_url": "https://music.apple.com/us/album/hasta-que-me-olv%C3%ADdes/96190948?i=96187930&uo=4", "preview_url": "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview211/v4/a7/7d/39/a77d393b-29b7-62e0-1bbf-42ddaa3ac3ea/mzaf_3731061305986214282.plus.aac.p.m4a", "provider": "apple", "confidence": 0.9974999999999999}, {"id": "1565047690", "title": "Hasta Que Me Olvides", "artists": "Diego Boneta", "duration_sec": 283.4, "source_url": "https://music.apple.com/us/album/hasta-que-me-olvides/1565047489?i=1565047690&uo=4", "preview_url": "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview115/v4/71/e5/5c/71e55cb6-17ed-5485-cecd-39bb2010d2ef/mzaf_17871102565275298394.plus.aac.p.m4a", "provider": "apple", "confidence": 0.7408695652173913}], "message": "Se encontraron múltiples coincidencias o ninguna. Indica 'candidate_index' o 'candidate_id' en una nueva llamada a add_song."}}}
{"ts": 1757458300.60516, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 347, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458300.60516, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 347, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458300.6061597, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 348, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458300.6061597, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 348, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458300.6071599, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 349, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757458300.6071599, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 349, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757458300.6071599, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 350, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757458300.608157, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 350, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757458300.608157, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 351, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757458300.6091595, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 351, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757458300.6091595, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 352, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757458300.6101608, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 352, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757458300.6101608, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 353, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757458300.6101608, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 353, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757458300.6111596, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 354, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757458300.6111596, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 354, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757458300.6111596, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 355, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757458300.6121585, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 355, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757458300.6121585, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 356, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757458300.6121585, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 356, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757458300.6121585, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 357, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757458300.6136189, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 357, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757458300.6136189, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 358, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757458300.6136189, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 358, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757458300.6136189, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 359, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757458300.6136189, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 359, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757458300.615047, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 360, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757458300.615047, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 360, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757458300.615047, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 361, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757458300.6160536, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 361, "result": {"name": "Party", "songs": []}}}
{"ts": 1757458300.6160536, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 362, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757458300.6160536, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 362, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757458300.6170526, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 363, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757458300.6170526, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 363, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757458300.6170526, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 364, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757458300.6182346, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 364, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757458300.6182346, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 365, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757458300.6182346, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 365, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757458303.4097974, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 366, "method": "tools/call", "params": {"name": "add_song", "arguments": {"title": "Hasta que me olvides", "artists": "Luis Miguel", "candidate_index": 0, "workspace": "demo"}}}}
{"ts": 1757458304.8582945, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 366, "result": {"status": "ok", "chosen": {"song_id": "5feed056-bd8f-4d15-9ec8-bebe4ba4d242", "title": "Hasta Que Me Olvides", "artists": "Luis Miguel", "duration_sec": 29.929, "bpm": 120.19, "key": "C", "mode": "minor", "energy": 0.602, "brightness": 0.129, "source_url": "https://music.apple.com/us/album/hasta-que-me-olvides/100986900?i=100986866&uo=4", "added_at": 1757458304.8582945, "playlist": "Misc"}}}}
{"ts": 1757458304.864345, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 367, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458304.864345, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 367, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 1}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458304.8653524, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 368, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458304.866338, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 368, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 1}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458304.866338, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 369, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757458304.8673472, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 369, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757458304.8673472, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 370, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757458304.8673472, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 370, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757458304.8683472, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 371, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757458304.8683472, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 371, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757458304.8683472, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 372, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757458304.869376, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 372, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757458304.869376, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 373, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757458304.869376, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 373, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757458304.869376, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 374, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757458304.8708146, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 374, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757458304.8708146, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 375, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757458304.8718898, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 375, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757458304.8718898, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 376, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757458304.8728328, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 376, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757458304.8728328, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 377, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757458304.873834, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 377, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757458304.873834, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 378, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757458304.8749046, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 378, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757458304.8749046, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 379, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757458304.8759024, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 379, "result": {"name": "Misc", "songs": [{"song_id": "5feed056-bd8f-4d15-9ec8-bebe4ba4d242", "title": "Hasta Que Me Olvides", "artists": "Luis Miguel", "duration_sec": 29.929, "bpm": 120.19, "key": "C", "mode": "minor", "energy": 0.602, "brightness": 0.129, "source_url": "https://music.apple.com/us/album/hasta-que-me-olvides/100986900?i=100986866&uo=4", "added_at": 1757458304.8582945, "playlist": "Misc"}]}}}
{"ts": 1757458304.8759024, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 380, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757458304.876835, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 380, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757458304.876835, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 381, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757458304.8778863, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 381, "result": {"name": "Party", "songs": []}}}
{"ts": 1757458304.8778863, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 382, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757458304.8788557, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 382, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757458304.8788557, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 383, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757458304.8798347, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 383, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757458304.8798347, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 384, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757458304.8808928, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 384, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757458304.8808928, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 385, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757458304.881877, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 385, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757458307.7066877, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 386, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458307.7077935, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 386, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 1}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458307.7077935, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 387, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757458307.7087297, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 387, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 1}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757458307.7087297, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 388, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757458307.7087297, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 388, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757458307.710124, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 389, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757458307.710124, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 389, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757458307.710124, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 390, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757458307.7111316, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 390, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757458307.7111316, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 391, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757458307.7121303, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 391, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757458307.7121303, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 392, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757458307.7121303, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 392, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757458307.7131476, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 393, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757458307.7131476, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 393, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757458307.7131476, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 394, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757458307.7131476, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 394, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757458307.7131476, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 395, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757458307.7145972, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 395, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757458307.7145972, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 396, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757458307.7145972, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 396, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757458307.7156038, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 397, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757458307.7161098, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 397, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757458307.7161098, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 398, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757458307.7171197, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 398, "result": {"name": "Misc", "songs": [{"song_id": "5feed056-bd8f-4d15-9ec8-bebe4ba4d242", "title": "Hasta Que Me Olvides", "artists": "Luis Miguel", "duration_sec": 29.929, "bpm": 120.19, "key": "C", "mode": "minor", "energy": 0.602, "brightness": 0.129, "source_url": "https://music.apple.com/us/album/hasta-que-me-olvides/100986900?i=100986866&uo=4", "added_at": 1757458304.8582945, "playlist": "Misc"}]}}}
{"ts": 1757458307.7171197, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 399, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757458307.7181196, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 399, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757458307.7181196, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 400, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757458307.7181196, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 400, "result": {"name": "Party", "songs": []}}}
{"ts": 1757458307.7181196, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 401, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757458307.7191248, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 401, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757458307.7191248, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 402, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757458307.7203858, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 402, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757458307.7203858, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 403, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757458307.7203858, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 403, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757458307.7214174, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 404, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757458307.7214174, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 404, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757460228.8585718, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757460228.8735511, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757460229.4529326, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heur�stica.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canci�n,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vac�a canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757460229.8171415, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757460229.8308072, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757460230.2959929, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757460230.2969124, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757460230.2978725, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 2, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757460230.2978725, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757460230.298875, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 3, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757460230.298875, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 4, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757460230.299953, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 4, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757460230.299953, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 5, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757460230.300874, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 5, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757460230.300874, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 6, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757460230.3020515, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 6, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757460230.3020515, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 7, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757460230.3030727, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 7, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757460230.3030727, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 8, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757460230.3040705, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 8, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757460230.3040705, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 9, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757460230.3040705, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 9, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757460230.305071, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 10, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757460230.305071, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 10, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757460230.306069, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 11, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757460230.306069, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 11, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757460230.306069, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 12, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757460230.3070703, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 12, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757460230.3070703, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 13, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757460230.3070703, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 13, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757460230.308071, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 14, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757460230.308071, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 14, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757460230.308071, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 15, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757460230.3095105, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 15, "result": {"name": "Party", "songs": []}}}
{"ts": 1757460230.3095105, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 16, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757460230.3095105, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 16, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757460230.310577, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 17, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757460230.310577, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 17, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757460230.310577, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 18, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757460230.3116555, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 18, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757460230.3116555, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 19, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757460230.312663, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 19, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757460248.5987115, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 20, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757460248.599707, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 20, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757460248.599707, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 21, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757460248.6009455, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 21, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757460248.6009455, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 22, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757460248.6009455, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 22, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757460248.6009455, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 23, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757460248.6023245, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 23, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757460248.6023245, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 24, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757460248.603344, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 24, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757460248.603344, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 25, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757460248.603344, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 25, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757460248.603344, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 26, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757460248.6043525, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 26, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757460248.6043525, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 27, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757460248.6043525, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 27, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757460248.6058335, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 28, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757460248.6058335, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 28, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757460248.6068525, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 29, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757460248.6068525, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 29, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757460248.6068525, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 30, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757460248.607871, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 30, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757460248.607871, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 31, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757460248.6088612, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 31, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757460248.6088612, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 32, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757460248.6088612, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 32, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757460248.6101644, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 33, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757460248.6101644, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 33, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757460248.6113129, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 34, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757460248.6113129, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 34, "result": {"name": "Party", "songs": []}}}
{"ts": 1757460248.6113129, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 35, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757460248.612323, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 35, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757460248.612323, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 36, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757460248.6133227, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 36, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757460248.6133227, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 37, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757460248.6143212, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 37, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757460248.6143212, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 38, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757460248.6153202, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 38, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757460264.480452, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 39, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757460264.4815464, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 39, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757460264.4825587, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 40, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757460264.4825587, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 40, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757460264.4825587, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 41, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757460264.4835522, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 41, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757460264.4835522, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 42, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757460264.4835522, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 42, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757460264.4845524, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 43, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757460264.4845524, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 43, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757460264.4845524, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 44, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757460264.4855525, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 44, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757460264.4855525, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 45, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757460264.4855525, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 45, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757460264.486552, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 46, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757460264.486552, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 46, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757460264.486552, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 47, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757460264.4875524, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 47, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757460264.4875524, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 48, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757460264.4875524, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 48, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757460264.4875524, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 49, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757460264.4875524, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 49, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757460264.4875524, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 50, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757460264.4890497, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 50, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757460264.4890497, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 51, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757460264.4890497, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 51, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757460264.4890497, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 52, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757460264.4890497, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 52, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757460264.4904673, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 53, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757460264.4904673, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 53, "result": {"name": "Party", "songs": []}}}
{"ts": 1757460264.4904673, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 54, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757460264.4914742, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 54, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757460264.4914742, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 55, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757460264.4914742, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 55, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757460264.4914742, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 56, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757460264.492896, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 56, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757460264.492896, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 57, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757460264.4939394, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 57, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757463036.1364932, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757463036.1444995, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757463036.602119, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heur�stica.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canci�n,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vac�a canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757463036.978953, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757463036.9974196, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757463037.480505, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757463037.4810424, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757463037.4821389, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 2, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757463037.482683, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757463037.4832141, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 3, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757463037.4832141, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 4, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757463037.483753, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 4, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757463037.483753, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 5, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757463037.4842904, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 5, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757463037.4848208, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 6, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757463037.4853578, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 6, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757463037.4853578, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 7, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757463037.4859006, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 7, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757463037.4864476, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 8, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757463037.4870212, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 8, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757463037.4875844, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 9, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757463037.48813, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 9, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757463037.4886737, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 10, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757463037.4892466, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 10, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757463037.4898913, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 11, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757463037.4904287, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 11, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757463037.4910452, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 12, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757463037.4915926, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 12, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757463037.4915926, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 13, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757463037.4921598, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 13, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757463037.4927378, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 14, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757463037.4932914, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 14, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757463037.4932914, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 15, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757463037.4938438, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 15, "result": {"name": "Party", "songs": []}}}
{"ts": 1757463037.4943867, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 16, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757463037.495509, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 16, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757463037.496081, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 17, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757463037.4966395, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 17, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757463037.4966395, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 18, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757463037.4972155, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 18, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757463037.4977648, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 19, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757463037.4983082, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 19, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757463050.1880326, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 20, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757463050.189032, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 20, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757463050.189032, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 21, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757463050.190031, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 21, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757463050.190031, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 22, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757463050.190031, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 22, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757463050.191162, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 23, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757463050.191162, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 23, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757463050.191162, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 24, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757463050.191162, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 24, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757463050.1925957, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 25, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757463050.1925957, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 25, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757463050.1925957, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 26, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757463050.1937196, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 26, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757463050.1937196, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 27, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757463050.1937196, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 27, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757463050.1937196, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 28, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757463050.1947246, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 28, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757463050.1947246, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 29, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757463050.1947246, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 29, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757463050.1947246, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 30, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757463050.1957245, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 30, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757463050.1957245, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 31, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757463050.1957245, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 31, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757463050.1967256, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 32, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757463050.1967256, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 32, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757463050.1967256, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 33, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757463050.1967256, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 33, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757463050.1978176, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 34, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757463050.1978176, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 34, "result": {"name": "Party", "songs": []}}}
{"ts": 1757463050.1978176, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 35, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757463050.1978176, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 35, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757463050.1990867, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 36, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757463050.1990867, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 36, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757463050.1990867, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 37, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757463050.1990867, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 37, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757463050.1990867, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 38, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757463050.2004025, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 38, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757463065.4942746, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 39, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757463065.495274, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 39, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757463065.495274, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 40, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757463065.496274, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 40, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757463065.496274, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 41, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757463065.496274, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 41, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757463065.4973052, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 42, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757463065.4973052, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 42, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757463065.4973052, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 43, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757463065.4982758, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 43, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757463065.4982758, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 44, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757463065.4992752, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 44, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757463065.4992752, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 45, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757463065.4992752, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 45, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757463065.5002751, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 46, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757463065.5002751, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 46, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757463065.5002751, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 47, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757463065.5012808, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 47, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757463065.5012808, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 48, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757463065.5012808, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 48, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757463065.502275, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 49, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757463065.502275, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 49, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757463065.502275, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 50, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757463065.503275, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 50, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757463065.503275, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 51, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757463065.503275, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 51, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757463065.503275, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 52, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757463065.5042777, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 52, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757463065.5042777, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 53, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757463065.5042777, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 53, "result": {"name": "Party", "songs": []}}}
{"ts": 1757463065.5052755, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 54, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757463065.5052755, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 54, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757463065.5052755, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 55, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757463065.5052755, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 55, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757463065.5052755, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 56, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757463065.5067427, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 56, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757463065.5067427, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 57, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757463065.5067427, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 57, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757463075.9497664, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 58, "method": "tools/call", "params": {"name": "add_song", "arguments": {"title": "Man in the Mirror", "artists": "Michael Jackson", "workspace": "demo"}}}}
{"ts": 1757463078.8055394, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:106: UserWarning: PySoundFile failed. Trying audioread instead."}
{"ts": 1757463078.8055394, "kind": "mcp_stderr", "line": "  y, sr = librosa.load(audio_path, sr=None, mono=True, duration=max_duration)"}
{"ts": 1757463078.8055394, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Lib\\site-packages\\librosa\\core\\audio.py:184: FutureWarning: librosa.core.audio.__audioread_load"}
{"ts": 1757463078.8065405, "kind": "mcp_stderr", "line": "\tDeprecated as of librosa version 0.10.0."}
{"ts": 1757463078.8065405, "kind": "mcp_stderr", "line": "\tIt will be removed in librosa version 1.0."}
{"ts": 1757463078.8065405, "kind": "mcp_stderr", "line": "  y, sr_native = __audioread_load(path, offset, duration, dtype)"}
{"ts": 1757463080.5831025, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:136: FutureWarning: librosa.beat.tempo"}
{"ts": 1757463080.5831025, "kind": "mcp_stderr", "line": "\tThis function was moved to 'librosa.feature.rhythm.tempo' in librosa version 0.10.0."}
{"ts": 1757463080.5841022, "kind": "mcp_stderr", "line": "\tThis alias will be removed in librosa version 1.0."}
{"ts": 1757463080.5841022, "kind": "mcp_stderr", "line": "  bpm_arr = librosa.beat.tempo(y=y, sr=sr, aggregate=np.median)"}
{"ts": 1757463081.1391559, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 58, "result": {"status": "ok", "chosen": {"song_id": "632c35fd-4ff5-4977-8db8-fe9929008b65", "title": "Man In the Mirror", "artists": "Michael Jackson", "duration_sec": 29.929, "bpm": 101.33, "key": "G", "mode": "major", "energy": 0.551, "brightness": 0.112, "source_url": "https://music.apple.com/us/album/man-in-the-mirror/159292399?i=159294478&uo=4", "added_at": 1757463081.1381562, "playlist": "Coffeehouse"}}}}
{"ts": 1757463081.1441593, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 59, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757463081.1441593, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 59, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 1}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757463081.145175, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 60, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757463081.145175, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 60, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 1}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757463081.1461575, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 61, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757463081.1461575, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 61, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757463081.1461575, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 62, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757463081.1471555, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 62, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757463081.1471555, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 63, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757463081.1471555, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 63, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757463081.1471555, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 64, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757463081.148156, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 64, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757463081.148156, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 65, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757463081.148156, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 65, "result": {"name": "Coffeehouse", "songs": [{"song_id": "632c35fd-4ff5-4977-8db8-fe9929008b65", "title": "Man In the Mirror", "artists": "Michael Jackson", "duration_sec": 29.929, "bpm": 101.33, "key": "G", "mode": "major", "energy": 0.551, "brightness": 0.112, "source_url": "https://music.apple.com/us/album/man-in-the-mirror/159292399?i=159294478&uo=4", "added_at": 1757463081.1381562, "playlist": "Coffeehouse"}]}}}
{"ts": 1757463081.1491556, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 66, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757463081.1491556, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 66, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757463081.1491556, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 67, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757463081.1491556, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 67, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757463081.150155, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 68, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757463081.150155, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 68, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757463081.150155, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 69, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757463081.1511555, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 69, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757463081.1511555, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 70, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757463081.1511555, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 70, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757463081.1521556, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 71, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757463081.1521556, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 71, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757463081.1521556, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 72, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757463081.1521556, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 72, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757463081.1531553, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 73, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757463081.1531553, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 73, "result": {"name": "Party", "songs": []}}}
{"ts": 1757463081.1531553, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 74, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757463081.1531553, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 74, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757463081.154156, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 75, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757463081.154156, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 75, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757463081.154156, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 76, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757463081.155158, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 76, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757463081.155158, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 77, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757463081.155158, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 77, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757463084.3582692, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 78, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757463084.3592703, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 78, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 1}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757463084.3592703, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 79, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757463084.3592703, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 79, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 1}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757463084.3604712, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 80, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757463084.3604712, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 80, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757463084.3604712, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 81, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757463084.361557, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 81, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757463084.361557, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 82, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757463084.361557, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 82, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757463084.361557, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 83, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757463084.361557, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 83, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757463084.3628986, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 84, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757463084.3628986, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 84, "result": {"name": "Coffeehouse", "songs": [{"song_id": "632c35fd-4ff5-4977-8db8-fe9929008b65", "title": "Man In the Mirror", "artists": "Michael Jackson", "duration_sec": 29.929, "bpm": 101.33, "key": "G", "mode": "major", "energy": 0.551, "brightness": 0.112, "source_url": "https://music.apple.com/us/album/man-in-the-mirror/159292399?i=159294478&uo=4", "added_at": 1757463081.1381562, "playlist": "Coffeehouse"}]}}}
{"ts": 1757463084.3639097, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 85, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757463084.3639097, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 85, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757463084.3639097, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 86, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757463084.3639097, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 86, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757463084.3649054, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 87, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757463084.3649054, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 87, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757463084.3649054, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 88, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757463084.3649054, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 88, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757463084.3649054, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 89, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757463084.3662689, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 89, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757463084.3662689, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 90, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757463084.3662689, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 90, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757463084.3662689, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 91, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757463084.3662689, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 91, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757463084.3676887, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 92, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757463084.3676887, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 92, "result": {"name": "Party", "songs": []}}}
{"ts": 1757463084.3676887, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 93, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757463084.3676887, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 93, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757463084.3689694, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 94, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757463084.3689694, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 94, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757463084.3689694, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 95, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757463084.3689694, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 95, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757463084.3689694, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 96, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757463084.3701394, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 96, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757464172.6913354, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757464172.7045007, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757464173.1357465, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heur�stica.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canci�n,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vac�a canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757464173.483523, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757464246.1980953, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/call", "params": {"name": "add_song", "arguments": {"title": "Finesse", "artists": "Bruno Mars", "workspace": "demo"}}}}
{"ts": 1757464249.0434444, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:106: UserWarning: PySoundFile failed. Trying audioread instead."}
{"ts": 1757464249.0434444, "kind": "mcp_stderr", "line": "  y, sr = librosa.load(audio_path, sr=None, mono=True, duration=max_duration)"}
{"ts": 1757464249.0434444, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Lib\\site-packages\\librosa\\core\\audio.py:184: FutureWarning: librosa.core.audio.__audioread_load"}
{"ts": 1757464249.044342, "kind": "mcp_stderr", "line": "\tDeprecated as of librosa version 0.10.0."}
{"ts": 1757464249.044342, "kind": "mcp_stderr", "line": "\tIt will be removed in librosa version 1.0."}
{"ts": 1757464249.0453432, "kind": "mcp_stderr", "line": "  y, sr_native = __audioread_load(path, offset, duration, dtype)"}
{"ts": 1757464250.8629732, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:136: FutureWarning: librosa.beat.tempo"}
{"ts": 1757464250.8629732, "kind": "mcp_stderr", "line": "\tThis function was moved to 'librosa.feature.rhythm.tempo' in librosa version 0.10.0."}
{"ts": 1757464250.8629732, "kind": "mcp_stderr", "line": "\tThis alias will be removed in librosa version 1.0."}
{"ts": 1757464250.8629732, "kind": "mcp_stderr", "line": "  bpm_arr = librosa.beat.tempo(y=y, sr=sr, aggregate=np.median)"}
{"ts": 1757464251.408545, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"status": "ok", "chosen": {"song_id": "9bc21b49-571c-4211-8b08-60a97df485c4", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464251.4070623, "playlist": "Focus (Minor)"}}}}
{"ts": 1757464275.7231953, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "default"}}}}
{"ts": 1757464275.724177, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 2, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757464291.3679967, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "default"}}}}
{"ts": 1757464291.3679967, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 3, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757464622.871964, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757464622.88416, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757464623.3341906, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heur�stica.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canci�n,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vac�a canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757464623.7149363, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757464623.729939, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757464624.1502838, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757464624.1512847, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757464624.1512847, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 2, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757464624.1522844, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757464624.1522844, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 3, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757464624.153287, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 4, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757464624.153287, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 4, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757464624.153287, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 5, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757464624.1542847, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 5, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757464624.1542847, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 6, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757464624.1542847, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 6, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757464624.1542847, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 7, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757464624.1552832, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 7, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757464624.1552832, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 8, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757464624.1552832, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 8, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757464624.1552832, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 9, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757464624.1562834, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 9, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757464624.1562834, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 10, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757464624.1562834, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 10, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757464624.1562834, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 11, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757464624.1573443, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 11, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757464624.1573443, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 12, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757464624.1583514, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 12, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757464624.1583514, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 13, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757464624.1593502, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 13, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757464624.1593502, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 14, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757464624.1593502, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 14, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757464624.1593502, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 15, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757464624.1603513, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 15, "result": {"name": "Party", "songs": []}}}
{"ts": 1757464624.1603513, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 16, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757464624.1613498, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 16, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757464624.1613498, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 17, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757464624.1613498, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 17, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757464624.1613498, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 18, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757464624.1623511, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 18, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757464624.1623511, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 19, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757464624.1623511, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 19, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757464637.9376273, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 20, "method": "tools/call", "params": {"name": "add_song", "arguments": {"title": "Finesse", "artists": "Bruno Mars", "workspace": "demo"}}}}
{"ts": 1757464640.9321628, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:106: UserWarning: PySoundFile failed. Trying audioread instead."}
{"ts": 1757464640.9331572, "kind": "mcp_stderr", "line": "  y, sr = librosa.load(audio_path, sr=None, mono=True, duration=max_duration)"}
{"ts": 1757464640.9331572, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Lib\\site-packages\\librosa\\core\\audio.py:184: FutureWarning: librosa.core.audio.__audioread_load"}
{"ts": 1757464640.9331572, "kind": "mcp_stderr", "line": "\tDeprecated as of librosa version 0.10.0."}
{"ts": 1757464640.934047, "kind": "mcp_stderr", "line": "\tIt will be removed in librosa version 1.0."}
{"ts": 1757464640.934047, "kind": "mcp_stderr", "line": "  y, sr_native = __audioread_load(path, offset, duration, dtype)"}
{"ts": 1757464642.6981242, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:136: FutureWarning: librosa.beat.tempo"}
{"ts": 1757464642.6981242, "kind": "mcp_stderr", "line": "\tThis function was moved to 'librosa.feature.rhythm.tempo' in librosa version 0.10.0."}
{"ts": 1757464642.6981242, "kind": "mcp_stderr", "line": "\tThis alias will be removed in librosa version 1.0."}
{"ts": 1757464642.6991363, "kind": "mcp_stderr", "line": "  bpm_arr = librosa.beat.tempo(y=y, sr=sr, aggregate=np.median)"}
{"ts": 1757464643.2499282, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 20, "result": {"status": "ok", "chosen": {"song_id": "a723429e-cd61-42df-ad6a-ec4515aa374d", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464643.249364, "playlist": "Focus (Minor)"}}}}
{"ts": 1757464643.2556229, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 21, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757464643.2568269, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 21, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 1}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757464643.257421, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 22, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757464643.2580025, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 22, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 1}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757464643.2580025, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 23, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757464643.2585168, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 23, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757464643.2590644, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 24, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757464643.2596107, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 24, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757464643.2596107, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 25, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757464643.2601264, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 25, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757464643.260705, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 26, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757464643.2612164, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 26, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757464643.2612164, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 27, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757464643.261783, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 27, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757464643.262374, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 28, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757464643.2628872, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 28, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757464643.2628872, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 29, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757464643.2634463, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 29, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757464643.2634463, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 30, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757464643.2639837, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 30, "result": {"name": "Focus (Minor)", "songs": [{"song_id": "a723429e-cd61-42df-ad6a-ec4515aa374d", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464643.249364, "playlist": "Focus (Minor)"}]}}}
{"ts": 1757464643.264516, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 31, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757464643.264516, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 31, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757464643.2650638, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 32, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757464643.265628, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 32, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757464643.265628, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 33, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757464643.2661412, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 33, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757464643.2661412, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 34, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757464643.2666588, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 34, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757464643.2666588, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 35, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757464643.267174, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 35, "result": {"name": "Party", "songs": []}}}
{"ts": 1757464643.267174, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 36, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757464643.267695, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 36, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757464643.2682219, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 37, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757464643.2682219, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 37, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757464643.2687974, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 38, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757464643.26933, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 38, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757464643.26933, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 39, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757464643.2698438, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 39, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757464645.9405181, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 40, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757464645.941072, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 40, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 1}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757464645.9416003, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 41, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757464645.9421513, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 41, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 1}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757464645.9421513, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 42, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757464645.942673, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 42, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757464645.9432042, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 43, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757464645.9440045, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 43, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757464645.9440045, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 44, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757464645.9449363, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 44, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757464645.9449363, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 45, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757464645.945442, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 45, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757464645.9459774, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 46, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757464645.9464962, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 46, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757464645.9464962, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 47, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757464645.9470298, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 47, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757464645.9470298, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 48, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757464645.9475431, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 48, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757464645.9480534, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 49, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757464645.9485903, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 49, "result": {"name": "Focus (Minor)", "songs": [{"song_id": "a723429e-cd61-42df-ad6a-ec4515aa374d", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464643.249364, "playlist": "Focus (Minor)"}]}}}
{"ts": 1757464645.9485903, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 50, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757464645.9491096, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 50, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757464645.9496455, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 51, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757464645.9496455, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 51, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757464645.950159, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 52, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757464645.9506752, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 52, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757464645.9506752, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 53, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757464645.9511924, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 53, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757464645.951752, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 54, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757464645.951752, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 54, "result": {"name": "Party", "songs": []}}}
{"ts": 1757464645.952269, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 55, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757464645.952887, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 55, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757464645.952887, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 56, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757464645.9534104, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 56, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757464645.9534104, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 57, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757464645.9539552, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 57, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757464645.9544768, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 58, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757464645.9549944, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 58, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757464662.7947385, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 59, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "default"}}}}
{"ts": 1757464662.7956362, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 59, "result": {"name": "Focus (Minor)", "songs": []}}}
{"ts": 1757464664.8439384, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 60, "method": "tools/call", "params": {"name": "add_song", "arguments": {"title": "Finesse", "artists": "Bruno Mars", "workspace": "demo"}}}}
{"ts": 1757464665.899648, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:106: UserWarning: PySoundFile failed. Trying audioread instead."}
{"ts": 1757464665.900652, "kind": "mcp_stderr", "line": "  y, sr = librosa.load(audio_path, sr=None, mono=True, duration=max_duration)"}
{"ts": 1757464665.900652, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Lib\\site-packages\\librosa\\core\\audio.py:184: FutureWarning: librosa.core.audio.__audioread_load"}
{"ts": 1757464665.900652, "kind": "mcp_stderr", "line": "\tDeprecated as of librosa version 0.10.0."}
{"ts": 1757464665.900652, "kind": "mcp_stderr", "line": "\tIt will be removed in librosa version 1.0."}
{"ts": 1757464665.900652, "kind": "mcp_stderr", "line": "  y, sr_native = __audioread_load(path, offset, duration, dtype)"}
{"ts": 1757464666.53017, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 60, "result": {"status": "ok", "chosen": {"song_id": "0d31b60b-9db8-4438-be17-b45da02983c8", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464666.529171, "playlist": "Focus (Minor)"}}}}
{"ts": 1757464666.533174, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 61, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757464666.5341773, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 61, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 2}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757464666.5341773, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 62, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757464666.5351813, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 62, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 2}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757464666.5351813, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 63, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757464666.5361753, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 63, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757464666.5361753, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 64, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757464666.5361753, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 64, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757464666.5361753, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 65, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757464666.5372825, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 65, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757464666.5372825, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 66, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757464666.5381753, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 66, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757464666.5381753, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 67, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757464666.5381753, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 67, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757464666.5392134, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 68, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757464666.5392134, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 68, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757464666.5392134, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 69, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757464666.5401754, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 69, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757464666.5401754, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 70, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757464666.5401754, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 70, "result": {"name": "Focus (Minor)", "songs": [{"song_id": "a723429e-cd61-42df-ad6a-ec4515aa374d", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464643.249364, "playlist": "Focus (Minor)"}, {"song_id": "0d31b60b-9db8-4438-be17-b45da02983c8", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464666.529171, "playlist": "Focus (Minor)"}]}}}
{"ts": 1757464666.5412083, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 71, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757464666.5412083, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 71, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757464666.5412083, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 72, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757464666.5421755, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 72, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757464666.5421755, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 73, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757464666.5421755, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 73, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757464666.5421755, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 74, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757464666.5431793, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 74, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757464666.5431793, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 75, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757464666.5431793, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 75, "result": {"name": "Party", "songs": []}}}
{"ts": 1757464666.5441747, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 76, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757464666.5441747, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 76, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757464666.5441747, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 77, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757464666.5441747, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 77, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757464666.54581, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 78, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757464666.54581, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 78, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757464666.5464728, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 79, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757464666.5464728, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 79, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757464668.1885345, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 80, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757464668.1895626, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 80, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 2}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757464668.1895626, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 81, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757464668.1909564, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 81, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 2}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757464668.1909564, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 82, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757464668.1919618, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 82, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757464668.1919618, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 83, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757464668.1919618, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 83, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757464668.1919618, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 84, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757464668.1929634, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 84, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757464668.1929634, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 85, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757464668.1929634, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 85, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757464668.1941159, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 86, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757464668.1941159, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 86, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757464668.1951225, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 87, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757464668.1951225, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 87, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757464668.1951225, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 88, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757464668.1961226, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 88, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757464668.1961226, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 89, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757464668.1961226, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 89, "result": {"name": "Focus (Minor)", "songs": [{"song_id": "a723429e-cd61-42df-ad6a-ec4515aa374d", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464643.249364, "playlist": "Focus (Minor)"}, {"song_id": "0d31b60b-9db8-4438-be17-b45da02983c8", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464666.529171, "playlist": "Focus (Minor)"}]}}}
{"ts": 1757464668.1971586, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 90, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757464668.1971586, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 90, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757464668.1971586, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 91, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757464668.1981282, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 91, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757464668.1981282, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 92, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757464668.1981282, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 92, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757464668.1991215, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 93, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757464668.1991215, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 93, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757464668.1991215, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 94, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757464668.1991215, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 94, "result": {"name": "Party", "songs": []}}}
{"ts": 1757464668.1991215, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 95, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757464668.2004027, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 95, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757464668.2004027, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 96, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757464668.2004027, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 96, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757464668.2004027, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 97, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757464668.201613, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 97, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757464668.201613, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 98, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757464668.201613, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 98, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757464693.683799, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 99, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757464693.6848056, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 99, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 2}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757464693.6848056, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 100, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757464693.685805, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 100, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757464693.685805, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 101, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757464693.6868064, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 101, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757464693.6868064, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 102, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757464693.6868064, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 102, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757464693.687843, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 103, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757464693.687843, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 103, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757464693.687843, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 104, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757464693.689166, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 104, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757464693.689166, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 105, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757464693.6896694, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 105, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757464693.6896694, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 106, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757464693.6896694, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 106, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757464693.691152, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 107, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757464693.691152, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 107, "result": {"name": "Focus (Minor)", "songs": [{"song_id": "a723429e-cd61-42df-ad6a-ec4515aa374d", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464643.249364, "playlist": "Focus (Minor)"}, {"song_id": "0d31b60b-9db8-4438-be17-b45da02983c8", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464666.529171, "playlist": "Focus (Minor)"}]}}}
{"ts": 1757464693.691152, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 108, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757464693.692232, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 108, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757464693.692232, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 109, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757464693.692232, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 109, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757464693.6932504, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 110, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757464693.6932504, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 110, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757464693.6932504, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 111, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757464693.6932504, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 111, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757464693.6946707, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 112, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757464693.6946707, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 112, "result": {"name": "Party", "songs": []}}}
{"ts": 1757464693.6946707, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 113, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757464693.6956766, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 113, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757464693.6956766, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 114, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757464693.6956766, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 114, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757464693.6956766, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 115, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757464693.696676, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 115, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757464693.696676, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 116, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757464693.696676, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 116, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757464695.2095456, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 117, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757464695.2095456, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 117, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 2}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757464695.2108538, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 118, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757464695.2108538, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 118, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 2}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757464695.2108538, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 119, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757464695.212246, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 119, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757464695.212246, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 120, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757464695.212246, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 120, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757464695.212246, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 121, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757464695.2132523, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 121, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757464695.2132523, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 122, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757464695.2132523, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 122, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757464695.2132523, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 123, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757464695.214704, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 123, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757464695.214704, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 124, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757464695.214704, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 124, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757464695.214704, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 125, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757464695.2160556, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 125, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757464695.2160556, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 126, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757464695.217061, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 126, "result": {"name": "Focus (Minor)", "songs": [{"song_id": "a723429e-cd61-42df-ad6a-ec4515aa374d", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464643.249364, "playlist": "Focus (Minor)"}, {"song_id": "0d31b60b-9db8-4438-be17-b45da02983c8", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464666.529171, "playlist": "Focus (Minor)"}]}}}
{"ts": 1757464695.217061, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 127, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757464695.2180612, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 127, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757464695.2180612, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 128, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757464695.2180612, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 128, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757464695.219224, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 129, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757464695.219224, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 129, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757464695.219224, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 130, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757464695.2202303, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 130, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757464695.2212296, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 131, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757464695.2212296, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 131, "result": {"name": "Party", "songs": []}}}
{"ts": 1757464695.2212296, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 132, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757464695.2222314, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 132, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757464695.2222314, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 133, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757464695.2222314, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 133, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757464695.223693, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 134, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757464695.223693, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 134, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757464695.223693, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 135, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757464695.2246988, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 135, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757464698.3137507, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 136, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757464698.3137507, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 136, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 2}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757464698.314757, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 137, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757464698.314757, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 137, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757464698.314757, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 138, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757464698.3157575, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 138, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757464698.3157575, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 139, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757464698.3157575, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 139, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757464698.3168025, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 140, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757464698.3168025, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 140, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757464698.317757, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 141, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757464698.317757, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 141, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757464698.317757, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 142, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757464698.317757, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 142, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757464698.319011, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 143, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757464698.319011, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 143, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757464698.319011, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 144, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757464698.3200214, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 144, "result": {"name": "Focus (Minor)", "songs": [{"song_id": "a723429e-cd61-42df-ad6a-ec4515aa374d", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464643.249364, "playlist": "Focus (Minor)"}, {"song_id": "0d31b60b-9db8-4438-be17-b45da02983c8", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464666.529171, "playlist": "Focus (Minor)"}]}}}
{"ts": 1757464698.3200214, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 145, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757464698.3200214, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 145, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757464698.3200214, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 146, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757464698.321017, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 146, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757464698.321017, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 147, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757464698.321017, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 147, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757464698.3220162, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 148, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757464698.3220162, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 148, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757464698.3220162, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 149, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757464698.323015, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 149, "result": {"name": "Party", "songs": []}}}
{"ts": 1757464698.323015, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 150, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757464698.323015, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 150, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757464698.323015, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 151, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757464698.3240192, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 151, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757464698.3240192, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 152, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757464698.3240192, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 152, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757464698.3240192, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 153, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757464698.3251479, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 153, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757464699.4863122, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 154, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757464699.487713, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 154, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 2}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757464699.487713, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 155, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757464699.4887285, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 155, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 2}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757464699.4887285, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 156, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757464699.4897263, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 156, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757464699.4897263, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 157, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757464699.49079, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 157, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757464699.4918303, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 158, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757464699.4918303, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 158, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757464699.4918303, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 159, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757464699.4927766, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 159, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757464699.4927766, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 160, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757464699.4937246, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 160, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757464699.4937246, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 161, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757464699.4937246, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 161, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757464699.4947653, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 162, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757464699.4947653, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 162, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757464699.4957242, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 163, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757464699.4957242, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 163, "result": {"name": "Focus (Minor)", "songs": [{"song_id": "a723429e-cd61-42df-ad6a-ec4515aa374d", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464643.249364, "playlist": "Focus (Minor)"}, {"song_id": "0d31b60b-9db8-4438-be17-b45da02983c8", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464666.529171, "playlist": "Focus (Minor)"}]}}}
{"ts": 1757464699.4967313, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 164, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757464699.4967313, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 164, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757464699.4967313, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 165, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757464699.4977658, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 165, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757464699.4977658, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 166, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757464699.4987233, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 166, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757464699.4987233, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 167, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757464699.4987233, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 167, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757464699.4998243, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 168, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757464699.4998243, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 168, "result": {"name": "Party", "songs": []}}}
{"ts": 1757464699.500732, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 169, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757464699.500732, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 169, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757464699.5017226, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 170, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757464699.5017226, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 170, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757464699.5017226, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 171, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757464699.502738, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 171, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757464699.502738, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 172, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757464699.5037236, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 172, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757464701.1330664, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 173, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757464701.1340675, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 173, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 2}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757464701.1340675, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 174, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757464701.1340675, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 174, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757464701.1355507, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 175, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757464701.136211, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 175, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757464701.136211, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 176, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757464701.136211, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 176, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757464701.1372192, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 177, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757464701.1372192, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 177, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757464701.1372192, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 178, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757464701.1372192, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 178, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757464701.1385713, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 179, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757464701.1385713, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 179, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757464701.1385713, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 180, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757464701.1385713, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 180, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757464701.1399946, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 181, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757464701.1399946, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 181, "result": {"name": "Focus (Minor)", "songs": [{"song_id": "a723429e-cd61-42df-ad6a-ec4515aa374d", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464643.249364, "playlist": "Focus (Minor)"}, {"song_id": "0d31b60b-9db8-4438-be17-b45da02983c8", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464666.529171, "playlist": "Focus (Minor)"}]}}}
{"ts": 1757464701.1399946, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 182, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757464701.1399946, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 182, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757464701.1399946, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 183, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757464701.141472, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 183, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757464701.141472, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 184, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757464701.141472, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 184, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757464701.1424797, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 185, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757464701.1424797, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 185, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757464701.1424797, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 186, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757464701.1424797, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 186, "result": {"name": "Party", "songs": []}}}
{"ts": 1757464701.143914, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 187, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757464701.143914, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 187, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757464701.143914, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 188, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757464701.143914, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 188, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757464701.1449199, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 189, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757464701.1449199, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 189, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757464701.1449199, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 190, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757464701.1459181, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 190, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757464702.2100475, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 191, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757464702.2110586, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 191, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 2}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757464702.2110586, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 192, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757464702.2120576, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 192, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 2}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757464702.2120576, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 193, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757464702.2130578, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 193, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757464702.2130578, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 194, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757464702.2140565, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 194, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757464702.2140565, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 195, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757464702.2140565, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 195, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757464702.2150571, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 196, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757464702.2150571, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 196, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757464702.2150571, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 197, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757464702.2150571, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 197, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757464702.2160568, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 198, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757464702.2160568, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 198, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757464702.2170575, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 199, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757464702.2170575, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 199, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757464702.2170575, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 200, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757464702.2180636, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 200, "result": {"name": "Focus (Minor)", "songs": [{"song_id": "a723429e-cd61-42df-ad6a-ec4515aa374d", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464643.249364, "playlist": "Focus (Minor)"}, {"song_id": "0d31b60b-9db8-4438-be17-b45da02983c8", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464666.529171, "playlist": "Focus (Minor)"}]}}}
{"ts": 1757464702.2180636, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 201, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757464702.2190585, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 201, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757464702.2190585, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 202, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757464702.2190585, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 202, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757464702.2200582, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 203, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757464702.2200582, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 203, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757464702.2200582, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 204, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757464702.2210698, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 204, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757464702.2210698, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 205, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757464702.2210698, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 205, "result": {"name": "Party", "songs": []}}}
{"ts": 1757464702.2220576, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 206, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757464702.2220576, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 206, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757464702.2220576, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 207, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757464702.2230616, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 207, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757464702.2240741, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 208, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757464702.2240741, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 208, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757464702.2240741, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 209, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757464702.2240741, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 209, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757465047.7711298, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 210, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757465047.7721386, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 210, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 2}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757465047.7726436, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 211, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757465047.7726436, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 211, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757465047.7726436, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 212, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757465047.7737756, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 212, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757465047.7737756, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 213, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757465047.7747943, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 213, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757465047.7747943, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 214, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757465047.775785, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 214, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757465047.775785, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 215, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757465047.7767892, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 215, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757465047.7767892, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 216, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757465047.7767892, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 216, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757465047.7767892, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 217, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757465047.7782977, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 217, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757465047.7782977, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 218, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757465047.7782977, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 218, "result": {"name": "Focus (Minor)", "songs": [{"song_id": "a723429e-cd61-42df-ad6a-ec4515aa374d", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464643.249364, "playlist": "Focus (Minor)"}, {"song_id": "0d31b60b-9db8-4438-be17-b45da02983c8", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464666.529171, "playlist": "Focus (Minor)"}]}}}
{"ts": 1757465047.7797208, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 219, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757465047.7797208, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 219, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757465047.7797208, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 220, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757465047.78073, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 220, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757465047.78073, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 221, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757465047.7817285, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 221, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757465047.7817285, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 222, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757465047.7817285, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 222, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757465047.78276, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 223, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757465047.78276, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 223, "result": {"name": "Party", "songs": []}}}
{"ts": 1757465047.78276, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 224, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757465047.7837346, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 224, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757465047.7837346, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 225, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757465047.7847633, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 225, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757465047.7847633, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 226, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757465047.7847633, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 226, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757465047.785751, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 227, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757465047.785751, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 227, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757465056.8181114, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757465056.8265786, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757465057.2489047, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heurística.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canción,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vacía canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757465065.8332949, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 228, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757465065.8344467, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 228, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 2}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757465065.8344467, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 229, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Acoustic / Mellow", "workspace": "demo"}}}}
{"ts": 1757465065.8349686, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 229, "result": {"name": "Acoustic / Mellow", "songs": []}}}
{"ts": 1757465065.8356445, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 230, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Ballads", "workspace": "demo"}}}}
{"ts": 1757465065.8356445, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 230, "result": {"name": "Ballads", "songs": []}}}
{"ts": 1757465065.8361685, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 231, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Bass 140", "workspace": "demo"}}}}
{"ts": 1757465065.836762, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 231, "result": {"name": "Bass 140", "songs": []}}}
{"ts": 1757465065.8373263, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 232, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Chill", "workspace": "demo"}}}}
{"ts": 1757465065.8378956, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 232, "result": {"name": "Chill", "songs": []}}}
{"ts": 1757465065.8378956, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 233, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Coffeehouse", "workspace": "demo"}}}}
{"ts": 1757465065.8384187, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 233, "result": {"name": "Coffeehouse", "songs": []}}}
{"ts": 1757465065.838945, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 234, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Daylight Pop", "workspace": "demo"}}}}
{"ts": 1757465065.8395708, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 234, "result": {"name": "Daylight Pop", "songs": []}}}
{"ts": 1757465065.8395708, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 235, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "DNB 170", "workspace": "demo"}}}}
{"ts": 1757465065.8402221, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 235, "result": {"name": "DNB 170", "songs": []}}}
{"ts": 1757465065.840746, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 236, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Focus (Minor)", "workspace": "demo"}}}}
{"ts": 1757465065.8418424, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 236, "result": {"name": "Focus (Minor)", "songs": [{"song_id": "a723429e-cd61-42df-ad6a-ec4515aa374d", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464643.249364, "playlist": "Focus (Minor)"}, {"song_id": "0d31b60b-9db8-4438-be17-b45da02983c8", "title": "Finesse", "artists": "Bruno Mars", "duration_sec": 29.929, "bpm": 105.47, "key": "F", "mode": "minor", "energy": 0.446, "brightness": 0.194, "source_url": "https://music.apple.com/us/album/finesse/1161503945?i=1161504065&uo=4", "added_at": 1757464666.529171, "playlist": "Focus (Minor)"}]}}}
{"ts": 1757465065.8418424, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 237, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "House / Club", "workspace": "demo"}}}}
{"ts": 1757465065.8423607, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 237, "result": {"name": "House / Club", "songs": []}}}
{"ts": 1757465065.842911, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 238, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Lo-Fi / Study", "workspace": "demo"}}}}
{"ts": 1757465065.8434753, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 238, "result": {"name": "Lo-Fi / Study", "songs": []}}}
{"ts": 1757465065.8434753, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 239, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757465065.843995, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 239, "result": {"name": "Misc", "songs": []}}}
{"ts": 1757465065.844536, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 240, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Night Drive", "workspace": "demo"}}}}
{"ts": 1757465065.8450892, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 240, "result": {"name": "Night Drive", "songs": []}}}
{"ts": 1757465065.8456202, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 241, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Party", "workspace": "demo"}}}}
{"ts": 1757465065.8456202, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 241, "result": {"name": "Party", "songs": []}}}
{"ts": 1757465065.8461754, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 242, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Rave 130–140", "workspace": "demo"}}}}
{"ts": 1757465065.846889, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 242, "result": {"name": "Rave 130–140", "songs": []}}}
{"ts": 1757465065.8474283, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 243, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Run 160", "workspace": "demo"}}}}
{"ts": 1757465065.8479471, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 243, "result": {"name": "Run 160", "songs": []}}}
{"ts": 1757465065.8479471, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 244, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Urban 85–100", "workspace": "demo"}}}}
{"ts": 1757465065.848475, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 244, "result": {"name": "Urban 85–100", "songs": []}}}
{"ts": 1757465065.8490593, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 245, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Workout", "workspace": "demo"}}}}
{"ts": 1757465065.8495831, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 245, "result": {"name": "Workout", "songs": []}}}
{"ts": 1757465982.3069015, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757465982.3199065, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757465982.8159478, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heur�stica.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canci�n,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vac�a canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757465983.1588082, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757465990.592518, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "default"}}}}
{"ts": 1757465990.593515, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 0}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757466009.7440417, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "add_song", "arguments": {"title": "Blinding Lights", "artists": "The Weeknd", "workspace": "demo"}}}}
{"ts": 1757466012.1976428, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:106: UserWarning: PySoundFile failed. Trying audioread instead."}
{"ts": 1757466012.1986423, "kind": "mcp_stderr", "line": "  y, sr = librosa.load(audio_path, sr=None, mono=True, duration=max_duration)"}
{"ts": 1757466012.1986423, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Lib\\site-packages\\librosa\\core\\audio.py:184: FutureWarning: librosa.core.audio.__audioread_load"}
{"ts": 1757466012.1986423, "kind": "mcp_stderr", "line": "\tDeprecated as of librosa version 0.10.0."}
{"ts": 1757466012.1996417, "kind": "mcp_stderr", "line": "\tIt will be removed in librosa version 1.0."}
{"ts": 1757466012.1996417, "kind": "mcp_stderr", "line": "  y, sr_native = __audioread_load(path, offset, duration, dtype)"}
{"ts": 1757466014.1355464, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:136: FutureWarning: librosa.beat.tempo"}
{"ts": 1757466014.1355464, "kind": "mcp_stderr", "line": "\tThis function was moved to 'librosa.feature.rhythm.tempo' in librosa version 0.10.0."}
{"ts": 1757466014.1355464, "kind": "mcp_stderr", "line": "\tThis alias will be removed in librosa version 1.0."}
{"ts": 1757466014.1365252, "kind": "mcp_stderr", "line": "  bpm_arr = librosa.beat.tempo(y=y, sr=sr, aggregate=np.median)"}
{"ts": 1757466014.7292416, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 2, "result": {"status": "ok", "chosen": {"song_id": "a3387d19-b4e7-4e23-adb1-4ff2284cf7ba", "title": "Blinding Lights", "artists": "The Weeknd", "duration_sec": 29.976, "bpm": 86.13, "key": "F", "mode": "minor", "energy": 0.649, "brightness": 0.131, "source_url": "https://music.apple.com/us/album/blinding-lights/1499378108?i=1499378607&uo=4", "added_at": 1757466014.7282593, "playlist": "Misc"}}}}
{"ts": 1757466075.7551455, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757466075.7632065, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757466076.2742548, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heurística.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canción,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vacía canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757466077.82097, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757466077.8225174, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 3, "result": {"name": "Misc", "songs": [{"song_id": "a3387d19-b4e7-4e23-adb1-4ff2284cf7ba", "title": "Blinding Lights", "artists": "The Weeknd", "duration_sec": 29.976, "bpm": 86.13, "key": "F", "mode": "minor", "energy": 0.649, "brightness": 0.131, "source_url": "https://music.apple.com/us/album/blinding-lights/1499378108?i=1499378607&uo=4", "added_at": 1757466014.7282593, "playlist": "Misc"}]}}}
{"ts": 1757476961.0937781, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757476961.1159413, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757476963.3889205, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heur�stica.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canci�n,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vac�a canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757476963.9549844, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757477362.141491, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757477362.1456957, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757477362.5461874, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heurística.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canción,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vacía canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757480120.9739428, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "\"./servers/filesystem/root\""]}
{"ts": 1757480120.985941, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757480123.3114858, "kind": "mcp_stderr", "line": "Error accessing directory C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root: Error: ENOENT: no such file or directory, stat 'C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root'"}
{"ts": 1757480123.3120062, "kind": "mcp_stderr", "line": "    at async Object.stat (node:internal/fs/promises:1025:18)"}
{"ts": 1757480123.312548, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:43:23"}
{"ts": 1757480123.3130949, "kind": "mcp_stderr", "line": "    at async Promise.all (index 0)"}
{"ts": 1757480123.31363, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:41:1 {"}
{"ts": 1757480123.31363, "kind": "mcp_stderr", "line": "  errno: -4058,"}
{"ts": 1757480123.3142087, "kind": "mcp_stderr", "line": "  code: 'ENOENT',"}
{"ts": 1757480123.3147254, "kind": "mcp_stderr", "line": "  syscall: 'stat',"}
{"ts": 1757480123.3152566, "kind": "mcp_stderr", "line": "  path: 'C:\\\\Users\\\\jjcam\\\\Desktop\\\\Semestre_8\\\\Redes\\\\proyecto1redes_Final\\\\mcp-console-host\\\\\".\\\\servers\\\\filesystem\\\\root'"}
{"ts": 1757480123.3157938, "kind": "mcp_stderr", "line": "}"}
{"ts": 1757480151.7716718, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "\"./servers/filesystem/root\""]}
{"ts": 1757480153.706961, "kind": "mcp_stderr", "line": "Error accessing directory C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root: Error: ENOENT: no such file or directory, stat 'C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root'"}
{"ts": 1757480153.706961, "kind": "mcp_stderr", "line": "    at async Object.stat (node:internal/fs/promises:1025:18)"}
{"ts": 1757480153.7075276, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:43:23"}
{"ts": 1757480153.7080665, "kind": "mcp_stderr", "line": "    at async Promise.all (index 0)"}
{"ts": 1757480153.7080665, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:41:1 {"}
{"ts": 1757480153.7088299, "kind": "mcp_stderr", "line": "  errno: -4058,"}
{"ts": 1757480153.7093585, "kind": "mcp_stderr", "line": "  code: 'ENOENT',"}
{"ts": 1757480153.7093585, "kind": "mcp_stderr", "line": "  syscall: 'stat',"}
{"ts": 1757480153.7098827, "kind": "mcp_stderr", "line": "  path: 'C:\\\\Users\\\\jjcam\\\\Desktop\\\\Semestre_8\\\\Redes\\\\proyecto1redes_Final\\\\mcp-console-host\\\\\".\\\\servers\\\\filesystem\\\\root'"}
{"ts": 1757480153.7098827, "kind": "mcp_stderr", "line": "}"}
{"ts": 1757480185.1652293, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "\"./servers/filesystem/root\""]}
{"ts": 1757480185.1715126, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757480186.9727268, "kind": "mcp_stderr", "line": "Error accessing directory C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root: Error: ENOENT: no such file or directory, stat 'C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root'"}
{"ts": 1757480186.973726, "kind": "mcp_stderr", "line": "    at async Object.stat (node:internal/fs/promises:1025:18)"}
{"ts": 1757480186.973726, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:43:23"}
{"ts": 1757480186.973726, "kind": "mcp_stderr", "line": "    at async Promise.all (index 0)"}
{"ts": 1757480186.9747274, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:41:1 {"}
{"ts": 1757480186.9747274, "kind": "mcp_stderr", "line": "  errno: -4058,"}
{"ts": 1757480186.9747274, "kind": "mcp_stderr", "line": "  code: 'ENOENT',"}
{"ts": 1757480186.97573, "kind": "mcp_stderr", "line": "  syscall: 'stat',"}
{"ts": 1757480186.97573, "kind": "mcp_stderr", "line": "  path: 'C:\\\\Users\\\\jjcam\\\\Desktop\\\\Semestre_8\\\\Redes\\\\proyecto1redes_Final\\\\mcp-console-host\\\\\".\\\\servers\\\\filesystem\\\\root'"}
{"ts": 1757480186.97573, "kind": "mcp_stderr", "line": "}"}
{"ts": 1757480450.7469723, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "\"./servers/filesystem/root\""]}
{"ts": 1757480450.762406, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757480452.7479122, "kind": "mcp_stderr", "line": "Error accessing directory C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root: Error: ENOENT: no such file or directory, stat 'C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root'"}
{"ts": 1757480452.7479122, "kind": "mcp_stderr", "line": "    at async Object.stat (node:internal/fs/promises:1025:18)"}
{"ts": 1757480452.748914, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:43:23"}
{"ts": 1757480452.748914, "kind": "mcp_stderr", "line": "    at async Promise.all (index 0)"}
{"ts": 1757480452.748914, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:41:1 {"}
{"ts": 1757480452.7499108, "kind": "mcp_stderr", "line": "  errno: -4058,"}
{"ts": 1757480452.7499108, "kind": "mcp_stderr", "line": "  code: 'ENOENT',"}
{"ts": 1757480452.7499108, "kind": "mcp_stderr", "line": "  syscall: 'stat',"}
{"ts": 1757480452.7499108, "kind": "mcp_stderr", "line": "  path: 'C:\\\\Users\\\\jjcam\\\\Desktop\\\\Semestre_8\\\\Redes\\\\proyecto1redes_Final\\\\mcp-console-host\\\\\".\\\\servers\\\\filesystem\\\\root'"}
{"ts": 1757480452.7499108, "kind": "mcp_stderr", "line": "}"}
{"ts": 1757480481.3125756, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "\"./servers/filesystem/root\""]}
{"ts": 1757480483.0480783, "kind": "mcp_stderr", "line": "Error accessing directory C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root: Error: ENOENT: no such file or directory, stat 'C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root'"}
{"ts": 1757480483.0480783, "kind": "mcp_stderr", "line": "    at async Object.stat (node:internal/fs/promises:1025:18)"}
{"ts": 1757480483.0480783, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:43:23"}
{"ts": 1757480483.0490785, "kind": "mcp_stderr", "line": "    at async Promise.all (index 0)"}
{"ts": 1757480483.0490785, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:41:1 {"}
{"ts": 1757480483.0490785, "kind": "mcp_stderr", "line": "  errno: -4058,"}
{"ts": 1757480483.0500786, "kind": "mcp_stderr", "line": "  code: 'ENOENT',"}
{"ts": 1757480483.0500786, "kind": "mcp_stderr", "line": "  syscall: 'stat',"}
{"ts": 1757480483.0500786, "kind": "mcp_stderr", "line": "  path: 'C:\\\\Users\\\\jjcam\\\\Desktop\\\\Semestre_8\\\\Redes\\\\proyecto1redes_Final\\\\mcp-console-host\\\\\".\\\\servers\\\\filesystem\\\\root'"}
{"ts": 1757480483.0510795, "kind": "mcp_stderr", "line": "}"}
{"ts": 1757480495.344071, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "\"./servers/filesystem/root\""]}
{"ts": 1757480495.3634374, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757480497.1609805, "kind": "mcp_stderr", "line": "Error accessing directory C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root: Error: ENOENT: no such file or directory, stat 'C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root'"}
{"ts": 1757480497.1609805, "kind": "mcp_stderr", "line": "    at async Object.stat (node:internal/fs/promises:1025:18)"}
{"ts": 1757480497.1609805, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:43:23"}
{"ts": 1757480497.1619768, "kind": "mcp_stderr", "line": "    at async Promise.all (index 0)"}
{"ts": 1757480497.1619768, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:41:1 {"}
{"ts": 1757480497.1619768, "kind": "mcp_stderr", "line": "  errno: -4058,"}
{"ts": 1757480497.162977, "kind": "mcp_stderr", "line": "  code: 'ENOENT',"}
{"ts": 1757480497.162977, "kind": "mcp_stderr", "line": "  syscall: 'stat',"}
{"ts": 1757480497.162977, "kind": "mcp_stderr", "line": "  path: 'C:\\\\Users\\\\jjcam\\\\Desktop\\\\Semestre_8\\\\Redes\\\\proyecto1redes_Final\\\\mcp-console-host\\\\\".\\\\servers\\\\filesystem\\\\root'"}
{"ts": 1757480497.162977, "kind": "mcp_stderr", "line": "}"}
{"ts": 1757480525.5897677, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "\"./servers/filesystem/root\""]}
{"ts": 1757480525.5989814, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757480527.4710822, "kind": "mcp_stderr", "line": "Error accessing directory C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root: Error: ENOENT: no such file or directory, stat 'C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root'"}
{"ts": 1757480527.4710822, "kind": "mcp_stderr", "line": "    at async Object.stat (node:internal/fs/promises:1025:18)"}
{"ts": 1757480527.4720619, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:43:23"}
{"ts": 1757480527.4720619, "kind": "mcp_stderr", "line": "    at async Promise.all (index 0)"}
{"ts": 1757480527.4720619, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:41:1 {"}
{"ts": 1757480527.473062, "kind": "mcp_stderr", "line": "  errno: -4058,"}
{"ts": 1757480527.473062, "kind": "mcp_stderr", "line": "  code: 'ENOENT',"}
{"ts": 1757480527.473062, "kind": "mcp_stderr", "line": "  syscall: 'stat',"}
{"ts": 1757480527.4745162, "kind": "mcp_stderr", "line": "  path: 'C:\\\\Users\\\\jjcam\\\\Desktop\\\\Semestre_8\\\\Redes\\\\proyecto1redes_Final\\\\mcp-console-host\\\\\".\\\\servers\\\\filesystem\\\\root'"}
{"ts": 1757480527.4745162, "kind": "mcp_stderr", "line": "}"}
{"ts": 1757480567.730878, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "\"./servers/filesystem/root\""]}
{"ts": 1757480567.7461517, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757480569.6374922, "kind": "mcp_stderr", "line": "Error accessing directory C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root: Error: ENOENT: no such file or directory, stat 'C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root'"}
{"ts": 1757480569.6384919, "kind": "mcp_stderr", "line": "    at async Object.stat (node:internal/fs/promises:1025:18)"}
{"ts": 1757480569.6384919, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:43:23"}
{"ts": 1757480569.6394897, "kind": "mcp_stderr", "line": "    at async Promise.all (index 0)"}
{"ts": 1757480569.6394897, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:41:1 {"}
{"ts": 1757480569.6404896, "kind": "mcp_stderr", "line": "  errno: -4058,"}
{"ts": 1757480569.6404896, "kind": "mcp_stderr", "line": "  code: 'ENOENT',"}
{"ts": 1757480569.6404896, "kind": "mcp_stderr", "line": "  syscall: 'stat',"}
{"ts": 1757480569.6414912, "kind": "mcp_stderr", "line": "  path: 'C:\\\\Users\\\\jjcam\\\\Desktop\\\\Semestre_8\\\\Redes\\\\proyecto1redes_Final\\\\mcp-console-host\\\\\".\\\\servers\\\\filesystem\\\\root'"}
{"ts": 1757480569.6414912, "kind": "mcp_stderr", "line": "}"}
{"ts": 1757480598.3036294, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "\"./servers/filesystem/root\""]}
{"ts": 1757480600.1770778, "kind": "mcp_stderr", "line": "Error accessing directory C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root: Error: ENOENT: no such file or directory, stat 'C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root'"}
{"ts": 1757480600.1770778, "kind": "mcp_stderr", "line": "    at async Object.stat (node:internal/fs/promises:1025:18)"}
{"ts": 1757480600.17797, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:43:23"}
{"ts": 1757480600.17797, "kind": "mcp_stderr", "line": "    at async Promise.all (index 0)"}
{"ts": 1757480600.17797, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:41:1 {"}
{"ts": 1757480600.17897, "kind": "mcp_stderr", "line": "  errno: -4058,"}
{"ts": 1757480600.17897, "kind": "mcp_stderr", "line": "  code: 'ENOENT',"}
{"ts": 1757480600.17897, "kind": "mcp_stderr", "line": "  syscall: 'stat',"}
{"ts": 1757480600.17897, "kind": "mcp_stderr", "line": "  path: 'C:\\\\Users\\\\jjcam\\\\Desktop\\\\Semestre_8\\\\Redes\\\\proyecto1redes_Final\\\\mcp-console-host\\\\\".\\\\servers\\\\filesystem\\\\root'"}
{"ts": 1757480600.1801322, "kind": "mcp_stderr", "line": "}"}
{"ts": 1757481172.8370767, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "\"./servers/filesystem/root\""]}
{"ts": 1757481172.85295, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757481174.950782, "kind": "mcp_stderr", "line": "Error accessing directory C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root: Error: ENOENT: no such file or directory, stat 'C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root'"}
{"ts": 1757481174.9517992, "kind": "mcp_stderr", "line": "    at async Object.stat (node:internal/fs/promises:1025:18)"}
{"ts": 1757481174.9517992, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:43:23"}
{"ts": 1757481174.9527955, "kind": "mcp_stderr", "line": "    at async Promise.all (index 0)"}
{"ts": 1757481174.9537938, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:41:1 {"}
{"ts": 1757481174.9537938, "kind": "mcp_stderr", "line": "  errno: -4058,"}
{"ts": 1757481174.9537938, "kind": "mcp_stderr", "line": "  code: 'ENOENT',"}
{"ts": 1757481174.9550953, "kind": "mcp_stderr", "line": "  syscall: 'stat',"}
{"ts": 1757481174.9550953, "kind": "mcp_stderr", "line": "  path: 'C:\\\\Users\\\\jjcam\\\\Desktop\\\\Semestre_8\\\\Redes\\\\proyecto1redes_Final\\\\mcp-console-host\\\\\".\\\\servers\\\\filesystem\\\\root'"}
{"ts": 1757481174.9563608, "kind": "mcp_stderr", "line": "}"}
{"ts": 1757481233.0648336, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "\"./servers/filesystem/root\""]}
{"ts": 1757481233.0708234, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757481234.9943247, "kind": "mcp_stderr", "line": "Error accessing directory C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root: Error: ENOENT: no such file or directory, stat 'C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\\".\\servers\\filesystem\\root'"}
{"ts": 1757481234.9953249, "kind": "mcp_stderr", "line": "    at async Object.stat (node:internal/fs/promises:1025:18)"}
{"ts": 1757481234.9953249, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:43:23"}
{"ts": 1757481234.9953249, "kind": "mcp_stderr", "line": "    at async Promise.all (index 0)"}
{"ts": 1757481234.9964814, "kind": "mcp_stderr", "line": "    at async file:///C:/Users/jjcam/AppData/Local/npm-cache/_npx/a3241bba59c344f5/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js:41:1 {"}
{"ts": 1757481234.9964814, "kind": "mcp_stderr", "line": "  errno: -4058,"}
{"ts": 1757481234.9975078, "kind": "mcp_stderr", "line": "  code: 'ENOENT',"}
{"ts": 1757481234.9975078, "kind": "mcp_stderr", "line": "  syscall: 'stat',"}
{"ts": 1757481234.9975078, "kind": "mcp_stderr", "line": "  path: 'C:\\\\Users\\\\jjcam\\\\Desktop\\\\Semestre_8\\\\Redes\\\\proyecto1redes_Final\\\\mcp-console-host\\\\\".\\\\servers\\\\filesystem\\\\root'"}
{"ts": 1757481234.9987304, "kind": "mcp_stderr", "line": "}"}
{"ts": 1757481725.9834032, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757481725.9994085, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757481728.0433042, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757481728.050304, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757481728.061722, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757481728.0693462, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757481730.0841784, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757481730.0904272, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757481772.5831604, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757481772.5972683, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757481774.4362855, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757481774.442347, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757481774.8156173, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757481776.8232658, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757482318.3072026, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757482318.3278794, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757482320.5868022, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757482320.5937076, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757482320.991056, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757482323.1587293, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757482329.090801, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/call", "params": {"name": "write_file", "arguments": {"workspace": ".", "path": "README.md", "content": "Hola MCP"}}}}
{"ts": 1757482329.0962918, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Error: Access denied - path outside allowed directories: C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\README.md not in C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root"}], "isError": true}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757482330.9631004, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "list_allowed_directories", "arguments": {"workspace": "."}}}}
{"ts": 1757482330.966044, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Allowed directories:\nC:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root"}]}, "jsonrpc": "2.0", "id": 2}}
{"ts": 1757482775.433596, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757482775.4515939, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757482777.3540635, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757482777.3606894, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757482777.7272828, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757482779.7004037, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757482791.8503132, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/call", "params": {"name": "list_allowed_directories", "arguments": {"workspace": "default"}}}}
{"ts": 1757482791.854795, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Allowed directories:\nC:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root"}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757482804.1858692, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "write_file", "arguments": {"workspace": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root", "path": "README.md", "content": "Hola MCP"}}}}
{"ts": 1757482804.1880639, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Error: Access denied - path outside allowed directories: C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\README.md not in C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root"}], "isError": true}, "jsonrpc": "2.0", "id": 2}}
{"ts": 1757482805.980939, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "list_allowed_directories", "arguments": {"workspace": "default"}}}}
{"ts": 1757482805.982923, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Allowed directories:\nC:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root"}]}, "jsonrpc": "2.0", "id": 3}}
{"ts": 1757510268.4882824, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757510268.507422, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757510271.2238386, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757510271.2323172, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757510271.7104616, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757510274.091117, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757510283.314024, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/call", "params": {"name": "list_allowed_directories", "arguments": {"workspace": "demo"}}}}
{"ts": 1757510283.3195484, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Allowed directories:\nC:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root"}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757510344.385469, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "write_file", "arguments": {"path": "C:\\Users\\...\\servers\\filesystem\\root\\README.md", "content": "Hola MCP", "workspace": "demo"}}}}
{"ts": 1757510344.3899794, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Error: Access denied - path outside allowed directories: C:\\Users\\...\\servers\\filesystem\\root\\README.md not in C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root"}], "isError": true}, "jsonrpc": "2.0", "id": 2}}
{"ts": 1757510751.981989, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "read_text_file", "arguments": {"path": "C:\\Users\\...\\servers\\filesystem\\root\\README.md", "workspace": "demo"}}}}
{"ts": 1757510751.985032, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Error: Access denied - path outside allowed directories: C:\\Users\\...\\servers\\filesystem\\root\\README.md not in C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root"}], "isError": true}, "jsonrpc": "2.0", "id": 3}}
{"ts": 1757512344.1469972, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757512344.1572511, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757512346.1950026, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757512346.2010026, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757512346.5553586, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757512348.059693, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757512372.2430387, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757512372.2494748, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757512372.2503726, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "list_allowed_directories", "arguments": {}}}}
{"ts": 1757512372.2525244, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Allowed directories:\nC:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root"}]}, "jsonrpc": "2.0", "id": 2}}
{"ts": 1757512457.7810793, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/list"}}
{"ts": 1757512457.7840803, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 3}}
{"ts": 1757512457.7840803, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 4, "method": "tools/call", "params": {"name": "write_file", "arguments": {"path": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root", "Content": "Hola MCPFYLESISTEM"}}}}
{"ts": 1757512457.7877288, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Error: Invalid arguments for write_file: [\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"content\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}], "isError": true}, "jsonrpc": "2.0", "id": 4}}
{"ts": 1757512851.997428, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757512852.0106094, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757512853.7668574, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757512853.7735393, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757512854.1075556, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757512856.1610386, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757512867.4962885, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757512867.502365, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757512867.50326, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "list_allowed_directories", "arguments": {}}}}
{"ts": 1757512867.5053446, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Allowed directories:\nC:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root"}]}, "jsonrpc": "2.0", "id": 2}}
{"ts": 1757512886.0319793, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "write_file", "arguments": {"path": "C:/Users/jjcam/Desktop/Semestre_8/Redes/proyecto1redes_Final/mcp-console-host/servers/filesystem/root/README.md", "content": "Hola MCP"}}}}
{"ts": 1757512886.0363307, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Successfully wrote to C:/Users/jjcam/Desktop/Semestre_8/Redes/proyecto1redes_Final/mcp-console-host/servers/filesystem/root/README.md"}]}, "jsonrpc": "2.0", "id": 3}}
{"ts": 1757512905.4813814, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 4, "method": "tools/call", "params": {"name": "read_text_file", "arguments": {"path": "C:/Users/jjcam/Desktop/Semestre_8/Redes/proyecto1redes_Final/mcp-console-host/servers/filesystem/root/README.md"}}}}
{"ts": 1757512905.484384, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Hola MCP"}]}, "jsonrpc": "2.0", "id": 4}}
{"ts": 1757512916.5999217, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 5, "method": "tools/call", "params": {"name": "list_directory", "arguments": {"path": "C:/Users/jjcam/Desktop/Semestre_8/Redes/proyecto1redes_Final/mcp-console-host/servers/filesystem/root"}}}}
{"ts": 1757512916.6031468, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "[FILE] README.md"}]}, "jsonrpc": "2.0", "id": 5}}
{"ts": 1757512928.6095238, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 6, "method": "tools/list"}}
{"ts": 1757512928.612528, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 6}}
{"ts": 1757512928.612528, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 7, "method": "tools/call", "params": {"name": "edit_file", "arguments": {"path": "C:/Users/jjcam/Desktop/Semestre_8/Redes/proyecto1redes_Final/mcp-console-host/servers/filesystem/root/README.md", "edits": [{"oldText": "Hola MCP", "newText": "Hola MCP 👋"}]}}}}
{"ts": 1757512928.619442, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "```diff\nIndex: C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root\\README.md\n===================================================================\n--- C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root\\README.md\toriginal\n+++ C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root\\README.md\tmodified\n@@ -1,1 +1,1 @@\n-Hola MCP\n\\ No newline at end of file\n+Hola MCP 👋\n\\ No newline at end of file\n```\n\n"}]}, "jsonrpc": "2.0", "id": 7}}
{"ts": 1757513187.335346, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 8, "method": "tools/list"}}
{"ts": 1757513187.3383474, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 8}}
{"ts": 1757513187.340517, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 9, "method": "tools/call", "params": {"name": "move_file", "arguments": {"source": "C:/Users/jjcam/Desktop/Semestre_8/Redes/proyecto1redes_Final/mcp-console-host/servers/filesystem/root/README.md", "destination": "C:/Users/jjcam/Desktop/Semestre_8/Redes/proyecto1redes_Final/mcp-console-host/servers/filesystem/root/docs/README.txt"}}}}
{"ts": 1757513187.3435152, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Error: Parent directory does not exist: C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root\\docs"}], "isError": true}, "jsonrpc": "2.0", "id": 9}}
{"ts": 1757513205.3001838, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 10, "method": "tools/call", "params": {"name": "move_file", "arguments": {"source": "C:/Users/jjcam/Desktop/Semestre_8/Redes/proyecto1redes_Final/mcp-console-host/servers/filesystem/root/README.md", "destination": "C:/Users/jjcam/Desktop/Semestre_8/Redes/proyecto1redes_Final/mcp-console-host/servers/filesystem/root/docs/README.txt"}}}}
{"ts": 1757513205.3032005, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Successfully moved C:/Users/jjcam/Desktop/Semestre_8/Redes/proyecto1redes_Final/mcp-console-host/servers/filesystem/root/README.md to C:/Users/jjcam/Desktop/Semestre_8/Redes/proyecto1redes_Final/mcp-console-host/servers/filesystem/root/docs/README.txt"}]}, "jsonrpc": "2.0", "id": 10}}
{"ts": 1757513831.4194827, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 11, "method": "tools/list"}}
{"ts": 1757513831.4215012, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 11}}
{"ts": 1757513831.4224818, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 12, "method": "tools/call", "params": {"name": "get_file_info", "arguments": {"path": "C:/Users/jjcam/Desktop/Semestre_8/Redes/proyecto1redes_Final/mcp-console-host/servers/filesystem/root/README.txt"}}}}
{"ts": 1757513831.4245052, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "size: 13\ncreated: Wed Sep 10 2025 08:02:08 GMT-0600 (hora estándar central)\nmodified: Wed Sep 10 2025 08:02:08 GMT-0600 (hora estándar central)\naccessed: Wed Sep 10 2025 08:02:08 GMT-0600 (hora estándar central)\nisDirectory: false\nisFile: true\npermissions: 666"}]}, "jsonrpc": "2.0", "id": 12}}
{"ts": 1757514295.8124619, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757514295.8244538, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757514297.4482968, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heur�stica.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canci�n,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vac�a canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757514297.772953, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757514318.330421, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757514318.331432, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heurística.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canción,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vacía canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757514318.3324318, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "add_song", "arguments": {"title": "Man in the Mirror", "artists": "Michael Jackson", "workspace": "demo"}}}}
{"ts": 1757514327.740468, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:106: UserWarning: PySoundFile failed. Trying audioread instead."}
{"ts": 1757514327.740468, "kind": "mcp_stderr", "line": "  y, sr = librosa.load(audio_path, sr=None, mono=True, duration=max_duration)"}
{"ts": 1757514327.740468, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Lib\\site-packages\\librosa\\core\\audio.py:184: FutureWarning: librosa.core.audio.__audioread_load"}
{"ts": 1757514327.740468, "kind": "mcp_stderr", "line": "\tDeprecated as of librosa version 0.10.0."}
{"ts": 1757514327.740468, "kind": "mcp_stderr", "line": "\tIt will be removed in librosa version 1.0."}
{"ts": 1757514327.740468, "kind": "mcp_stderr", "line": "  y, sr_native = __audioread_load(path, offset, duration, dtype)"}
{"ts": 1757514330.1604114, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:136: FutureWarning: librosa.beat.tempo"}
{"ts": 1757514330.1604114, "kind": "mcp_stderr", "line": "\tThis function was moved to 'librosa.feature.rhythm.tempo' in librosa version 0.10.0."}
{"ts": 1757514330.1604114, "kind": "mcp_stderr", "line": "\tThis alias will be removed in librosa version 1.0."}
{"ts": 1757514330.1614103, "kind": "mcp_stderr", "line": "  bpm_arr = librosa.beat.tempo(y=y, sr=sr, aggregate=np.median)"}
{"ts": 1757514330.7728856, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 2, "result": {"status": "ok", "chosen": {"song_id": "0b1acdba-07a3-4001-b964-13f9efb05b30", "title": "Man In the Mirror", "artists": "Michael Jackson", "duration_sec": 29.929, "bpm": 101.33, "key": "G", "mode": "major", "energy": 0.551, "brightness": 0.112, "source_url": "https://music.apple.com/us/album/man-in-the-mirror/159292399?i=159294478&uo=4", "added_at": 1757514330.7728856, "playlist": "Coffeehouse"}}}}
{"ts": 1757518135.1092603, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/list"}}
{"ts": 1757518135.1306524, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 3, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heurística.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canción,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vacía canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757518135.1306524, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 4, "method": "tools/call", "params": {"name": "add_song", "arguments": {"title": "Closer", "artists": "The Chainsmokers", "workspace": "demo"}}}}
{"ts": 1757518136.2298765, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 4, "result": {"status": "needs_confirmation", "candidates": [{"id": "1170699703", "title": "Closer (feat. Halsey)", "artists": "The Chainsmokers", "duration_sec": 245.506, "source_url": "https://music.apple.com/us/album/closer-feat-halsey/1170699510?i=1170699703&uo=4", "preview_url": "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview221/v4/21/ea/39/21ea396a-1ba4-a3e3-255f-9b4bcc658be5/mzaf_4947033148218955115.plus.aac.p.m4a", "provider": "apple", "confidence": 0.6688888888888889}, {"id": "1174430677", "title": "Closer (feat. Halsey) [Wuki Remix]", "artists": "The Chainsmokers", "duration_sec": 243.387, "source_url": "https://music.apple.com/us/album/closer-feat-halsey-wuki-remix/1174430660?i=1174430677&uo=4", "preview_url": "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview125/v4/16/d1/9e/16d19eaf-7f89-3988-a6e9-47b25bab09d8/mzaf_14739752921462801215.plus.aac.p.m4a", "provider": "apple", "confidence": 0.575}, {"id": "1174430674", "title": "Closer (feat. Halsey) [R3hab Remix]", "artists": "The Chainsmokers", "duration_sec": 161.12, "source_url": "https://music.apple.com/us/album/closer-feat-halsey-r3hab-remix/1174430660?i=1174430674&uo=4", "preview_url": "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview125/v4/34/42/0a/34420a2f-148d-6a1c-d37b-7fdf2ac975a7/mzaf_9633665460067010892.plus.aac.p.m4a", "provider": "apple", "confidence": 0.5702439024390245}, {"id": "1174430676", "title": "Closer (feat. Halsey) [T-Mass Remix]", "artists": "The Chainsmokers", "duration_sec": 247.52, "source_url": "https://music.apple.com/us/album/closer-feat-halsey-t-mass-remix/1174430660?i=1174430676&uo=4", "preview_url": "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview115/v4/73/6c/79/736c7907-bf8c-9edc-2374-615ae855549a/mzaf_4862812548934409125.plus.aac.p.m4a", "provider": "apple", "confidence": 0.5657142857142857}, {"id": "1174430675", "title": "Closer (feat. Halsey) [Shaun Frank Remix]", "artists": "The Chainsmokers", "duration_sec": 252.427, "source_url": "https://music.apple.com/us/album/closer-feat-halsey-shaun-frank-remix/1174430660?i=1174430675&uo=4", "preview_url": "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview125/v4/e4/d1/48/e4d1483b-515c-7545-391e-756422f74b50/mzaf_15166722016041999539.plus.aac.p.m4a", "provider": "apple", "confidence": 0.5459574468085107}], "message": "Se encontraron múltiples coincidencias o ninguna. Indica 'candidate_index' o 'candidate_id' en una nueva llamada a add_song."}}}
{"ts": 1757518162.1192822, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 5, "method": "tools/call", "params": {"name": "add_song", "arguments": {"title": "Closer", "artists": "The Chainsmokers feat. Halsey", "candidate_index": 0, "workspace": "demo"}}}}
{"ts": 1757518163.0342734, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:106: UserWarning: PySoundFile failed. Trying audioread instead."}
{"ts": 1757518163.0342734, "kind": "mcp_stderr", "line": "  y, sr = librosa.load(audio_path, sr=None, mono=True, duration=max_duration)"}
{"ts": 1757518163.0372713, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Lib\\site-packages\\librosa\\core\\audio.py:184: FutureWarning: librosa.core.audio.__audioread_load"}
{"ts": 1757518163.0372713, "kind": "mcp_stderr", "line": "\tDeprecated as of librosa version 0.10.0."}
{"ts": 1757518163.038272, "kind": "mcp_stderr", "line": "\tIt will be removed in librosa version 1.0."}
{"ts": 1757518163.038272, "kind": "mcp_stderr", "line": "  y, sr_native = __audioread_load(path, offset, duration, dtype)"}
{"ts": 1757518164.1438777, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 5, "result": {"status": "ok", "chosen": {"song_id": "eee37670-d557-4cdd-80db-47c27d2c3b65", "title": "Closer (feat. Halsey)", "artists": "The Chainsmokers", "duration_sec": 29.976, "bpm": 95.7, "key": "F", "mode": "minor", "energy": 0.712, "brightness": 0.174, "source_url": "https://music.apple.com/us/album/closer-feat-halsey/1170699510?i=1170699703&uo=4", "added_at": 1757518164.1434362, "playlist": "Night Drive"}}}}
{"ts": 1757518240.1783483, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757518240.198397, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757518242.8855395, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757518242.8946624, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757518243.3575158, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757518245.557439, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757529705.0616786, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757529705.075346, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757529706.8648148, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757529706.8707776, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757529714.850711, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757529714.8647377, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757529716.3944106, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757529716.40033, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757529716.8992133, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757529718.7131722, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757529737.2095494, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757529737.216007, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757529737.216007, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "list_directory", "arguments": {"workspace": "."}}}}
{"ts": 1757529737.219012, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Error: Invalid arguments for list_directory: [\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"path\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}], "isError": true}, "jsonrpc": "2.0", "id": 2}}
{"ts": 1757529739.0415344, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "list_directory", "arguments": {"workspace": "/"}}}}
{"ts": 1757529739.043918, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Error: Invalid arguments for list_directory: [\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"path\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}], "isError": true}, "jsonrpc": "2.0", "id": 3}}
{"ts": 1757530274.3764858, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757530274.3926327, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757530276.191286, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757530276.1992922, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757530276.569953, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757530278.6962743, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757538559.6754467, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757538562.6450408, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757538577.523343, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757538577.5296052, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757539142.9554968, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757539144.8926775, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757539154.6273413, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757539154.6342924, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757539165.02832, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757539165.0423198, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757539166.8486836, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757539166.85472, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757539167.1901438, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757539169.0172012, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757539203.290258, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757539203.2966485, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757539203.2966485, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "write_file", "arguments": {"path": "C:/Users/jjcam/Desktop/Semestre_8/Redes/proyecto1redes_Final/mcp-console-host/servers/filesystem/root/README.md", "content": "Hola MCP estamos en la prueba de clase"}}}}
{"ts": 1757539203.3036468, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Successfully wrote to C:/Users/jjcam/Desktop/Semestre_8/Redes/proyecto1redes_Final/mcp-console-host/servers/filesystem/root/README.md"}]}, "jsonrpc": "2.0", "id": 2}}
{"ts": 1757541504.3898852, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757541506.4085212, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757541743.907668, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757541743.9332502, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757542836.6130803, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757542838.5937047, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757542850.4246178, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757542850.4309168, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757542852.4698029, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "list_allowed_directories", "arguments": {}}}}
{"ts": 1757542852.472193, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Allowed directories:\nC:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root"}]}, "jsonrpc": "2.0", "id": 2}}
{"ts": 1757542854.6201677, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "write_file", "arguments": {"path": "C:\\\\Users\\\\jjcam\\\\Desktop\\\\Semestre_8\\\\Redes\\\\proyecto1redes_Final\\\\mcp-console-host\\\\servers\\\\filesystem\\\\root\\\\README.md", "content": "Hola mundo"}}}}
{"ts": 1757542854.6233923, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Successfully wrote to C:\\\\Users\\\\jjcam\\\\Desktop\\\\Semestre_8\\\\Redes\\\\proyecto1redes_Final\\\\mcp-console-host\\\\servers\\\\filesystem\\\\root\\\\README.md"}]}, "jsonrpc": "2.0", "id": 3}}
{"ts": 1757542871.2343524, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 4, "method": "tools/list"}}
{"ts": 1757542871.2366555, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 4}}
{"ts": 1757551730.7324631, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757551732.6755037, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757551760.5488307, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757551760.5604014, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757551762.5052547, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "list_allowed_directories", "arguments": {}}}}
{"ts": 1757551762.508565, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Allowed directories:\nC:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root"}]}, "jsonrpc": "2.0", "id": 2}}
{"ts": 1757551764.8410919, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "write_file", "arguments": {"path": "C:\\\\Users\\\\jjcam\\\\Desktop\\\\Semestre_8\\\\Redes\\\\proyecto1redes_Final\\\\mcp-console-host\\\\servers\\\\filesystem\\\\root\\\\README.md", "content": "Hola mundo"}}}}
{"ts": 1757551764.8450925, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Successfully wrote to C:\\\\Users\\\\jjcam\\\\Desktop\\\\Semestre_8\\\\Redes\\\\proyecto1redes_Final\\\\mcp-console-host\\\\servers\\\\filesystem\\\\root\\\\README.md"}]}, "jsonrpc": "2.0", "id": 3}}
{"ts": 1757551900.9420822, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757551902.965891, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757551906.0617907, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757551906.069323, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757551908.171886, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "list_allowed_directories", "arguments": {}}}}
{"ts": 1757551908.1741328, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Allowed directories:\nC:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root"}]}, "jsonrpc": "2.0", "id": 2}}
{"ts": 1757551910.339909, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "create_directory", "arguments": {"path": "C:\\\\Users\\\\jjcam\\\\Desktop\\\\Semestre_8\\\\Redes\\\\proyecto1redes_Final\\\\mcp-console-host\\\\servers\\\\filesystem\\\\root\\\\docs"}}}}
{"ts": 1757551910.3423796, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Successfully created directory C:\\\\Users\\\\jjcam\\\\Desktop\\\\Semestre_8\\\\Redes\\\\proyecto1redes_Final\\\\mcp-console-host\\\\servers\\\\filesystem\\\\root\\\\docs"}]}, "jsonrpc": "2.0", "id": 3}}
{"ts": 1757551927.5905805, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 4, "method": "tools/list"}}
{"ts": 1757551927.5918303, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 4}}
{"ts": 1757551944.5092459, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 5, "method": "tools/list"}}
{"ts": 1757551944.5112474, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 5}}
{"ts": 1757552184.5133436, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-filesystem", "./servers/filesystem/root"]}
{"ts": 1757552186.351821, "kind": "mcp_stderr", "line": "Secure MCP Filesystem Server running on stdio"}
{"ts": 1757552189.9539828, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757552189.9599836, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757552191.8537552, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "list_allowed_directories", "arguments": {}}}}
{"ts": 1757552191.855839, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Allowed directories:\nC:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root"}]}, "jsonrpc": "2.0", "id": 2}}
{"ts": 1757552194.1032193, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "list_directory", "arguments": {"path": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root"}}}}
{"ts": 1757552194.1068666, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "[DIR] docs"}]}, "jsonrpc": "2.0", "id": 3}}
{"ts": 1757552196.5345278, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 4, "method": "tools/call", "params": {"name": "list_directory", "arguments": {"path": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root\\docs"}}}}
{"ts": 1757552196.53757, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": ""}]}, "jsonrpc": "2.0", "id": 4}}
{"ts": 1757552213.7006495, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 5, "method": "tools/list"}}
{"ts": 1757552213.702652, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 5}}
{"ts": 1757552216.2411747, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 6, "method": "tools/call", "params": {"name": "write_file", "arguments": {"path": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root\\docs\\README.md", "content": "Hola mundo"}}}}
{"ts": 1757552216.245232, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Successfully wrote to C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root\\docs\\README.md"}]}, "jsonrpc": "2.0", "id": 6}}
{"ts": 1757552218.4312873, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 7, "method": "tools/call", "params": {"name": "read_text_file", "arguments": {"path": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root\\docs\\README.md"}}}}
{"ts": 1757552218.4342852, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Hola mundo"}]}, "jsonrpc": "2.0", "id": 7}}
{"ts": 1757552260.6571038, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 8, "method": "tools/list"}}
{"ts": 1757552260.6591263, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 8}}
{"ts": 1757552263.0527492, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 9, "method": "tools/call", "params": {"name": "list_directory", "arguments": {"path": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root\\docs"}}}}
{"ts": 1757552263.0554311, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "[FILE] README.md"}]}, "jsonrpc": "2.0", "id": 9}}
{"ts": 1757552265.3336773, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 10, "method": "tools/call", "params": {"name": "read_text_file", "arguments": {"path": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root\\docs\\README.md"}}}}
{"ts": 1757552265.3361778, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Hola mundo"}]}, "jsonrpc": "2.0", "id": 10}}
{"ts": 1757552298.732169, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 11, "method": "tools/list"}}
{"ts": 1757552298.7331693, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 11}}
{"ts": 1757552489.1120393, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 12, "method": "tools/list"}}
{"ts": 1757552489.113344, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 12}}
{"ts": 1757552492.1017857, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 13, "method": "tools/call", "params": {"name": "move_file", "arguments": {"source": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root\\docs\\README.md", "destination": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root\\README.md"}}}}
{"ts": 1757552492.1050293, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Successfully moved C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root\\docs\\README.md to C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root\\README.md"}]}, "jsonrpc": "2.0", "id": 13}}
{"ts": 1757552494.6831648, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 14, "method": "tools/call", "params": {"name": "list_directory", "arguments": {"path": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root\\docs"}}}}
{"ts": 1757552494.685688, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": ""}]}, "jsonrpc": "2.0", "id": 14}}
{"ts": 1757552496.6619596, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 15, "method": "tools/call", "params": {"name": "list_directory", "arguments": {"path": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root"}}}}
{"ts": 1757552496.663978, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "[DIR] docs\n[FILE] README.md"}]}, "jsonrpc": "2.0", "id": 15}}
{"ts": 1757552499.0381215, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 16, "method": "tools/call", "params": {"name": "read_text_file", "arguments": {"path": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root\\README.md"}}}}
{"ts": 1757552499.0411785, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Hola mundo"}]}, "jsonrpc": "2.0", "id": 16}}
{"ts": 1757552564.9262068, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 17, "method": "tools/list"}}
{"ts": 1757552564.9272075, "kind": "resp", "payload": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 17}}
{"ts": 1757552567.5823283, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 18, "method": "tools/call", "params": {"name": "create_directory", "arguments": {"path": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root\\docs\\docspt2"}}}}
{"ts": 1757552567.5855742, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "Successfully created directory C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root\\docs\\docspt2"}]}, "jsonrpc": "2.0", "id": 18}}
{"ts": 1757552569.9467816, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 19, "method": "tools/call", "params": {"name": "list_directory", "arguments": {"path": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\proyecto1redes_Final\\mcp-console-host\\servers\\filesystem\\root\\docs"}}}}
{"ts": 1757552569.9509614, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "[DIR] docspt2"}]}, "jsonrpc": "2.0", "id": 19}}
{"ts": 1757552638.4131618, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757552644.1751575, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757552644.1765742, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heurística.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canción,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vacía canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757552708.977844, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/list"}}
{"ts": 1757552708.9788537, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 2, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heurística.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canción,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vacía canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757552711.1536171, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "add_song", "arguments": {"title": "Through the Wire", "artists": "Kanye West", "workspace": "demo"}}}}
{"ts": 1757552721.7916682, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:106: UserWarning: PySoundFile failed. Trying audioread instead."}
{"ts": 1757552721.792652, "kind": "mcp_stderr", "line": "  y, sr = librosa.load(audio_path, sr=None, mono=True, duration=max_duration)"}
{"ts": 1757552721.792652, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Lib\\site-packages\\librosa\\core\\audio.py:184: FutureWarning: librosa.core.audio.__audioread_load"}
{"ts": 1757552721.792652, "kind": "mcp_stderr", "line": "\tDeprecated as of librosa version 0.10.0."}
{"ts": 1757552721.792652, "kind": "mcp_stderr", "line": "\tIt will be removed in librosa version 1.0."}
{"ts": 1757552721.792652, "kind": "mcp_stderr", "line": "  y, sr_native = __audioread_load(path, offset, duration, dtype)"}
{"ts": 1757552724.1820498, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:136: FutureWarning: librosa.beat.tempo"}
{"ts": 1757552724.1820498, "kind": "mcp_stderr", "line": "\tThis function was moved to 'librosa.feature.rhythm.tempo' in librosa version 0.10.0."}
{"ts": 1757552724.1820498, "kind": "mcp_stderr", "line": "\tThis alias will be removed in librosa version 1.0."}
{"ts": 1757552724.1820498, "kind": "mcp_stderr", "line": "  bpm_arr = librosa.beat.tempo(y=y, sr=sr, aggregate=np.median)"}
{"ts": 1757552724.8007214, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 3, "result": {"status": "ok", "chosen": {"song_id": "37e8b2d1-d4a3-4aac-9822-2509b3df50e3", "title": "Through The Wire", "artists": "Kanye West", "duration_sec": 29.929, "bpm": 129.2, "key": "A", "mode": "minor", "energy": 0.569, "brightness": 0.108, "source_url": "https://music.apple.com/us/album/through-the-wire/1412872568?i=1412873613&uo=4", "added_at": 1757552724.799721, "playlist": "Misc"}}}}
{"ts": 1757552866.2070343, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 4, "method": "tools/list"}}
{"ts": 1757552866.2080362, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 4, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heurística.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canción,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vacía canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757552867.56921, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 5, "method": "tools/call", "params": {"name": "list_playlists", "arguments": {"workspace": "demo"}}}}
{"ts": 1757552867.5716035, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 5, "result": {"playlists": [{"name": "Acoustic / Mellow", "count": 0}, {"name": "Ballads", "count": 0}, {"name": "Bass 140", "count": 0}, {"name": "Chill", "count": 0}, {"name": "Coffeehouse", "count": 0}, {"name": "Daylight Pop", "count": 0}, {"name": "DNB 170", "count": 0}, {"name": "Focus (Minor)", "count": 0}, {"name": "House / Club", "count": 0}, {"name": "Lo-Fi / Study", "count": 0}, {"name": "Misc", "count": 1}, {"name": "Night Drive", "count": 0}, {"name": "Party", "count": 0}, {"name": "Rave 130–140", "count": 0}, {"name": "Run 160", "count": 0}, {"name": "Urban 85–100", "count": 0}, {"name": "Workout", "count": 0}]}}}
{"ts": 1757552916.58945, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 6, "method": "tools/list"}}
{"ts": 1757552916.5906043, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 6, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heurística.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canción,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vacía canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757552918.235503, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 7, "method": "tools/call", "params": {"name": "get_playlist", "arguments": {"name": "Misc", "workspace": "demo"}}}}
{"ts": 1757552918.236681, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 7, "result": {"name": "Misc", "songs": [{"song_id": "37e8b2d1-d4a3-4aac-9822-2509b3df50e3", "title": "Through The Wire", "artists": "Kanye West", "duration_sec": 29.929, "bpm": 129.2, "key": "A", "mode": "minor", "energy": 0.569, "brightness": 0.108, "source_url": "https://music.apple.com/us/album/through-the-wire/1412872568?i=1412873613&uo=4", "added_at": 1757552724.799721, "playlist": "Misc"}]}}}
{"ts": 1757553003.3933403, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 8, "method": "tools/list"}}
{"ts": 1757553003.39434, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 8, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heurística.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canción,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vacía canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757553005.082361, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 9, "method": "tools/call", "params": {"name": "clear_library", "arguments": {"workspace": "demo"}}}}
{"ts": 1757553005.0833597, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 9, "result": {"removed_songs": 1, "playlists_affected": 1}}}
{"ts": 1757553046.9511697, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757553046.9617336, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757553047.3623538, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heur�stica.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canci�n,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vac�a canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757553185.0259507, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757553185.038936, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757553185.535616, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heur�stica.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canci�n,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vac�a canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757553185.9004416, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757553220.5298018, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/call", "params": {"name": "add_song", "arguments": {"title": "La Agarro Bajando", "artists": "Gilberto Santa Rosa", "workspace": "demo"}}}}
{"ts": 1757553223.436653, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:106: UserWarning: PySoundFile failed. Trying audioread instead."}
{"ts": 1757553223.436653, "kind": "mcp_stderr", "line": "  y, sr = librosa.load(audio_path, sr=None, mono=True, duration=max_duration)"}
{"ts": 1757553223.4376726, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Lib\\site-packages\\librosa\\core\\audio.py:184: FutureWarning: librosa.core.audio.__audioread_load"}
{"ts": 1757553223.4376726, "kind": "mcp_stderr", "line": "\tDeprecated as of librosa version 0.10.0."}
{"ts": 1757553223.4376726, "kind": "mcp_stderr", "line": "\tIt will be removed in librosa version 1.0."}
{"ts": 1757553223.4386752, "kind": "mcp_stderr", "line": "  y, sr_native = __audioread_load(path, offset, duration, dtype)"}
{"ts": 1757553225.2386796, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:136: FutureWarning: librosa.beat.tempo"}
{"ts": 1757553225.2386796, "kind": "mcp_stderr", "line": "\tThis function was moved to 'librosa.feature.rhythm.tempo' in librosa version 0.10.0."}
{"ts": 1757553225.2396789, "kind": "mcp_stderr", "line": "\tThis alias will be removed in librosa version 1.0."}
{"ts": 1757553225.2396789, "kind": "mcp_stderr", "line": "  bpm_arr = librosa.beat.tempo(y=y, sr=sr, aggregate=np.median)"}
{"ts": 1757553225.7755787, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"status": "ok", "chosen": {"song_id": "30b3a38d-ac45-4342-831b-3f2c16f1aa92", "title": "La Agarró Bajando", "artists": "Gilberto Santa Rosa", "duration_sec": 29.929, "bpm": 101.33, "key": "F", "mode": "minor", "energy": 0.651, "brightness": 0.201, "source_url": "https://music.apple.com/us/album/la-agarr%C3%B3-bajando/170544235?i=170544677&uo=4", "added_at": 1757553225.7745829, "playlist": "Night Drive"}}}}
{"ts": 1757553246.3726344, "kind": "spawn", "cmd": ["C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Scripts\\python.exe", "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\server.py"]}
{"ts": 1757553266.2514906, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757553266.2527657, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 1, "result": {"tools": [{"name": "add_song", "description": "Busca, extrae features y agrega a playlist por heurística.", "input_schema": {"type": "object", "required": ["title"], "properties": {"title": {"type": "string"}, "artists": {"type": "string"}, "workspace": {"type": "string"}, "candidate_index": {"type": "integer"}, "candidate_id": {"type": "string"}}}}, {"name": "list_playlists", "description": "Lista playlists del workspace.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}, {"name": "get_playlist", "description": "Devuelve canciones y metadatos de una playlist.", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "export_playlist", "description": "Exporta playlist a XLSX (canción,bpm).", "input_schema": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}, "workspace": {"type": "string"}}}}, {"name": "clear_library", "description": "Vacía canciones y asociaciones; conserva nombres de playlists.", "input_schema": {"type": "object", "properties": {"workspace": {"type": "string"}}}}]}}}
{"ts": 1757553268.3719747, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "add_song", "arguments": {"title": "Te Va a Doler", "artists": "Maelo Ruiz", "workspace": "demo"}}}}
{"ts": 1757553271.6233943, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:106: UserWarning: PySoundFile failed. Trying audioread instead."}
{"ts": 1757553271.6233943, "kind": "mcp_stderr", "line": "  y, sr = librosa.load(audio_path, sr=None, mono=True, duration=max_duration)"}
{"ts": 1757553271.624396, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\venv\\Lib\\site-packages\\librosa\\core\\audio.py:184: FutureWarning: librosa.core.audio.__audioread_load"}
{"ts": 1757553271.624396, "kind": "mcp_stderr", "line": "\tDeprecated as of librosa version 0.10.0."}
{"ts": 1757553271.624396, "kind": "mcp_stderr", "line": "\tIt will be removed in librosa version 1.0."}
{"ts": 1757553271.625394, "kind": "mcp_stderr", "line": "  y, sr_native = __audioread_load(path, offset, duration, dtype)"}
{"ts": 1757553273.3449516, "kind": "mcp_stderr", "line": "C:\\Users\\jjcam\\Desktop\\Semestre_8\\Redes\\protocolo-redes-proyecto1\\setlist_architect\\features.py:136: FutureWarning: librosa.beat.tempo"}
{"ts": 1757553273.3449516, "kind": "mcp_stderr", "line": "\tThis function was moved to 'librosa.feature.rhythm.tempo' in librosa version 0.10.0."}
{"ts": 1757553273.3449516, "kind": "mcp_stderr", "line": "\tThis alias will be removed in librosa version 1.0."}
{"ts": 1757553273.346106, "kind": "mcp_stderr", "line": "  bpm_arr = librosa.beat.tempo(y=y, sr=sr, aggregate=np.median)"}
{"ts": 1757553273.9433305, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 2, "result": {"status": "ok", "chosen": {"song_id": "53b6dcd6-0027-48f3-8e04-1d4cfc074327", "title": "Te Va a Doler", "artists": "Maelo Ruiz", "duration_sec": 29.952, "bpm": 117.45, "key": "C", "mode": "minor", "energy": 0.537, "brightness": 0.126, "source_url": "https://music.apple.com/us/album/te-va-a-doler/1714490298?i=1714490300&uo=4", "added_at": 1757553273.9423287, "playlist": "Night Drive"}}}}
{"ts": 1757561559.423702, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-github"]}
{"ts": 1757561559.434108, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757561564.986403, "kind": "resp", "payload": {"result": {"tools": [{"name": "create_or_update_file", "description": "Create or update a single file in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path where to create/update the file"}, "content": {"type": "string", "description": "Content of the file"}, "message": {"type": "string", "description": "Commit message"}, "branch": {"type": "string", "description": "Branch to create/update the file in"}, "sha": {"type": "string", "description": "SHA of the file being replaced (required when updating existing files)"}}, "required": ["owner", "repo", "path", "content", "message", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_repositories", "description": "Search for GitHub repositories", "inputSchema": {"type": "object", "properties": {"query": {"type": "string", "description": "Search query (see GitHub search syntax)"}, "page": {"type": "number", "description": "Page number for pagination (default: 1)"}, "perPage": {"type": "number", "description": "Number of results per page (default: 30, max: 100)"}}, "required": ["query"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_repository", "description": "Create a new GitHub repository in your account", "inputSchema": {"type": "object", "properties": {"name": {"type": "string", "description": "Repository name"}, "description": {"type": "string", "description": "Repository description"}, "private": {"type": "boolean", "description": "Whether the repository should be private"}, "autoInit": {"type": "boolean", "description": "Initialize with README.md"}}, "required": ["name"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_contents", "description": "Get the contents of a file or directory from a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path to the file or directory"}, "branch": {"type": "string", "description": "Branch to get contents from"}}, "required": ["owner", "repo", "path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "push_files", "description": "Push multiple files to a GitHub repository in a single commit", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Branch to push to (e.g., 'main' or 'master')"}, "files": {"type": "array", "items": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false}, "description": "Array of files to push"}, "message": {"type": "string", "description": "Commit message"}}, "required": ["owner", "repo", "branch", "files", "message"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_issue", "description": "Create a new issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}}, "required": ["owner", "repo", "title"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request", "description": "Create a new pull request in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "title": {"type": "string", "description": "Pull request title"}, "body": {"type": "string", "description": "Pull request body/description"}, "head": {"type": "string", "description": "The name of the branch where your changes are implemented"}, "base": {"type": "string", "description": "The name of the branch you want the changes pulled into"}, "draft": {"type": "boolean", "description": "Whether to create the pull request as a draft"}, "maintainer_can_modify": {"type": "boolean", "description": "Whether maintainers can modify the pull request"}}, "required": ["owner", "repo", "title", "head", "base"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "fork_repository", "description": "Fork a GitHub repository to your account or specified organization", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "organization": {"type": "string", "description": "Optional: organization to fork to (defaults to your personal account)"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_branch", "description": "Create a new branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Name for the new branch"}, "from_branch": {"type": "string", "description": "Optional: source branch to create from (defaults to the repository's default branch)"}}, "required": ["owner", "repo", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_commits", "description": "Get list of commits of a branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "sha": {"type": "string"}, "page": {"type": "number"}, "perPage": {"type": "number"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_issues", "description": "List issues in a GitHub repository with filtering options", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "direction": {"type": "string", "enum": ["asc", "desc"]}, "labels": {"type": "array", "items": {"type": "string"}}, "page": {"type": "number"}, "per_page": {"type": "number"}, "since": {"type": "string"}, "sort": {"type": "string", "enum": ["created", "updated", "comments"]}, "state": {"type": "string", "enum": ["open", "closed", "all"]}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_issue", "description": "Update an existing issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}, "state": {"type": "string", "enum": ["open", "closed"]}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "add_issue_comment", "description": "Add a comment to an existing issue", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "body": {"type": "string"}}, "required": ["owner", "repo", "issue_number", "body"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_code", "description": "Search for code across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_issues", "description": "Search for issues and pull requests across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["comments", "reactions", "reactions-+1", "reactions--1", "reactions-smile", "reactions-thinking_face", "reactions-heart", "reactions-tada", "interactions", "created", "updated"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_users", "description": "Search for users on GitHub", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["followers", "repositories", "joined"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_issue", "description": "Get details of a specific issue in a GitHub repository.", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request", "description": "Get details of a specific pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_pull_requests", "description": "List and filter repository pull requests", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "state": {"type": "string", "enum": ["open", "closed", "all"], "description": "State of the pull requests to return"}, "head": {"type": "string", "description": "Filter by head user or head organization and branch name"}, "base": {"type": "string", "description": "Filter by base branch name"}, "sort": {"type": "string", "enum": ["created", "updated", "popularity", "long-running"], "description": "What to sort results by"}, "direction": {"type": "string", "enum": ["asc", "desc"], "description": "The direction of the sort"}, "per_page": {"type": "number", "description": "Results per page (max 100)"}, "page": {"type": "number", "description": "Page number of the results"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request_review", "description": "Create a review on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_id": {"type": "string", "description": "The SHA of the commit that needs a review"}, "body": {"type": "string", "description": "The body text of the review"}, "event": {"type": "string", "enum": ["APPROVE", "REQUEST_CHANGES", "COMMENT"], "description": "The review action to perform"}, "comments": {"type": "array", "items": {"anyOf": [{"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "position": {"type": "number", "description": "The position in the diff where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "position", "body"], "additionalProperties": false}, {"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "line": {"type": "number", "description": "The line number in the file where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "line", "body"], "additionalProperties": false}]}, "description": "Comments to post as part of the review (specify either position or line, not both)"}}, "required": ["owner", "repo", "pull_number", "body", "event"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "merge_pull_request", "description": "Merge a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_title": {"type": "string", "description": "Title for the automatic commit message"}, "commit_message": {"type": "string", "description": "Extra detail to append to automatic commit message"}, "merge_method": {"type": "string", "enum": ["merge", "squash", "rebase"], "description": "Merge method to use"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_files", "description": "Get the list of files changed in a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_status", "description": "Get the combined status of all status checks for a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_pull_request_branch", "description": "Update a pull request branch with the latest changes from the base branch", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "expected_head_sha": {"type": "string", "description": "The expected SHA of the pull request's HEAD ref"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_comments", "description": "Get the review comments on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_reviews", "description": "Get the reviews on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757561565.3461788, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-github"]}
{"ts": 1757561591.7085898, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-github"]}
{"ts": 1757561599.7619503, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757561599.7699497, "kind": "resp", "payload": {"result": {"tools": [{"name": "create_or_update_file", "description": "Create or update a single file in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path where to create/update the file"}, "content": {"type": "string", "description": "Content of the file"}, "message": {"type": "string", "description": "Commit message"}, "branch": {"type": "string", "description": "Branch to create/update the file in"}, "sha": {"type": "string", "description": "SHA of the file being replaced (required when updating existing files)"}}, "required": ["owner", "repo", "path", "content", "message", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_repositories", "description": "Search for GitHub repositories", "inputSchema": {"type": "object", "properties": {"query": {"type": "string", "description": "Search query (see GitHub search syntax)"}, "page": {"type": "number", "description": "Page number for pagination (default: 1)"}, "perPage": {"type": "number", "description": "Number of results per page (default: 30, max: 100)"}}, "required": ["query"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_repository", "description": "Create a new GitHub repository in your account", "inputSchema": {"type": "object", "properties": {"name": {"type": "string", "description": "Repository name"}, "description": {"type": "string", "description": "Repository description"}, "private": {"type": "boolean", "description": "Whether the repository should be private"}, "autoInit": {"type": "boolean", "description": "Initialize with README.md"}}, "required": ["name"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_contents", "description": "Get the contents of a file or directory from a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path to the file or directory"}, "branch": {"type": "string", "description": "Branch to get contents from"}}, "required": ["owner", "repo", "path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "push_files", "description": "Push multiple files to a GitHub repository in a single commit", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Branch to push to (e.g., 'main' or 'master')"}, "files": {"type": "array", "items": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false}, "description": "Array of files to push"}, "message": {"type": "string", "description": "Commit message"}}, "required": ["owner", "repo", "branch", "files", "message"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_issue", "description": "Create a new issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}}, "required": ["owner", "repo", "title"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request", "description": "Create a new pull request in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "title": {"type": "string", "description": "Pull request title"}, "body": {"type": "string", "description": "Pull request body/description"}, "head": {"type": "string", "description": "The name of the branch where your changes are implemented"}, "base": {"type": "string", "description": "The name of the branch you want the changes pulled into"}, "draft": {"type": "boolean", "description": "Whether to create the pull request as a draft"}, "maintainer_can_modify": {"type": "boolean", "description": "Whether maintainers can modify the pull request"}}, "required": ["owner", "repo", "title", "head", "base"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "fork_repository", "description": "Fork a GitHub repository to your account or specified organization", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "organization": {"type": "string", "description": "Optional: organization to fork to (defaults to your personal account)"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_branch", "description": "Create a new branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Name for the new branch"}, "from_branch": {"type": "string", "description": "Optional: source branch to create from (defaults to the repository's default branch)"}}, "required": ["owner", "repo", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_commits", "description": "Get list of commits of a branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "sha": {"type": "string"}, "page": {"type": "number"}, "perPage": {"type": "number"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_issues", "description": "List issues in a GitHub repository with filtering options", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "direction": {"type": "string", "enum": ["asc", "desc"]}, "labels": {"type": "array", "items": {"type": "string"}}, "page": {"type": "number"}, "per_page": {"type": "number"}, "since": {"type": "string"}, "sort": {"type": "string", "enum": ["created", "updated", "comments"]}, "state": {"type": "string", "enum": ["open", "closed", "all"]}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_issue", "description": "Update an existing issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}, "state": {"type": "string", "enum": ["open", "closed"]}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "add_issue_comment", "description": "Add a comment to an existing issue", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "body": {"type": "string"}}, "required": ["owner", "repo", "issue_number", "body"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_code", "description": "Search for code across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_issues", "description": "Search for issues and pull requests across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["comments", "reactions", "reactions-+1", "reactions--1", "reactions-smile", "reactions-thinking_face", "reactions-heart", "reactions-tada", "interactions", "created", "updated"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_users", "description": "Search for users on GitHub", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["followers", "repositories", "joined"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_issue", "description": "Get details of a specific issue in a GitHub repository.", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request", "description": "Get details of a specific pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_pull_requests", "description": "List and filter repository pull requests", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "state": {"type": "string", "enum": ["open", "closed", "all"], "description": "State of the pull requests to return"}, "head": {"type": "string", "description": "Filter by head user or head organization and branch name"}, "base": {"type": "string", "description": "Filter by base branch name"}, "sort": {"type": "string", "enum": ["created", "updated", "popularity", "long-running"], "description": "What to sort results by"}, "direction": {"type": "string", "enum": ["asc", "desc"], "description": "The direction of the sort"}, "per_page": {"type": "number", "description": "Results per page (max 100)"}, "page": {"type": "number", "description": "Page number of the results"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request_review", "description": "Create a review on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_id": {"type": "string", "description": "The SHA of the commit that needs a review"}, "body": {"type": "string", "description": "The body text of the review"}, "event": {"type": "string", "enum": ["APPROVE", "REQUEST_CHANGES", "COMMENT"], "description": "The review action to perform"}, "comments": {"type": "array", "items": {"anyOf": [{"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "position": {"type": "number", "description": "The position in the diff where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "position", "body"], "additionalProperties": false}, {"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "line": {"type": "number", "description": "The line number in the file where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "line", "body"], "additionalProperties": false}]}, "description": "Comments to post as part of the review (specify either position or line, not both)"}}, "required": ["owner", "repo", "pull_number", "body", "event"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "merge_pull_request", "description": "Merge a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_title": {"type": "string", "description": "Title for the automatic commit message"}, "commit_message": {"type": "string", "description": "Extra detail to append to automatic commit message"}, "merge_method": {"type": "string", "enum": ["merge", "squash", "rebase"], "description": "Merge method to use"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_files", "description": "Get the list of files changed in a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_status", "description": "Get the combined status of all status checks for a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_pull_request_branch", "description": "Update a pull request branch with the latest changes from the base branch", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "expected_head_sha": {"type": "string", "description": "The expected SHA of the pull request's HEAD ref"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_comments", "description": "Get the review comments on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_reviews", "description": "Get the reviews on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757563404.6338441, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-github"]}
{"ts": 1757563404.646918, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757563406.4444294, "kind": "resp", "payload": {"result": {"tools": [{"name": "create_or_update_file", "description": "Create or update a single file in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path where to create/update the file"}, "content": {"type": "string", "description": "Content of the file"}, "message": {"type": "string", "description": "Commit message"}, "branch": {"type": "string", "description": "Branch to create/update the file in"}, "sha": {"type": "string", "description": "SHA of the file being replaced (required when updating existing files)"}}, "required": ["owner", "repo", "path", "content", "message", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_repositories", "description": "Search for GitHub repositories", "inputSchema": {"type": "object", "properties": {"query": {"type": "string", "description": "Search query (see GitHub search syntax)"}, "page": {"type": "number", "description": "Page number for pagination (default: 1)"}, "perPage": {"type": "number", "description": "Number of results per page (default: 30, max: 100)"}}, "required": ["query"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_repository", "description": "Create a new GitHub repository in your account", "inputSchema": {"type": "object", "properties": {"name": {"type": "string", "description": "Repository name"}, "description": {"type": "string", "description": "Repository description"}, "private": {"type": "boolean", "description": "Whether the repository should be private"}, "autoInit": {"type": "boolean", "description": "Initialize with README.md"}}, "required": ["name"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_contents", "description": "Get the contents of a file or directory from a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path to the file or directory"}, "branch": {"type": "string", "description": "Branch to get contents from"}}, "required": ["owner", "repo", "path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "push_files", "description": "Push multiple files to a GitHub repository in a single commit", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Branch to push to (e.g., 'main' or 'master')"}, "files": {"type": "array", "items": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false}, "description": "Array of files to push"}, "message": {"type": "string", "description": "Commit message"}}, "required": ["owner", "repo", "branch", "files", "message"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_issue", "description": "Create a new issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}}, "required": ["owner", "repo", "title"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request", "description": "Create a new pull request in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "title": {"type": "string", "description": "Pull request title"}, "body": {"type": "string", "description": "Pull request body/description"}, "head": {"type": "string", "description": "The name of the branch where your changes are implemented"}, "base": {"type": "string", "description": "The name of the branch you want the changes pulled into"}, "draft": {"type": "boolean", "description": "Whether to create the pull request as a draft"}, "maintainer_can_modify": {"type": "boolean", "description": "Whether maintainers can modify the pull request"}}, "required": ["owner", "repo", "title", "head", "base"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "fork_repository", "description": "Fork a GitHub repository to your account or specified organization", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "organization": {"type": "string", "description": "Optional: organization to fork to (defaults to your personal account)"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_branch", "description": "Create a new branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Name for the new branch"}, "from_branch": {"type": "string", "description": "Optional: source branch to create from (defaults to the repository's default branch)"}}, "required": ["owner", "repo", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_commits", "description": "Get list of commits of a branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "sha": {"type": "string"}, "page": {"type": "number"}, "perPage": {"type": "number"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_issues", "description": "List issues in a GitHub repository with filtering options", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "direction": {"type": "string", "enum": ["asc", "desc"]}, "labels": {"type": "array", "items": {"type": "string"}}, "page": {"type": "number"}, "per_page": {"type": "number"}, "since": {"type": "string"}, "sort": {"type": "string", "enum": ["created", "updated", "comments"]}, "state": {"type": "string", "enum": ["open", "closed", "all"]}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_issue", "description": "Update an existing issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}, "state": {"type": "string", "enum": ["open", "closed"]}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "add_issue_comment", "description": "Add a comment to an existing issue", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "body": {"type": "string"}}, "required": ["owner", "repo", "issue_number", "body"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_code", "description": "Search for code across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_issues", "description": "Search for issues and pull requests across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["comments", "reactions", "reactions-+1", "reactions--1", "reactions-smile", "reactions-thinking_face", "reactions-heart", "reactions-tada", "interactions", "created", "updated"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_users", "description": "Search for users on GitHub", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["followers", "repositories", "joined"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_issue", "description": "Get details of a specific issue in a GitHub repository.", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request", "description": "Get details of a specific pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_pull_requests", "description": "List and filter repository pull requests", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "state": {"type": "string", "enum": ["open", "closed", "all"], "description": "State of the pull requests to return"}, "head": {"type": "string", "description": "Filter by head user or head organization and branch name"}, "base": {"type": "string", "description": "Filter by base branch name"}, "sort": {"type": "string", "enum": ["created", "updated", "popularity", "long-running"], "description": "What to sort results by"}, "direction": {"type": "string", "enum": ["asc", "desc"], "description": "The direction of the sort"}, "per_page": {"type": "number", "description": "Results per page (max 100)"}, "page": {"type": "number", "description": "Page number of the results"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request_review", "description": "Create a review on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_id": {"type": "string", "description": "The SHA of the commit that needs a review"}, "body": {"type": "string", "description": "The body text of the review"}, "event": {"type": "string", "enum": ["APPROVE", "REQUEST_CHANGES", "COMMENT"], "description": "The review action to perform"}, "comments": {"type": "array", "items": {"anyOf": [{"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "position": {"type": "number", "description": "The position in the diff where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "position", "body"], "additionalProperties": false}, {"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "line": {"type": "number", "description": "The line number in the file where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "line", "body"], "additionalProperties": false}]}, "description": "Comments to post as part of the review (specify either position or line, not both)"}}, "required": ["owner", "repo", "pull_number", "body", "event"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "merge_pull_request", "description": "Merge a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_title": {"type": "string", "description": "Title for the automatic commit message"}, "commit_message": {"type": "string", "description": "Extra detail to append to automatic commit message"}, "merge_method": {"type": "string", "enum": ["merge", "squash", "rebase"], "description": "Merge method to use"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_files", "description": "Get the list of files changed in a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_status", "description": "Get the combined status of all status checks for a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_pull_request_branch", "description": "Update a pull request branch with the latest changes from the base branch", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "expected_head_sha": {"type": "string", "description": "The expected SHA of the pull request's HEAD ref"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_comments", "description": "Get the review comments on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_reviews", "description": "Get the reviews on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757563406.764614, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-github"]}
{"ts": 1757563616.0150797, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/call", "params": {"name": "search_repositories", "arguments": {"query": "user:JoaquinCampos22155 proyecto1redes_Final"}}}}
{"ts": 1757563616.6555216, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "{\n  \"total_count\": 1,\n  \"incomplete_results\": false,\n  \"items\": [\n    {\n      \"id\": 1050686525,\n      \"node_id\": \"R_kgDOPqA0PQ\",\n      \"name\": \"proyecto1redes_Final\",\n      \"full_name\": \"JoaquinCampos22155/proyecto1redes_Final\",\n      \"private\": false,\n      \"owner\": {\n        \"login\": \"JoaquinCampos22155\",\n        \"id\": 98112929,\n        \"node_id\": \"U_kgDOBdkVoQ\",\n        \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n        \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n        \"html_url\": \"https://github.com/JoaquinCampos22155\",\n        \"type\": \"User\"\n      },\n      \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final\",\n      \"description\": null,\n      \"fork\": false,\n      \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final\",\n      \"created_at\": \"2025-09-04T19:29:57Z\",\n      \"updated_at\": \"2025-09-11T01:17:13Z\",\n      \"pushed_at\": \"2025-09-11T01:17:10Z\",\n      \"git_url\": \"git://github.com/JoaquinCampos22155/proyecto1redes_Final.git\",\n      \"ssh_url\": \"git@github.com:JoaquinCampos22155/proyecto1redes_Final.git\",\n      \"clone_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final.git\",\n      \"default_branch\": \"main\"\n    }\n  ]\n}"}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757563633.5821037, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "list_commits", "arguments": {"owner": "JoaquinCampos22155", "repo": "proyecto1redes_Final", "sha": "main", "per_page": 5}}}}
{"ts": 1757563633.9848135, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "[\n  {\n    \"sha\": \"92cccf55f739cc8128868996c8bd090b715ba93c\",\n    \"node_id\": \"C_kwDOPqA0PdoAKDkyY2NjZjU1ZjczOWNjODEyODg2ODk5NmM4YmQwOTBiNzE1YmE5M2M\",\n    \"commit\": {\n      \"author\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-11T01:17:05Z\"\n      },\n      \"committer\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-11T01:17:05Z\"\n      },\n      \"message\": \"checkpoint setlist cmd (main chat) y gui (gui_app) filesystem cmd (main chat) y gui (gui_app)\",\n      \"tree\": {\n        \"sha\": \"86b9a9e1b20ee90bcb9a4c30806085f166dcb114\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/trees/86b9a9e1b20ee90bcb9a4c30806085f166dcb114\"\n      },\n      \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/commits/92cccf55f739cc8128868996c8bd090b715ba93c\",\n      \"comment_count\": 0,\n      \"verification\": {\n        \"verified\": false,\n        \"reason\": \"unsigned\",\n        \"signature\": null,\n        \"payload\": null,\n        \"verified_at\": null\n      }\n    },\n    \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/92cccf55f739cc8128868996c8bd090b715ba93c\",\n    \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/92cccf55f739cc8128868996c8bd090b715ba93c\",\n    \"comments_url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/92cccf55f739cc8128868996c8bd090b715ba93c/comments\",\n    \"author\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"committer\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"parents\": [\n      {\n        \"sha\": \"1b34d2e0e3469eb09ce62e9bbc18fdea88e973b5\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/1b34d2e0e3469eb09ce62e9bbc18fdea88e973b5\",\n        \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/1b34d2e0e3469eb09ce62e9bbc18fdea88e973b5\"\n      }\n    ]\n  },\n  {\n    \"sha\": \"1b34d2e0e3469eb09ce62e9bbc18fdea88e973b5\",\n    \"node_id\": \"C_kwDOPqA0PdoAKDFiMzRkMmUwZTM0NjllYjA5Y2U2MmU5YmJjMThmZGVhODhlOTczYjU\",\n    \"commit\": {\n      \"author\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-10T21:53:45Z\"\n      },\n      \"committer\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-10T21:53:45Z\"\n      },\n      \"message\": \"estado funcional de ambos setlist y filesystem solo comandos\",\n      \"tree\": {\n        \"sha\": \"2d55f6b7265a7e48b06288b43a6fab0901aaa844\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/trees/2d55f6b7265a7e48b06288b43a6fab0901aaa844\"\n      },\n      \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/commits/1b34d2e0e3469eb09ce62e9bbc18fdea88e973b5\",\n      \"comment_count\": 0,\n      \"verification\": {\n        \"verified\": false,\n        \"reason\": \"unsigned\",\n        \"signature\": null,\n        \"payload\": null,\n        \"verified_at\": null\n      }\n    },\n    \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/1b34d2e0e3469eb09ce62e9bbc18fdea88e973b5\",\n    \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/1b34d2e0e3469eb09ce62e9bbc18fdea88e973b5\",\n    \"comments_url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/1b34d2e0e3469eb09ce62e9bbc18fdea88e973b5/comments\",\n    \"author\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"committer\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"parents\": [\n      {\n        \"sha\": \"0da2a9600f24794e151e2e0f3dc692caa84c1a37\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/0da2a9600f24794e151e2e0f3dc692caa84c1a37\",\n        \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/0da2a9600f24794e151e2e0f3dc692caa84c1a37\"\n      }\n    ]\n  },\n  {\n    \"sha\": \"0da2a9600f24794e151e2e0f3dc692caa84c1a37\",\n    \"node_id\": \"C_kwDOPqA0PdoAKDBkYTJhOTYwMGYyNDc5NGUxNTFlMmUwZjNkYzY5MmNhYTg0YzFhMzc\",\n    \"commit\": {\n      \"author\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-06T07:51:10Z\"\n      },\n      \"committer\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-06T07:51:10Z\"\n      },\n      \"message\": \"host_chatbotFinal\",\n      \"tree\": {\n        \"sha\": \"b4d8c78b7fb9fbe942d28707c0dedf5f96deca9d\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/trees/b4d8c78b7fb9fbe942d28707c0dedf5f96deca9d\"\n      },\n      \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/commits/0da2a9600f24794e151e2e0f3dc692caa84c1a37\",\n      \"comment_count\": 0,\n      \"verification\": {\n        \"verified\": false,\n        \"reason\": \"unsigned\",\n        \"signature\": null,\n        \"payload\": null,\n        \"verified_at\": null\n      }\n    },\n    \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/0da2a9600f24794e151e2e0f3dc692caa84c1a37\",\n    \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/0da2a9600f24794e151e2e0f3dc692caa84c1a37\",\n    \"comments_url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/0da2a9600f24794e151e2e0f3dc692caa84c1a37/comments\",\n    \"author\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"committer\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"parents\": [\n      {\n        \"sha\": \"91fa41ee08e6863896cdba359dff422af3628de0\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/91fa41ee08e6863896cdba359dff422af3628de0\",\n        \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/91fa41ee08e6863896cdba359dff422af3628de0\"\n      }\n    ]\n  },\n  {\n    \"sha\": \"91fa41ee08e6863896cdba359dff422af3628de0\",\n    \"node_id\": \"C_kwDOPqA0PdoAKDkxZmE0MWVlMDhlNjg2Mzg5NmNkYmEzNTlkZmY0MjJhZjM2MjhkZTA\",\n    \"commit\": {\n      \"author\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-05T04:15:12Z\"\n      },\n      \"committer\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-05T04:15:12Z\"\n      },\n      \"message\": \"cambios varios\",\n      \"tree\": {\n        \"sha\": \"04a8f5b4bd3b1864eaa874bc12a8555f809fd03a\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/trees/04a8f5b4bd3b1864eaa874bc12a8555f809fd03a\"\n      },\n      \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/commits/91fa41ee08e6863896cdba359dff422af3628de0\",\n      \"comment_count\": 0,\n      \"verification\": {\n        \"verified\": false,\n        \"reason\": \"unsigned\",\n        \"signature\": null,\n        \"payload\": null,\n        \"verified_at\": null\n      }\n    },\n    \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/91fa41ee08e6863896cdba359dff422af3628de0\",\n    \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/91fa41ee08e6863896cdba359dff422af3628de0\",\n    \"comments_url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/91fa41ee08e6863896cdba359dff422af3628de0/comments\",\n    \"author\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"committer\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"parents\": [\n      {\n        \"sha\": \"baeada0a4394edd1b579ec45890e38e2d1a744bf\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/baeada0a4394edd1b579ec45890e38e2d1a744bf\",\n        \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/baeada0a4394edd1b579ec45890e38e2d1a744bf\"\n      }\n    ]\n  },\n  {\n    \"sha\": \"baeada0a4394edd1b579ec45890e38e2d1a744bf\",\n    \"node_id\": \"C_kwDOPqA0PdoAKGJhZWFkYTBhNDM5NGVkZDFiNTc5ZWM0NTg5MGUzOGUyZDFhNzQ0YmY\",\n    \"commit\": {\n      \"author\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-05T01:14:11Z\"\n      },\n      \"committer\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-05T01:14:11Z\"\n      },\n      \"message\": \"chat\",\n      \"tree\": {\n        \"sha\": \"c3090fd1f7db73b88788b6660ccca7be26215812\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/trees/c3090fd1f7db73b88788b6660ccca7be26215812\"\n      },\n      \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/commits/baeada0a4394edd1b579ec45890e38e2d1a744bf\",\n      \"comment_count\": 0,\n      \"verification\": {\n        \"verified\": false,\n        \"reason\": \"unsigned\",\n        \"signature\": null,\n        \"payload\": null,\n        \"verified_at\": null\n      }\n    },\n    \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/baeada0a4394edd1b579ec45890e38e2d1a744bf\",\n    \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/baeada0a4394edd1b579ec45890e38e2d1a744bf\",\n    \"comments_url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/baeada0a4394edd1b579ec45890e38e2d1a744bf/comments\",\n    \"author\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"committer\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"parents\": []\n  }\n]"}]}, "jsonrpc": "2.0", "id": 2}}
{"ts": 1757564536.1917267, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "create_branch", "arguments": {"owner": "JoaquinCampos22155", "repo": "proyecto1redes_Final", "branch": "mcp/cli-01", "from_branch": "main"}}}}
{"ts": 1757564536.741039, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 3, "error": {"code": -32603, "message": "Permission Denied: Resource not accessible by personal access token"}}}
{"ts": 1757564761.864976, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 4, "method": "tools/call", "params": {"name": "create_branch", "arguments": {"owner": "JoaquinCampos22155", "repo": "proyecto1redes_Final", "branch": "mcp/cli-01", "from_branch": "main"}}}}
{"ts": 1757564762.8517096, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "{\n  \"ref\": \"refs/heads/mcp/cli-01\",\n  \"node_id\": \"REF_kwDOPqA0PbVyZWZzL2hlYWRzL21jcC9jbGktMDE\",\n  \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/refs/heads/mcp/cli-01\",\n  \"object\": {\n    \"sha\": \"92cccf55f739cc8128868996c8bd090b715ba93c\",\n    \"type\": \"commit\",\n    \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/commits/92cccf55f739cc8128868996c8bd090b715ba93c\"\n  }\n}"}]}, "jsonrpc": "2.0", "id": 4}}
{"ts": 1757564899.0817022, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 5, "method": "tools/call", "params": {"name": "create_or_update_file", "arguments": {"owner": "JoaquinCampos22155", "repo": "proyecto1redes_Final", "path": "docs/mcp_prueba.md", "content": "# Prueba \nEste fue creado por el MCP en la rama mcp/cli-01.\n", "message": "chore(mcp): add docs/mcp_prueba.md", "branch": "mcp/cli-01"}}}}
{"ts": 1757564900.0253642, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "{\n  \"content\": {\n    \"name\": \"mcp_prueba.md\",\n    \"path\": \"docs/mcp_prueba.md\",\n    \"sha\": \"d218d589f190a0b149baa4102450e5f39944b6eb\",\n    \"size\": 60,\n    \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/contents/docs/mcp_prueba.md?ref=mcp/cli-01\",\n    \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/blob/mcp/cli-01/docs/mcp_prueba.md\",\n    \"git_url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/blobs/d218d589f190a0b149baa4102450e5f39944b6eb\",\n    \"download_url\": \"https://raw.githubusercontent.com/JoaquinCampos22155/proyecto1redes_Final/mcp/cli-01/docs/mcp_prueba.md\",\n    \"type\": \"file\",\n    \"_links\": {\n      \"self\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/contents/docs/mcp_prueba.md?ref=mcp/cli-01\",\n      \"git\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/blobs/d218d589f190a0b149baa4102450e5f39944b6eb\",\n      \"html\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/blob/mcp/cli-01/docs/mcp_prueba.md\"\n    }\n  },\n  \"commit\": {\n    \"sha\": \"9b794812190a478e0b6f0ae28411bb3503fea2f6\",\n    \"node_id\": \"C_kwDOPqA0PdoAKDliNzk0ODEyMTkwYTQ3OGUwYjZmMGFlMjg0MTFiYjM1MDNmZWEyZjY\",\n    \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/commits/9b794812190a478e0b6f0ae28411bb3503fea2f6\",\n    \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/9b794812190a478e0b6f0ae28411bb3503fea2f6\",\n    \"author\": {\n      \"name\": \"Joaquin Campos\",\n      \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n      \"date\": \"2025-09-11T04:28:19Z\"\n    },\n    \"committer\": {\n      \"name\": \"Joaquin Campos\",\n      \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n      \"date\": \"2025-09-11T04:28:19Z\"\n    },\n    \"message\": \"chore(mcp): add docs/mcp_prueba.md\",\n    \"tree\": {\n      \"sha\": \"d31fd87096f50b93b5971f27015853d261066495\",\n      \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/trees/d31fd87096f50b93b5971f27015853d261066495\"\n    },\n    \"parents\": [\n      {\n        \"sha\": \"92cccf55f739cc8128868996c8bd090b715ba93c\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/commits/92cccf55f739cc8128868996c8bd090b715ba93c\",\n        \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/92cccf55f739cc8128868996c8bd090b715ba93c\"\n      }\n    ]\n  }\n}"}]}, "jsonrpc": "2.0", "id": 5}}
{"ts": 1757565481.5516639, "kind": "spawn", "cmd": ["npx.cmd", "-y", "@modelcontextprotocol/server-github"]}
{"ts": 1757565487.223688, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 1, "method": "tools/list"}}
{"ts": 1757565487.2297797, "kind": "resp", "payload": {"result": {"tools": [{"name": "create_or_update_file", "description": "Create or update a single file in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path where to create/update the file"}, "content": {"type": "string", "description": "Content of the file"}, "message": {"type": "string", "description": "Commit message"}, "branch": {"type": "string", "description": "Branch to create/update the file in"}, "sha": {"type": "string", "description": "SHA of the file being replaced (required when updating existing files)"}}, "required": ["owner", "repo", "path", "content", "message", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_repositories", "description": "Search for GitHub repositories", "inputSchema": {"type": "object", "properties": {"query": {"type": "string", "description": "Search query (see GitHub search syntax)"}, "page": {"type": "number", "description": "Page number for pagination (default: 1)"}, "perPage": {"type": "number", "description": "Number of results per page (default: 30, max: 100)"}}, "required": ["query"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_repository", "description": "Create a new GitHub repository in your account", "inputSchema": {"type": "object", "properties": {"name": {"type": "string", "description": "Repository name"}, "description": {"type": "string", "description": "Repository description"}, "private": {"type": "boolean", "description": "Whether the repository should be private"}, "autoInit": {"type": "boolean", "description": "Initialize with README.md"}}, "required": ["name"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_contents", "description": "Get the contents of a file or directory from a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path to the file or directory"}, "branch": {"type": "string", "description": "Branch to get contents from"}}, "required": ["owner", "repo", "path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "push_files", "description": "Push multiple files to a GitHub repository in a single commit", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Branch to push to (e.g., 'main' or 'master')"}, "files": {"type": "array", "items": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false}, "description": "Array of files to push"}, "message": {"type": "string", "description": "Commit message"}}, "required": ["owner", "repo", "branch", "files", "message"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_issue", "description": "Create a new issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}}, "required": ["owner", "repo", "title"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request", "description": "Create a new pull request in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "title": {"type": "string", "description": "Pull request title"}, "body": {"type": "string", "description": "Pull request body/description"}, "head": {"type": "string", "description": "The name of the branch where your changes are implemented"}, "base": {"type": "string", "description": "The name of the branch you want the changes pulled into"}, "draft": {"type": "boolean", "description": "Whether to create the pull request as a draft"}, "maintainer_can_modify": {"type": "boolean", "description": "Whether maintainers can modify the pull request"}}, "required": ["owner", "repo", "title", "head", "base"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "fork_repository", "description": "Fork a GitHub repository to your account or specified organization", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "organization": {"type": "string", "description": "Optional: organization to fork to (defaults to your personal account)"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_branch", "description": "Create a new branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Name for the new branch"}, "from_branch": {"type": "string", "description": "Optional: source branch to create from (defaults to the repository's default branch)"}}, "required": ["owner", "repo", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_commits", "description": "Get list of commits of a branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "sha": {"type": "string"}, "page": {"type": "number"}, "perPage": {"type": "number"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_issues", "description": "List issues in a GitHub repository with filtering options", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "direction": {"type": "string", "enum": ["asc", "desc"]}, "labels": {"type": "array", "items": {"type": "string"}}, "page": {"type": "number"}, "per_page": {"type": "number"}, "since": {"type": "string"}, "sort": {"type": "string", "enum": ["created", "updated", "comments"]}, "state": {"type": "string", "enum": ["open", "closed", "all"]}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_issue", "description": "Update an existing issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}, "state": {"type": "string", "enum": ["open", "closed"]}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "add_issue_comment", "description": "Add a comment to an existing issue", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "body": {"type": "string"}}, "required": ["owner", "repo", "issue_number", "body"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_code", "description": "Search for code across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_issues", "description": "Search for issues and pull requests across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["comments", "reactions", "reactions-+1", "reactions--1", "reactions-smile", "reactions-thinking_face", "reactions-heart", "reactions-tada", "interactions", "created", "updated"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_users", "description": "Search for users on GitHub", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["followers", "repositories", "joined"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_issue", "description": "Get details of a specific issue in a GitHub repository.", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request", "description": "Get details of a specific pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_pull_requests", "description": "List and filter repository pull requests", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "state": {"type": "string", "enum": ["open", "closed", "all"], "description": "State of the pull requests to return"}, "head": {"type": "string", "description": "Filter by head user or head organization and branch name"}, "base": {"type": "string", "description": "Filter by base branch name"}, "sort": {"type": "string", "enum": ["created", "updated", "popularity", "long-running"], "description": "What to sort results by"}, "direction": {"type": "string", "enum": ["asc", "desc"], "description": "The direction of the sort"}, "per_page": {"type": "number", "description": "Results per page (max 100)"}, "page": {"type": "number", "description": "Page number of the results"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request_review", "description": "Create a review on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_id": {"type": "string", "description": "The SHA of the commit that needs a review"}, "body": {"type": "string", "description": "The body text of the review"}, "event": {"type": "string", "enum": ["APPROVE", "REQUEST_CHANGES", "COMMENT"], "description": "The review action to perform"}, "comments": {"type": "array", "items": {"anyOf": [{"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "position": {"type": "number", "description": "The position in the diff where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "position", "body"], "additionalProperties": false}, {"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "line": {"type": "number", "description": "The line number in the file where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "line", "body"], "additionalProperties": false}]}, "description": "Comments to post as part of the review (specify either position or line, not both)"}}, "required": ["owner", "repo", "pull_number", "body", "event"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "merge_pull_request", "description": "Merge a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_title": {"type": "string", "description": "Title for the automatic commit message"}, "commit_message": {"type": "string", "description": "Extra detail to append to automatic commit message"}, "merge_method": {"type": "string", "enum": ["merge", "squash", "rebase"], "description": "Merge method to use"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_files", "description": "Get the list of files changed in a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_status", "description": "Get the combined status of all status checks for a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_pull_request_branch", "description": "Update a pull request branch with the latest changes from the base branch", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "expected_head_sha": {"type": "string", "description": "The expected SHA of the pull request's HEAD ref"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_comments", "description": "Get the review comments on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_reviews", "description": "Get the reviews on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}]}, "jsonrpc": "2.0", "id": 1}}
{"ts": 1757566036.4966438, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 2, "method": "tools/list"}}
{"ts": 1757566036.5016434, "kind": "resp", "payload": {"result": {"tools": [{"name": "create_or_update_file", "description": "Create or update a single file in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path where to create/update the file"}, "content": {"type": "string", "description": "Content of the file"}, "message": {"type": "string", "description": "Commit message"}, "branch": {"type": "string", "description": "Branch to create/update the file in"}, "sha": {"type": "string", "description": "SHA of the file being replaced (required when updating existing files)"}}, "required": ["owner", "repo", "path", "content", "message", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_repositories", "description": "Search for GitHub repositories", "inputSchema": {"type": "object", "properties": {"query": {"type": "string", "description": "Search query (see GitHub search syntax)"}, "page": {"type": "number", "description": "Page number for pagination (default: 1)"}, "perPage": {"type": "number", "description": "Number of results per page (default: 30, max: 100)"}}, "required": ["query"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_repository", "description": "Create a new GitHub repository in your account", "inputSchema": {"type": "object", "properties": {"name": {"type": "string", "description": "Repository name"}, "description": {"type": "string", "description": "Repository description"}, "private": {"type": "boolean", "description": "Whether the repository should be private"}, "autoInit": {"type": "boolean", "description": "Initialize with README.md"}}, "required": ["name"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_contents", "description": "Get the contents of a file or directory from a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path to the file or directory"}, "branch": {"type": "string", "description": "Branch to get contents from"}}, "required": ["owner", "repo", "path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "push_files", "description": "Push multiple files to a GitHub repository in a single commit", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Branch to push to (e.g., 'main' or 'master')"}, "files": {"type": "array", "items": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false}, "description": "Array of files to push"}, "message": {"type": "string", "description": "Commit message"}}, "required": ["owner", "repo", "branch", "files", "message"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_issue", "description": "Create a new issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}}, "required": ["owner", "repo", "title"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request", "description": "Create a new pull request in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "title": {"type": "string", "description": "Pull request title"}, "body": {"type": "string", "description": "Pull request body/description"}, "head": {"type": "string", "description": "The name of the branch where your changes are implemented"}, "base": {"type": "string", "description": "The name of the branch you want the changes pulled into"}, "draft": {"type": "boolean", "description": "Whether to create the pull request as a draft"}, "maintainer_can_modify": {"type": "boolean", "description": "Whether maintainers can modify the pull request"}}, "required": ["owner", "repo", "title", "head", "base"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "fork_repository", "description": "Fork a GitHub repository to your account or specified organization", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "organization": {"type": "string", "description": "Optional: organization to fork to (defaults to your personal account)"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_branch", "description": "Create a new branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Name for the new branch"}, "from_branch": {"type": "string", "description": "Optional: source branch to create from (defaults to the repository's default branch)"}}, "required": ["owner", "repo", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_commits", "description": "Get list of commits of a branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "sha": {"type": "string"}, "page": {"type": "number"}, "perPage": {"type": "number"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_issues", "description": "List issues in a GitHub repository with filtering options", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "direction": {"type": "string", "enum": ["asc", "desc"]}, "labels": {"type": "array", "items": {"type": "string"}}, "page": {"type": "number"}, "per_page": {"type": "number"}, "since": {"type": "string"}, "sort": {"type": "string", "enum": ["created", "updated", "comments"]}, "state": {"type": "string", "enum": ["open", "closed", "all"]}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_issue", "description": "Update an existing issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}, "state": {"type": "string", "enum": ["open", "closed"]}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "add_issue_comment", "description": "Add a comment to an existing issue", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "body": {"type": "string"}}, "required": ["owner", "repo", "issue_number", "body"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_code", "description": "Search for code across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_issues", "description": "Search for issues and pull requests across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["comments", "reactions", "reactions-+1", "reactions--1", "reactions-smile", "reactions-thinking_face", "reactions-heart", "reactions-tada", "interactions", "created", "updated"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_users", "description": "Search for users on GitHub", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["followers", "repositories", "joined"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_issue", "description": "Get details of a specific issue in a GitHub repository.", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request", "description": "Get details of a specific pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_pull_requests", "description": "List and filter repository pull requests", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "state": {"type": "string", "enum": ["open", "closed", "all"], "description": "State of the pull requests to return"}, "head": {"type": "string", "description": "Filter by head user or head organization and branch name"}, "base": {"type": "string", "description": "Filter by base branch name"}, "sort": {"type": "string", "enum": ["created", "updated", "popularity", "long-running"], "description": "What to sort results by"}, "direction": {"type": "string", "enum": ["asc", "desc"], "description": "The direction of the sort"}, "per_page": {"type": "number", "description": "Results per page (max 100)"}, "page": {"type": "number", "description": "Page number of the results"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request_review", "description": "Create a review on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_id": {"type": "string", "description": "The SHA of the commit that needs a review"}, "body": {"type": "string", "description": "The body text of the review"}, "event": {"type": "string", "enum": ["APPROVE", "REQUEST_CHANGES", "COMMENT"], "description": "The review action to perform"}, "comments": {"type": "array", "items": {"anyOf": [{"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "position": {"type": "number", "description": "The position in the diff where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "position", "body"], "additionalProperties": false}, {"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "line": {"type": "number", "description": "The line number in the file where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "line", "body"], "additionalProperties": false}]}, "description": "Comments to post as part of the review (specify either position or line, not both)"}}, "required": ["owner", "repo", "pull_number", "body", "event"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "merge_pull_request", "description": "Merge a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_title": {"type": "string", "description": "Title for the automatic commit message"}, "commit_message": {"type": "string", "description": "Extra detail to append to automatic commit message"}, "merge_method": {"type": "string", "enum": ["merge", "squash", "rebase"], "description": "Merge method to use"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_files", "description": "Get the list of files changed in a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_status", "description": "Get the combined status of all status checks for a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_pull_request_branch", "description": "Update a pull request branch with the latest changes from the base branch", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "expected_head_sha": {"type": "string", "description": "The expected SHA of the pull request's HEAD ref"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_comments", "description": "Get the review comments on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_reviews", "description": "Get the reviews on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}]}, "jsonrpc": "2.0", "id": 2}}
{"ts": 1757566040.2730916, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "create_branch", "arguments": {"owner": "JoaquinCampos22155", "repo": "proyecto1redes_Final", "branch": "mcp/gui-05", "from_branch": "main"}}}}
{"ts": 1757566041.0957308, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "{\n  \"ref\": \"refs/heads/mcp/gui-05\",\n  \"node_id\": \"REF_kwDOPqA0PbVyZWZzL2hlYWRzL21jcC9ndWktMDU\",\n  \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/refs/heads/mcp/gui-05\",\n  \"object\": {\n    \"sha\": \"92cccf55f739cc8128868996c8bd090b715ba93c\",\n    \"type\": \"commit\",\n    \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/commits/92cccf55f739cc8128868996c8bd090b715ba93c\"\n  }\n}"}]}, "jsonrpc": "2.0", "id": 3}}
{"ts": 1757566317.078186, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 4, "method": "tools/list"}}
{"ts": 1757566317.0801852, "kind": "resp", "payload": {"result": {"tools": [{"name": "create_or_update_file", "description": "Create or update a single file in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path where to create/update the file"}, "content": {"type": "string", "description": "Content of the file"}, "message": {"type": "string", "description": "Commit message"}, "branch": {"type": "string", "description": "Branch to create/update the file in"}, "sha": {"type": "string", "description": "SHA of the file being replaced (required when updating existing files)"}}, "required": ["owner", "repo", "path", "content", "message", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_repositories", "description": "Search for GitHub repositories", "inputSchema": {"type": "object", "properties": {"query": {"type": "string", "description": "Search query (see GitHub search syntax)"}, "page": {"type": "number", "description": "Page number for pagination (default: 1)"}, "perPage": {"type": "number", "description": "Number of results per page (default: 30, max: 100)"}}, "required": ["query"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_repository", "description": "Create a new GitHub repository in your account", "inputSchema": {"type": "object", "properties": {"name": {"type": "string", "description": "Repository name"}, "description": {"type": "string", "description": "Repository description"}, "private": {"type": "boolean", "description": "Whether the repository should be private"}, "autoInit": {"type": "boolean", "description": "Initialize with README.md"}}, "required": ["name"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_contents", "description": "Get the contents of a file or directory from a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path to the file or directory"}, "branch": {"type": "string", "description": "Branch to get contents from"}}, "required": ["owner", "repo", "path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "push_files", "description": "Push multiple files to a GitHub repository in a single commit", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Branch to push to (e.g., 'main' or 'master')"}, "files": {"type": "array", "items": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false}, "description": "Array of files to push"}, "message": {"type": "string", "description": "Commit message"}}, "required": ["owner", "repo", "branch", "files", "message"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_issue", "description": "Create a new issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}}, "required": ["owner", "repo", "title"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request", "description": "Create a new pull request in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "title": {"type": "string", "description": "Pull request title"}, "body": {"type": "string", "description": "Pull request body/description"}, "head": {"type": "string", "description": "The name of the branch where your changes are implemented"}, "base": {"type": "string", "description": "The name of the branch you want the changes pulled into"}, "draft": {"type": "boolean", "description": "Whether to create the pull request as a draft"}, "maintainer_can_modify": {"type": "boolean", "description": "Whether maintainers can modify the pull request"}}, "required": ["owner", "repo", "title", "head", "base"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "fork_repository", "description": "Fork a GitHub repository to your account or specified organization", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "organization": {"type": "string", "description": "Optional: organization to fork to (defaults to your personal account)"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_branch", "description": "Create a new branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Name for the new branch"}, "from_branch": {"type": "string", "description": "Optional: source branch to create from (defaults to the repository's default branch)"}}, "required": ["owner", "repo", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_commits", "description": "Get list of commits of a branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "sha": {"type": "string"}, "page": {"type": "number"}, "perPage": {"type": "number"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_issues", "description": "List issues in a GitHub repository with filtering options", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "direction": {"type": "string", "enum": ["asc", "desc"]}, "labels": {"type": "array", "items": {"type": "string"}}, "page": {"type": "number"}, "per_page": {"type": "number"}, "since": {"type": "string"}, "sort": {"type": "string", "enum": ["created", "updated", "comments"]}, "state": {"type": "string", "enum": ["open", "closed", "all"]}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_issue", "description": "Update an existing issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}, "state": {"type": "string", "enum": ["open", "closed"]}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "add_issue_comment", "description": "Add a comment to an existing issue", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "body": {"type": "string"}}, "required": ["owner", "repo", "issue_number", "body"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_code", "description": "Search for code across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_issues", "description": "Search for issues and pull requests across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["comments", "reactions", "reactions-+1", "reactions--1", "reactions-smile", "reactions-thinking_face", "reactions-heart", "reactions-tada", "interactions", "created", "updated"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_users", "description": "Search for users on GitHub", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["followers", "repositories", "joined"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_issue", "description": "Get details of a specific issue in a GitHub repository.", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request", "description": "Get details of a specific pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_pull_requests", "description": "List and filter repository pull requests", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "state": {"type": "string", "enum": ["open", "closed", "all"], "description": "State of the pull requests to return"}, "head": {"type": "string", "description": "Filter by head user or head organization and branch name"}, "base": {"type": "string", "description": "Filter by base branch name"}, "sort": {"type": "string", "enum": ["created", "updated", "popularity", "long-running"], "description": "What to sort results by"}, "direction": {"type": "string", "enum": ["asc", "desc"], "description": "The direction of the sort"}, "per_page": {"type": "number", "description": "Results per page (max 100)"}, "page": {"type": "number", "description": "Page number of the results"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request_review", "description": "Create a review on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_id": {"type": "string", "description": "The SHA of the commit that needs a review"}, "body": {"type": "string", "description": "The body text of the review"}, "event": {"type": "string", "enum": ["APPROVE", "REQUEST_CHANGES", "COMMENT"], "description": "The review action to perform"}, "comments": {"type": "array", "items": {"anyOf": [{"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "position": {"type": "number", "description": "The position in the diff where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "position", "body"], "additionalProperties": false}, {"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "line": {"type": "number", "description": "The line number in the file where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "line", "body"], "additionalProperties": false}]}, "description": "Comments to post as part of the review (specify either position or line, not both)"}}, "required": ["owner", "repo", "pull_number", "body", "event"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "merge_pull_request", "description": "Merge a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_title": {"type": "string", "description": "Title for the automatic commit message"}, "commit_message": {"type": "string", "description": "Extra detail to append to automatic commit message"}, "merge_method": {"type": "string", "enum": ["merge", "squash", "rebase"], "description": "Merge method to use"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_files", "description": "Get the list of files changed in a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_status", "description": "Get the combined status of all status checks for a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_pull_request_branch", "description": "Update a pull request branch with the latest changes from the base branch", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "expected_head_sha": {"type": "string", "description": "The expected SHA of the pull request's HEAD ref"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_comments", "description": "Get the review comments on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_reviews", "description": "Get the reviews on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}]}, "jsonrpc": "2.0", "id": 4}}
{"ts": 1757566321.55501, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 5, "method": "tools/call", "params": {"name": "create_or_update_file", "arguments": {"owner": "JoaquinCampos22155", "repo": "proyecto1redes_Final", "path": "docs/mcp_gui.md", "content": "# Prueba GUI MCP\nArchivo creado desde el GUI usando el servidor MCP de GitHub.", "message": "chore(mcp): add docs/mcp_gui.md", "branch": "mcp/gui-05"}}}}
{"ts": 1757566322.4894247, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "{\n  \"content\": {\n    \"name\": \"mcp_gui.md\",\n    \"path\": \"docs/mcp_gui.md\",\n    \"sha\": \"1189747c37976365775d129e2db0037867576cd0\",\n    \"size\": 78,\n    \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/contents/docs/mcp_gui.md?ref=mcp/gui-05\",\n    \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/blob/mcp/gui-05/docs/mcp_gui.md\",\n    \"git_url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/blobs/1189747c37976365775d129e2db0037867576cd0\",\n    \"download_url\": \"https://raw.githubusercontent.com/JoaquinCampos22155/proyecto1redes_Final/mcp/gui-05/docs/mcp_gui.md\",\n    \"type\": \"file\",\n    \"_links\": {\n      \"self\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/contents/docs/mcp_gui.md?ref=mcp/gui-05\",\n      \"git\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/blobs/1189747c37976365775d129e2db0037867576cd0\",\n      \"html\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/blob/mcp/gui-05/docs/mcp_gui.md\"\n    }\n  },\n  \"commit\": {\n    \"sha\": \"af63bf041bb3495913ec0b929b39760a526d82ac\",\n    \"node_id\": \"C_kwDOPqA0PdoAKGFmNjNiZjA0MWJiMzQ5NTkxM2VjMGI5MjliMzk3NjBhNTI2ZDgyYWM\",\n    \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/commits/af63bf041bb3495913ec0b929b39760a526d82ac\",\n    \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/af63bf041bb3495913ec0b929b39760a526d82ac\",\n    \"author\": {\n      \"name\": \"Joaquin Campos\",\n      \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n      \"date\": \"2025-09-11T04:52:01Z\"\n    },\n    \"committer\": {\n      \"name\": \"Joaquin Campos\",\n      \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n      \"date\": \"2025-09-11T04:52:01Z\"\n    },\n    \"message\": \"chore(mcp): add docs/mcp_gui.md\",\n    \"tree\": {\n      \"sha\": \"590dc348d084dca40d9cdf1996bf7a47720abfac\",\n      \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/trees/590dc348d084dca40d9cdf1996bf7a47720abfac\"\n    },\n    \"parents\": [\n      {\n        \"sha\": \"92cccf55f739cc8128868996c8bd090b715ba93c\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/commits/92cccf55f739cc8128868996c8bd090b715ba93c\",\n        \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/92cccf55f739cc8128868996c8bd090b715ba93c\"\n      }\n    ]\n  }\n}"}]}, "jsonrpc": "2.0", "id": 5}}
{"ts": 1757566411.6033652, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 6, "method": "tools/list"}}
{"ts": 1757566411.6063697, "kind": "resp", "payload": {"result": {"tools": [{"name": "create_or_update_file", "description": "Create or update a single file in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path where to create/update the file"}, "content": {"type": "string", "description": "Content of the file"}, "message": {"type": "string", "description": "Commit message"}, "branch": {"type": "string", "description": "Branch to create/update the file in"}, "sha": {"type": "string", "description": "SHA of the file being replaced (required when updating existing files)"}}, "required": ["owner", "repo", "path", "content", "message", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_repositories", "description": "Search for GitHub repositories", "inputSchema": {"type": "object", "properties": {"query": {"type": "string", "description": "Search query (see GitHub search syntax)"}, "page": {"type": "number", "description": "Page number for pagination (default: 1)"}, "perPage": {"type": "number", "description": "Number of results per page (default: 30, max: 100)"}}, "required": ["query"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_repository", "description": "Create a new GitHub repository in your account", "inputSchema": {"type": "object", "properties": {"name": {"type": "string", "description": "Repository name"}, "description": {"type": "string", "description": "Repository description"}, "private": {"type": "boolean", "description": "Whether the repository should be private"}, "autoInit": {"type": "boolean", "description": "Initialize with README.md"}}, "required": ["name"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_contents", "description": "Get the contents of a file or directory from a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path to the file or directory"}, "branch": {"type": "string", "description": "Branch to get contents from"}}, "required": ["owner", "repo", "path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "push_files", "description": "Push multiple files to a GitHub repository in a single commit", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Branch to push to (e.g., 'main' or 'master')"}, "files": {"type": "array", "items": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false}, "description": "Array of files to push"}, "message": {"type": "string", "description": "Commit message"}}, "required": ["owner", "repo", "branch", "files", "message"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_issue", "description": "Create a new issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}}, "required": ["owner", "repo", "title"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request", "description": "Create a new pull request in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "title": {"type": "string", "description": "Pull request title"}, "body": {"type": "string", "description": "Pull request body/description"}, "head": {"type": "string", "description": "The name of the branch where your changes are implemented"}, "base": {"type": "string", "description": "The name of the branch you want the changes pulled into"}, "draft": {"type": "boolean", "description": "Whether to create the pull request as a draft"}, "maintainer_can_modify": {"type": "boolean", "description": "Whether maintainers can modify the pull request"}}, "required": ["owner", "repo", "title", "head", "base"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "fork_repository", "description": "Fork a GitHub repository to your account or specified organization", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "organization": {"type": "string", "description": "Optional: organization to fork to (defaults to your personal account)"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_branch", "description": "Create a new branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Name for the new branch"}, "from_branch": {"type": "string", "description": "Optional: source branch to create from (defaults to the repository's default branch)"}}, "required": ["owner", "repo", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_commits", "description": "Get list of commits of a branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "sha": {"type": "string"}, "page": {"type": "number"}, "perPage": {"type": "number"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_issues", "description": "List issues in a GitHub repository with filtering options", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "direction": {"type": "string", "enum": ["asc", "desc"]}, "labels": {"type": "array", "items": {"type": "string"}}, "page": {"type": "number"}, "per_page": {"type": "number"}, "since": {"type": "string"}, "sort": {"type": "string", "enum": ["created", "updated", "comments"]}, "state": {"type": "string", "enum": ["open", "closed", "all"]}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_issue", "description": "Update an existing issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}, "state": {"type": "string", "enum": ["open", "closed"]}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "add_issue_comment", "description": "Add a comment to an existing issue", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "body": {"type": "string"}}, "required": ["owner", "repo", "issue_number", "body"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_code", "description": "Search for code across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_issues", "description": "Search for issues and pull requests across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["comments", "reactions", "reactions-+1", "reactions--1", "reactions-smile", "reactions-thinking_face", "reactions-heart", "reactions-tada", "interactions", "created", "updated"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_users", "description": "Search for users on GitHub", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["followers", "repositories", "joined"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_issue", "description": "Get details of a specific issue in a GitHub repository.", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request", "description": "Get details of a specific pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_pull_requests", "description": "List and filter repository pull requests", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "state": {"type": "string", "enum": ["open", "closed", "all"], "description": "State of the pull requests to return"}, "head": {"type": "string", "description": "Filter by head user or head organization and branch name"}, "base": {"type": "string", "description": "Filter by base branch name"}, "sort": {"type": "string", "enum": ["created", "updated", "popularity", "long-running"], "description": "What to sort results by"}, "direction": {"type": "string", "enum": ["asc", "desc"], "description": "The direction of the sort"}, "per_page": {"type": "number", "description": "Results per page (max 100)"}, "page": {"type": "number", "description": "Page number of the results"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request_review", "description": "Create a review on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_id": {"type": "string", "description": "The SHA of the commit that needs a review"}, "body": {"type": "string", "description": "The body text of the review"}, "event": {"type": "string", "enum": ["APPROVE", "REQUEST_CHANGES", "COMMENT"], "description": "The review action to perform"}, "comments": {"type": "array", "items": {"anyOf": [{"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "position": {"type": "number", "description": "The position in the diff where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "position", "body"], "additionalProperties": false}, {"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "line": {"type": "number", "description": "The line number in the file where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "line", "body"], "additionalProperties": false}]}, "description": "Comments to post as part of the review (specify either position or line, not both)"}}, "required": ["owner", "repo", "pull_number", "body", "event"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "merge_pull_request", "description": "Merge a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_title": {"type": "string", "description": "Title for the automatic commit message"}, "commit_message": {"type": "string", "description": "Extra detail to append to automatic commit message"}, "merge_method": {"type": "string", "enum": ["merge", "squash", "rebase"], "description": "Merge method to use"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_files", "description": "Get the list of files changed in a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_status", "description": "Get the combined status of all status checks for a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_pull_request_branch", "description": "Update a pull request branch with the latest changes from the base branch", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "expected_head_sha": {"type": "string", "description": "The expected SHA of the pull request's HEAD ref"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_comments", "description": "Get the review comments on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_reviews", "description": "Get the reviews on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}]}, "jsonrpc": "2.0", "id": 6}}
{"ts": 1757566414.7640939, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 7, "method": "tools/call", "params": {"name": "search_repositories", "arguments": {"query": "JoaquinCampos22155/proyecto1redes_Final"}}}}
{"ts": 1757566415.1703167, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "{\n  \"total_count\": 1,\n  \"incomplete_results\": false,\n  \"items\": [\n    {\n      \"id\": 1050686525,\n      \"node_id\": \"R_kgDOPqA0PQ\",\n      \"name\": \"proyecto1redes_Final\",\n      \"full_name\": \"JoaquinCampos22155/proyecto1redes_Final\",\n      \"private\": false,\n      \"owner\": {\n        \"login\": \"JoaquinCampos22155\",\n        \"id\": 98112929,\n        \"node_id\": \"U_kgDOBdkVoQ\",\n        \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n        \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n        \"html_url\": \"https://github.com/JoaquinCampos22155\",\n        \"type\": \"User\"\n      },\n      \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final\",\n      \"description\": null,\n      \"fork\": false,\n      \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final\",\n      \"created_at\": \"2025-09-04T19:29:57Z\",\n      \"updated_at\": \"2025-09-11T01:17:13Z\",\n      \"pushed_at\": \"2025-09-11T04:52:02Z\",\n      \"git_url\": \"git://github.com/JoaquinCampos22155/proyecto1redes_Final.git\",\n      \"ssh_url\": \"git@github.com:JoaquinCampos22155/proyecto1redes_Final.git\",\n      \"clone_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final.git\",\n      \"default_branch\": \"main\"\n    }\n  ]\n}"}]}, "jsonrpc": "2.0", "id": 7}}
{"ts": 1757566433.0934799, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 8, "method": "tools/list"}}
{"ts": 1757566433.0954955, "kind": "resp", "payload": {"result": {"tools": [{"name": "create_or_update_file", "description": "Create or update a single file in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path where to create/update the file"}, "content": {"type": "string", "description": "Content of the file"}, "message": {"type": "string", "description": "Commit message"}, "branch": {"type": "string", "description": "Branch to create/update the file in"}, "sha": {"type": "string", "description": "SHA of the file being replaced (required when updating existing files)"}}, "required": ["owner", "repo", "path", "content", "message", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_repositories", "description": "Search for GitHub repositories", "inputSchema": {"type": "object", "properties": {"query": {"type": "string", "description": "Search query (see GitHub search syntax)"}, "page": {"type": "number", "description": "Page number for pagination (default: 1)"}, "perPage": {"type": "number", "description": "Number of results per page (default: 30, max: 100)"}}, "required": ["query"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_repository", "description": "Create a new GitHub repository in your account", "inputSchema": {"type": "object", "properties": {"name": {"type": "string", "description": "Repository name"}, "description": {"type": "string", "description": "Repository description"}, "private": {"type": "boolean", "description": "Whether the repository should be private"}, "autoInit": {"type": "boolean", "description": "Initialize with README.md"}}, "required": ["name"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_contents", "description": "Get the contents of a file or directory from a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path to the file or directory"}, "branch": {"type": "string", "description": "Branch to get contents from"}}, "required": ["owner", "repo", "path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "push_files", "description": "Push multiple files to a GitHub repository in a single commit", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Branch to push to (e.g., 'main' or 'master')"}, "files": {"type": "array", "items": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false}, "description": "Array of files to push"}, "message": {"type": "string", "description": "Commit message"}}, "required": ["owner", "repo", "branch", "files", "message"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_issue", "description": "Create a new issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}}, "required": ["owner", "repo", "title"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request", "description": "Create a new pull request in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "title": {"type": "string", "description": "Pull request title"}, "body": {"type": "string", "description": "Pull request body/description"}, "head": {"type": "string", "description": "The name of the branch where your changes are implemented"}, "base": {"type": "string", "description": "The name of the branch you want the changes pulled into"}, "draft": {"type": "boolean", "description": "Whether to create the pull request as a draft"}, "maintainer_can_modify": {"type": "boolean", "description": "Whether maintainers can modify the pull request"}}, "required": ["owner", "repo", "title", "head", "base"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "fork_repository", "description": "Fork a GitHub repository to your account or specified organization", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "organization": {"type": "string", "description": "Optional: organization to fork to (defaults to your personal account)"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_branch", "description": "Create a new branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Name for the new branch"}, "from_branch": {"type": "string", "description": "Optional: source branch to create from (defaults to the repository's default branch)"}}, "required": ["owner", "repo", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_commits", "description": "Get list of commits of a branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "sha": {"type": "string"}, "page": {"type": "number"}, "perPage": {"type": "number"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_issues", "description": "List issues in a GitHub repository with filtering options", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "direction": {"type": "string", "enum": ["asc", "desc"]}, "labels": {"type": "array", "items": {"type": "string"}}, "page": {"type": "number"}, "per_page": {"type": "number"}, "since": {"type": "string"}, "sort": {"type": "string", "enum": ["created", "updated", "comments"]}, "state": {"type": "string", "enum": ["open", "closed", "all"]}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_issue", "description": "Update an existing issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}, "state": {"type": "string", "enum": ["open", "closed"]}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "add_issue_comment", "description": "Add a comment to an existing issue", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "body": {"type": "string"}}, "required": ["owner", "repo", "issue_number", "body"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_code", "description": "Search for code across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_issues", "description": "Search for issues and pull requests across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["comments", "reactions", "reactions-+1", "reactions--1", "reactions-smile", "reactions-thinking_face", "reactions-heart", "reactions-tada", "interactions", "created", "updated"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_users", "description": "Search for users on GitHub", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["followers", "repositories", "joined"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_issue", "description": "Get details of a specific issue in a GitHub repository.", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request", "description": "Get details of a specific pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_pull_requests", "description": "List and filter repository pull requests", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "state": {"type": "string", "enum": ["open", "closed", "all"], "description": "State of the pull requests to return"}, "head": {"type": "string", "description": "Filter by head user or head organization and branch name"}, "base": {"type": "string", "description": "Filter by base branch name"}, "sort": {"type": "string", "enum": ["created", "updated", "popularity", "long-running"], "description": "What to sort results by"}, "direction": {"type": "string", "enum": ["asc", "desc"], "description": "The direction of the sort"}, "per_page": {"type": "number", "description": "Results per page (max 100)"}, "page": {"type": "number", "description": "Page number of the results"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request_review", "description": "Create a review on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_id": {"type": "string", "description": "The SHA of the commit that needs a review"}, "body": {"type": "string", "description": "The body text of the review"}, "event": {"type": "string", "enum": ["APPROVE", "REQUEST_CHANGES", "COMMENT"], "description": "The review action to perform"}, "comments": {"type": "array", "items": {"anyOf": [{"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "position": {"type": "number", "description": "The position in the diff where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "position", "body"], "additionalProperties": false}, {"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "line": {"type": "number", "description": "The line number in the file where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "line", "body"], "additionalProperties": false}]}, "description": "Comments to post as part of the review (specify either position or line, not both)"}}, "required": ["owner", "repo", "pull_number", "body", "event"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "merge_pull_request", "description": "Merge a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_title": {"type": "string", "description": "Title for the automatic commit message"}, "commit_message": {"type": "string", "description": "Extra detail to append to automatic commit message"}, "merge_method": {"type": "string", "enum": ["merge", "squash", "rebase"], "description": "Merge method to use"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_files", "description": "Get the list of files changed in a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_status", "description": "Get the combined status of all status checks for a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_pull_request_branch", "description": "Update a pull request branch with the latest changes from the base branch", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "expected_head_sha": {"type": "string", "description": "The expected SHA of the pull request's HEAD ref"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_comments", "description": "Get the review comments on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_reviews", "description": "Get the reviews on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}]}, "jsonrpc": "2.0", "id": 8}}
{"ts": 1757566436.6454575, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 9, "method": "tools/call", "params": {"name": "list_commits", "arguments": {"owner": "JoaquinCampos22155", "repo": "proyecto1redes_Final", "page": 1, "perPage": 10, "sha": "main"}}}}
{"ts": 1757566437.110496, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "[\n  {\n    \"sha\": \"92cccf55f739cc8128868996c8bd090b715ba93c\",\n    \"node_id\": \"C_kwDOPqA0PdoAKDkyY2NjZjU1ZjczOWNjODEyODg2ODk5NmM4YmQwOTBiNzE1YmE5M2M\",\n    \"commit\": {\n      \"author\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-11T01:17:05Z\"\n      },\n      \"committer\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-11T01:17:05Z\"\n      },\n      \"message\": \"checkpoint setlist cmd (main chat) y gui (gui_app) filesystem cmd (main chat) y gui (gui_app)\",\n      \"tree\": {\n        \"sha\": \"86b9a9e1b20ee90bcb9a4c30806085f166dcb114\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/trees/86b9a9e1b20ee90bcb9a4c30806085f166dcb114\"\n      },\n      \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/commits/92cccf55f739cc8128868996c8bd090b715ba93c\",\n      \"comment_count\": 0,\n      \"verification\": {\n        \"verified\": false,\n        \"reason\": \"unsigned\",\n        \"signature\": null,\n        \"payload\": null,\n        \"verified_at\": null\n      }\n    },\n    \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/92cccf55f739cc8128868996c8bd090b715ba93c\",\n    \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/92cccf55f739cc8128868996c8bd090b715ba93c\",\n    \"comments_url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/92cccf55f739cc8128868996c8bd090b715ba93c/comments\",\n    \"author\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"committer\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"parents\": [\n      {\n        \"sha\": \"1b34d2e0e3469eb09ce62e9bbc18fdea88e973b5\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/1b34d2e0e3469eb09ce62e9bbc18fdea88e973b5\",\n        \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/1b34d2e0e3469eb09ce62e9bbc18fdea88e973b5\"\n      }\n    ]\n  },\n  {\n    \"sha\": \"1b34d2e0e3469eb09ce62e9bbc18fdea88e973b5\",\n    \"node_id\": \"C_kwDOPqA0PdoAKDFiMzRkMmUwZTM0NjllYjA5Y2U2MmU5YmJjMThmZGVhODhlOTczYjU\",\n    \"commit\": {\n      \"author\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-10T21:53:45Z\"\n      },\n      \"committer\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-10T21:53:45Z\"\n      },\n      \"message\": \"estado funcional de ambos setlist y filesystem solo comandos\",\n      \"tree\": {\n        \"sha\": \"2d55f6b7265a7e48b06288b43a6fab0901aaa844\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/trees/2d55f6b7265a7e48b06288b43a6fab0901aaa844\"\n      },\n      \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/commits/1b34d2e0e3469eb09ce62e9bbc18fdea88e973b5\",\n      \"comment_count\": 0,\n      \"verification\": {\n        \"verified\": false,\n        \"reason\": \"unsigned\",\n        \"signature\": null,\n        \"payload\": null,\n        \"verified_at\": null\n      }\n    },\n    \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/1b34d2e0e3469eb09ce62e9bbc18fdea88e973b5\",\n    \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/1b34d2e0e3469eb09ce62e9bbc18fdea88e973b5\",\n    \"comments_url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/1b34d2e0e3469eb09ce62e9bbc18fdea88e973b5/comments\",\n    \"author\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"committer\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"parents\": [\n      {\n        \"sha\": \"0da2a9600f24794e151e2e0f3dc692caa84c1a37\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/0da2a9600f24794e151e2e0f3dc692caa84c1a37\",\n        \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/0da2a9600f24794e151e2e0f3dc692caa84c1a37\"\n      }\n    ]\n  },\n  {\n    \"sha\": \"0da2a9600f24794e151e2e0f3dc692caa84c1a37\",\n    \"node_id\": \"C_kwDOPqA0PdoAKDBkYTJhOTYwMGYyNDc5NGUxNTFlMmUwZjNkYzY5MmNhYTg0YzFhMzc\",\n    \"commit\": {\n      \"author\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-06T07:51:10Z\"\n      },\n      \"committer\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-06T07:51:10Z\"\n      },\n      \"message\": \"host_chatbotFinal\",\n      \"tree\": {\n        \"sha\": \"b4d8c78b7fb9fbe942d28707c0dedf5f96deca9d\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/trees/b4d8c78b7fb9fbe942d28707c0dedf5f96deca9d\"\n      },\n      \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/commits/0da2a9600f24794e151e2e0f3dc692caa84c1a37\",\n      \"comment_count\": 0,\n      \"verification\": {\n        \"verified\": false,\n        \"reason\": \"unsigned\",\n        \"signature\": null,\n        \"payload\": null,\n        \"verified_at\": null\n      }\n    },\n    \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/0da2a9600f24794e151e2e0f3dc692caa84c1a37\",\n    \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/0da2a9600f24794e151e2e0f3dc692caa84c1a37\",\n    \"comments_url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/0da2a9600f24794e151e2e0f3dc692caa84c1a37/comments\",\n    \"author\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"committer\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"parents\": [\n      {\n        \"sha\": \"91fa41ee08e6863896cdba359dff422af3628de0\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/91fa41ee08e6863896cdba359dff422af3628de0\",\n        \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/91fa41ee08e6863896cdba359dff422af3628de0\"\n      }\n    ]\n  },\n  {\n    \"sha\": \"91fa41ee08e6863896cdba359dff422af3628de0\",\n    \"node_id\": \"C_kwDOPqA0PdoAKDkxZmE0MWVlMDhlNjg2Mzg5NmNkYmEzNTlkZmY0MjJhZjM2MjhkZTA\",\n    \"commit\": {\n      \"author\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-05T04:15:12Z\"\n      },\n      \"committer\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-05T04:15:12Z\"\n      },\n      \"message\": \"cambios varios\",\n      \"tree\": {\n        \"sha\": \"04a8f5b4bd3b1864eaa874bc12a8555f809fd03a\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/trees/04a8f5b4bd3b1864eaa874bc12a8555f809fd03a\"\n      },\n      \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/commits/91fa41ee08e6863896cdba359dff422af3628de0\",\n      \"comment_count\": 0,\n      \"verification\": {\n        \"verified\": false,\n        \"reason\": \"unsigned\",\n        \"signature\": null,\n        \"payload\": null,\n        \"verified_at\": null\n      }\n    },\n    \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/91fa41ee08e6863896cdba359dff422af3628de0\",\n    \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/91fa41ee08e6863896cdba359dff422af3628de0\",\n    \"comments_url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/91fa41ee08e6863896cdba359dff422af3628de0/comments\",\n    \"author\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"committer\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"parents\": [\n      {\n        \"sha\": \"baeada0a4394edd1b579ec45890e38e2d1a744bf\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/baeada0a4394edd1b579ec45890e38e2d1a744bf\",\n        \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/baeada0a4394edd1b579ec45890e38e2d1a744bf\"\n      }\n    ]\n  },\n  {\n    \"sha\": \"baeada0a4394edd1b579ec45890e38e2d1a744bf\",\n    \"node_id\": \"C_kwDOPqA0PdoAKGJhZWFkYTBhNDM5NGVkZDFiNTc5ZWM0NTg5MGUzOGUyZDFhNzQ0YmY\",\n    \"commit\": {\n      \"author\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-05T01:14:11Z\"\n      },\n      \"committer\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-05T01:14:11Z\"\n      },\n      \"message\": \"chat\",\n      \"tree\": {\n        \"sha\": \"c3090fd1f7db73b88788b6660ccca7be26215812\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/trees/c3090fd1f7db73b88788b6660ccca7be26215812\"\n      },\n      \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/commits/baeada0a4394edd1b579ec45890e38e2d1a744bf\",\n      \"comment_count\": 0,\n      \"verification\": {\n        \"verified\": false,\n        \"reason\": \"unsigned\",\n        \"signature\": null,\n        \"payload\": null,\n        \"verified_at\": null\n      }\n    },\n    \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/baeada0a4394edd1b579ec45890e38e2d1a744bf\",\n    \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/baeada0a4394edd1b579ec45890e38e2d1a744bf\",\n    \"comments_url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/baeada0a4394edd1b579ec45890e38e2d1a744bf/comments\",\n    \"author\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"committer\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"parents\": []\n  }\n]"}]}, "jsonrpc": "2.0", "id": 9}}
{"ts": 1757566588.4643672, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 10, "method": "tools/list"}}
{"ts": 1757566588.4663672, "kind": "resp", "payload": {"result": {"tools": [{"name": "create_or_update_file", "description": "Create or update a single file in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path where to create/update the file"}, "content": {"type": "string", "description": "Content of the file"}, "message": {"type": "string", "description": "Commit message"}, "branch": {"type": "string", "description": "Branch to create/update the file in"}, "sha": {"type": "string", "description": "SHA of the file being replaced (required when updating existing files)"}}, "required": ["owner", "repo", "path", "content", "message", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_repositories", "description": "Search for GitHub repositories", "inputSchema": {"type": "object", "properties": {"query": {"type": "string", "description": "Search query (see GitHub search syntax)"}, "page": {"type": "number", "description": "Page number for pagination (default: 1)"}, "perPage": {"type": "number", "description": "Number of results per page (default: 30, max: 100)"}}, "required": ["query"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_repository", "description": "Create a new GitHub repository in your account", "inputSchema": {"type": "object", "properties": {"name": {"type": "string", "description": "Repository name"}, "description": {"type": "string", "description": "Repository description"}, "private": {"type": "boolean", "description": "Whether the repository should be private"}, "autoInit": {"type": "boolean", "description": "Initialize with README.md"}}, "required": ["name"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_contents", "description": "Get the contents of a file or directory from a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path to the file or directory"}, "branch": {"type": "string", "description": "Branch to get contents from"}}, "required": ["owner", "repo", "path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "push_files", "description": "Push multiple files to a GitHub repository in a single commit", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Branch to push to (e.g., 'main' or 'master')"}, "files": {"type": "array", "items": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false}, "description": "Array of files to push"}, "message": {"type": "string", "description": "Commit message"}}, "required": ["owner", "repo", "branch", "files", "message"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_issue", "description": "Create a new issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}}, "required": ["owner", "repo", "title"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request", "description": "Create a new pull request in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "title": {"type": "string", "description": "Pull request title"}, "body": {"type": "string", "description": "Pull request body/description"}, "head": {"type": "string", "description": "The name of the branch where your changes are implemented"}, "base": {"type": "string", "description": "The name of the branch you want the changes pulled into"}, "draft": {"type": "boolean", "description": "Whether to create the pull request as a draft"}, "maintainer_can_modify": {"type": "boolean", "description": "Whether maintainers can modify the pull request"}}, "required": ["owner", "repo", "title", "head", "base"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "fork_repository", "description": "Fork a GitHub repository to your account or specified organization", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "organization": {"type": "string", "description": "Optional: organization to fork to (defaults to your personal account)"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_branch", "description": "Create a new branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Name for the new branch"}, "from_branch": {"type": "string", "description": "Optional: source branch to create from (defaults to the repository's default branch)"}}, "required": ["owner", "repo", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_commits", "description": "Get list of commits of a branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "sha": {"type": "string"}, "page": {"type": "number"}, "perPage": {"type": "number"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_issues", "description": "List issues in a GitHub repository with filtering options", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "direction": {"type": "string", "enum": ["asc", "desc"]}, "labels": {"type": "array", "items": {"type": "string"}}, "page": {"type": "number"}, "per_page": {"type": "number"}, "since": {"type": "string"}, "sort": {"type": "string", "enum": ["created", "updated", "comments"]}, "state": {"type": "string", "enum": ["open", "closed", "all"]}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_issue", "description": "Update an existing issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}, "state": {"type": "string", "enum": ["open", "closed"]}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "add_issue_comment", "description": "Add a comment to an existing issue", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "body": {"type": "string"}}, "required": ["owner", "repo", "issue_number", "body"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_code", "description": "Search for code across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_issues", "description": "Search for issues and pull requests across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["comments", "reactions", "reactions-+1", "reactions--1", "reactions-smile", "reactions-thinking_face", "reactions-heart", "reactions-tada", "interactions", "created", "updated"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_users", "description": "Search for users on GitHub", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["followers", "repositories", "joined"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_issue", "description": "Get details of a specific issue in a GitHub repository.", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request", "description": "Get details of a specific pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_pull_requests", "description": "List and filter repository pull requests", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "state": {"type": "string", "enum": ["open", "closed", "all"], "description": "State of the pull requests to return"}, "head": {"type": "string", "description": "Filter by head user or head organization and branch name"}, "base": {"type": "string", "description": "Filter by base branch name"}, "sort": {"type": "string", "enum": ["created", "updated", "popularity", "long-running"], "description": "What to sort results by"}, "direction": {"type": "string", "enum": ["asc", "desc"], "description": "The direction of the sort"}, "per_page": {"type": "number", "description": "Results per page (max 100)"}, "page": {"type": "number", "description": "Page number of the results"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request_review", "description": "Create a review on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_id": {"type": "string", "description": "The SHA of the commit that needs a review"}, "body": {"type": "string", "description": "The body text of the review"}, "event": {"type": "string", "enum": ["APPROVE", "REQUEST_CHANGES", "COMMENT"], "description": "The review action to perform"}, "comments": {"type": "array", "items": {"anyOf": [{"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "position": {"type": "number", "description": "The position in the diff where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "position", "body"], "additionalProperties": false}, {"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "line": {"type": "number", "description": "The line number in the file where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "line", "body"], "additionalProperties": false}]}, "description": "Comments to post as part of the review (specify either position or line, not both)"}}, "required": ["owner", "repo", "pull_number", "body", "event"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "merge_pull_request", "description": "Merge a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_title": {"type": "string", "description": "Title for the automatic commit message"}, "commit_message": {"type": "string", "description": "Extra detail to append to automatic commit message"}, "merge_method": {"type": "string", "enum": ["merge", "squash", "rebase"], "description": "Merge method to use"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_files", "description": "Get the list of files changed in a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_status", "description": "Get the combined status of all status checks for a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_pull_request_branch", "description": "Update a pull request branch with the latest changes from the base branch", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "expected_head_sha": {"type": "string", "description": "The expected SHA of the pull request's HEAD ref"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_comments", "description": "Get the review comments on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_reviews", "description": "Get the reviews on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}]}, "jsonrpc": "2.0", "id": 10}}
{"ts": 1757566595.1621697, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 11, "method": "tools/call", "params": {"name": "push_files", "arguments": {"owner": "JoaquinCampos22155", "repo": "proyecto1redes_Final", "branch": "mcp/gui-05", "files": [{"path": "docs/notes/mcp-nota.txt", "content": "nota de prueba"}, {"path": "docs/notes/github_mcp_smoke.txt", "content": "ok"}], "message": "chore(mcp): add notes for testing"}}}}
{"ts": 1757566596.9265525, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "{\n  \"ref\": \"refs/heads/mcp/gui-05\",\n  \"node_id\": \"REF_kwDOPqA0PbVyZWZzL2hlYWRzL21jcC9ndWktMDU\",\n  \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/refs/heads/mcp/gui-05\",\n  \"object\": {\n    \"sha\": \"ac32f5c1b72823292df8fab080ca1a514d8caa25\",\n    \"type\": \"commit\",\n    \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/commits/ac32f5c1b72823292df8fab080ca1a514d8caa25\"\n  }\n}"}]}, "jsonrpc": "2.0", "id": 11}}
{"ts": 1757566648.6593418, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 12, "method": "tools/list"}}
{"ts": 1757566648.660674, "kind": "resp", "payload": {"result": {"tools": [{"name": "create_or_update_file", "description": "Create or update a single file in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path where to create/update the file"}, "content": {"type": "string", "description": "Content of the file"}, "message": {"type": "string", "description": "Commit message"}, "branch": {"type": "string", "description": "Branch to create/update the file in"}, "sha": {"type": "string", "description": "SHA of the file being replaced (required when updating existing files)"}}, "required": ["owner", "repo", "path", "content", "message", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_repositories", "description": "Search for GitHub repositories", "inputSchema": {"type": "object", "properties": {"query": {"type": "string", "description": "Search query (see GitHub search syntax)"}, "page": {"type": "number", "description": "Page number for pagination (default: 1)"}, "perPage": {"type": "number", "description": "Number of results per page (default: 30, max: 100)"}}, "required": ["query"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_repository", "description": "Create a new GitHub repository in your account", "inputSchema": {"type": "object", "properties": {"name": {"type": "string", "description": "Repository name"}, "description": {"type": "string", "description": "Repository description"}, "private": {"type": "boolean", "description": "Whether the repository should be private"}, "autoInit": {"type": "boolean", "description": "Initialize with README.md"}}, "required": ["name"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_contents", "description": "Get the contents of a file or directory from a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path to the file or directory"}, "branch": {"type": "string", "description": "Branch to get contents from"}}, "required": ["owner", "repo", "path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "push_files", "description": "Push multiple files to a GitHub repository in a single commit", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Branch to push to (e.g., 'main' or 'master')"}, "files": {"type": "array", "items": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false}, "description": "Array of files to push"}, "message": {"type": "string", "description": "Commit message"}}, "required": ["owner", "repo", "branch", "files", "message"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_issue", "description": "Create a new issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}}, "required": ["owner", "repo", "title"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request", "description": "Create a new pull request in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "title": {"type": "string", "description": "Pull request title"}, "body": {"type": "string", "description": "Pull request body/description"}, "head": {"type": "string", "description": "The name of the branch where your changes are implemented"}, "base": {"type": "string", "description": "The name of the branch you want the changes pulled into"}, "draft": {"type": "boolean", "description": "Whether to create the pull request as a draft"}, "maintainer_can_modify": {"type": "boolean", "description": "Whether maintainers can modify the pull request"}}, "required": ["owner", "repo", "title", "head", "base"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "fork_repository", "description": "Fork a GitHub repository to your account or specified organization", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "organization": {"type": "string", "description": "Optional: organization to fork to (defaults to your personal account)"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_branch", "description": "Create a new branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Name for the new branch"}, "from_branch": {"type": "string", "description": "Optional: source branch to create from (defaults to the repository's default branch)"}}, "required": ["owner", "repo", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_commits", "description": "Get list of commits of a branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "sha": {"type": "string"}, "page": {"type": "number"}, "perPage": {"type": "number"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_issues", "description": "List issues in a GitHub repository with filtering options", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "direction": {"type": "string", "enum": ["asc", "desc"]}, "labels": {"type": "array", "items": {"type": "string"}}, "page": {"type": "number"}, "per_page": {"type": "number"}, "since": {"type": "string"}, "sort": {"type": "string", "enum": ["created", "updated", "comments"]}, "state": {"type": "string", "enum": ["open", "closed", "all"]}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_issue", "description": "Update an existing issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}, "state": {"type": "string", "enum": ["open", "closed"]}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "add_issue_comment", "description": "Add a comment to an existing issue", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "body": {"type": "string"}}, "required": ["owner", "repo", "issue_number", "body"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_code", "description": "Search for code across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_issues", "description": "Search for issues and pull requests across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["comments", "reactions", "reactions-+1", "reactions--1", "reactions-smile", "reactions-thinking_face", "reactions-heart", "reactions-tada", "interactions", "created", "updated"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_users", "description": "Search for users on GitHub", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["followers", "repositories", "joined"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_issue", "description": "Get details of a specific issue in a GitHub repository.", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request", "description": "Get details of a specific pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_pull_requests", "description": "List and filter repository pull requests", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "state": {"type": "string", "enum": ["open", "closed", "all"], "description": "State of the pull requests to return"}, "head": {"type": "string", "description": "Filter by head user or head organization and branch name"}, "base": {"type": "string", "description": "Filter by base branch name"}, "sort": {"type": "string", "enum": ["created", "updated", "popularity", "long-running"], "description": "What to sort results by"}, "direction": {"type": "string", "enum": ["asc", "desc"], "description": "The direction of the sort"}, "per_page": {"type": "number", "description": "Results per page (max 100)"}, "page": {"type": "number", "description": "Page number of the results"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request_review", "description": "Create a review on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_id": {"type": "string", "description": "The SHA of the commit that needs a review"}, "body": {"type": "string", "description": "The body text of the review"}, "event": {"type": "string", "enum": ["APPROVE", "REQUEST_CHANGES", "COMMENT"], "description": "The review action to perform"}, "comments": {"type": "array", "items": {"anyOf": [{"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "position": {"type": "number", "description": "The position in the diff where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "position", "body"], "additionalProperties": false}, {"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "line": {"type": "number", "description": "The line number in the file where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "line", "body"], "additionalProperties": false}]}, "description": "Comments to post as part of the review (specify either position or line, not both)"}}, "required": ["owner", "repo", "pull_number", "body", "event"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "merge_pull_request", "description": "Merge a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_title": {"type": "string", "description": "Title for the automatic commit message"}, "commit_message": {"type": "string", "description": "Extra detail to append to automatic commit message"}, "merge_method": {"type": "string", "enum": ["merge", "squash", "rebase"], "description": "Merge method to use"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_files", "description": "Get the list of files changed in a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_status", "description": "Get the combined status of all status checks for a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_pull_request_branch", "description": "Update a pull request branch with the latest changes from the base branch", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "expected_head_sha": {"type": "string", "description": "The expected SHA of the pull request's HEAD ref"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_comments", "description": "Get the review comments on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_reviews", "description": "Get the reviews on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}]}, "jsonrpc": "2.0", "id": 12}}
{"ts": 1757566653.7247353, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 13, "method": "tools/call", "params": {"name": "list_commits", "arguments": {"owner": "JoaquinCampos22155", "repo": "proyecto1redes_Final", "sha": "mcp/gui-05", "page": 1, "perPage": 1}}}}
{"ts": 1757566654.1493273, "kind": "resp", "payload": {"result": {"content": [{"type": "text", "text": "[\n  {\n    \"sha\": \"ac32f5c1b72823292df8fab080ca1a514d8caa25\",\n    \"node_id\": \"C_kwDOPqA0PdoAKGFjMzJmNWMxYjcyODIzMjkyZGY4ZmFiMDgwY2ExYTUxNGQ4Y2FhMjU\",\n    \"commit\": {\n      \"author\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-11T04:56:35Z\"\n      },\n      \"committer\": {\n        \"name\": \"Joaquin Campos\",\n        \"email\": \"98112929+JoaquinCampos22155@users.noreply.github.com\",\n        \"date\": \"2025-09-11T04:56:35Z\"\n      },\n      \"message\": \"chore(mcp): add notes for testing\",\n      \"tree\": {\n        \"sha\": \"62479fc796156531cc7156f775cf9ca8025ce29f\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/trees/62479fc796156531cc7156f775cf9ca8025ce29f\"\n      },\n      \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/git/commits/ac32f5c1b72823292df8fab080ca1a514d8caa25\",\n      \"comment_count\": 0,\n      \"verification\": {\n        \"verified\": false,\n        \"reason\": \"unsigned\",\n        \"signature\": null,\n        \"payload\": null,\n        \"verified_at\": null\n      }\n    },\n    \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/ac32f5c1b72823292df8fab080ca1a514d8caa25\",\n    \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/ac32f5c1b72823292df8fab080ca1a514d8caa25\",\n    \"comments_url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/ac32f5c1b72823292df8fab080ca1a514d8caa25/comments\",\n    \"author\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"committer\": {\n      \"login\": \"JoaquinCampos22155\",\n      \"id\": 98112929,\n      \"node_id\": \"U_kgDOBdkVoQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/98112929?v=4\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/JoaquinCampos22155\",\n      \"html_url\": \"https://github.com/JoaquinCampos22155\",\n      \"followers_url\": \"https://api.github.com/users/JoaquinCampos22155/followers\",\n      \"following_url\": \"https://api.github.com/users/JoaquinCampos22155/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/JoaquinCampos22155/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/JoaquinCampos22155/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/JoaquinCampos22155/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/JoaquinCampos22155/orgs\",\n      \"repos_url\": \"https://api.github.com/users/JoaquinCampos22155/repos\",\n      \"events_url\": \"https://api.github.com/users/JoaquinCampos22155/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/JoaquinCampos22155/received_events\",\n      \"type\": \"User\",\n      \"user_view_type\": \"public\",\n      \"site_admin\": false\n    },\n    \"parents\": [\n      {\n        \"sha\": \"af63bf041bb3495913ec0b929b39760a526d82ac\",\n        \"url\": \"https://api.github.com/repos/JoaquinCampos22155/proyecto1redes_Final/commits/af63bf041bb3495913ec0b929b39760a526d82ac\",\n        \"html_url\": \"https://github.com/JoaquinCampos22155/proyecto1redes_Final/commit/af63bf041bb3495913ec0b929b39760a526d82ac\"\n      }\n    ]\n  }\n]"}]}, "jsonrpc": "2.0", "id": 13}}
{"ts": 1757566658.8795445, "kind": "req", "payload": {"jsonrpc": "2.0", "id": 14, "method": "tools/call", "params": {"name": "get_pull_request_files", "arguments": {"owner": "JoaquinCampos22155", "repo": "proyecto1redes_Final", "pull_number": 1}}}}
{"ts": 1757566659.0039425, "kind": "resp", "payload": {"jsonrpc": "2.0", "id": 14, "error": {"code": -32603, "message": "Not Found: Resource not found: Not Found"}}}
